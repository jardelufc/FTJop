package wcet.mrtc;
//import edu.uci.eecs.doc.clepsydra.loop.LoopBound;

/**
 * Simulates an extended Petri Net.
 *
 * WCET aspect: Automatically generated code containing large amounts of if
 * statements (more than 250).
 *
 * Ported from C code generated by Sea2CHaRy. This code containes a CHaRy
 * description generated from the file NSicherNeu.sea. (CHaRy is a software system
 * to support the synthesis of periodic controller applications.) The name of the
 * Pr/T-Net was NSicherNeu.
 *
 * Original C code was modified and maintained by Friedhelm Stappert
 * C-LAB, Paderborn, Germany
 * fst@c-lab.de
 *
 * Additional modifications of the original C code by Jan Gustafsson for the <a
 * href="http://www.mrtc.mdh.se/projects/wcet/benchmarks.html">Maelardalen WCET
 * Benchmarks</a>.
 */
public class PetriNet
{
    private int P1_is_marked = 3;
    private int[] P1_marking_member_0;
    private int P2_is_marked = 5;
    private int[] P2_marking_member_0;
    private int P3_is_marked = 0;
    private int[] P3_marking_member_0;
    
    public PetriNet()
    {
        P1_marking_member_0 = new int[3];
        P2_marking_member_0 = new int[5];
        P3_marking_member_0 = new int[6];
    }

    private int run()
    {
    	int             dummy_i;
    /*   dummy_i = 17; Takes too much time */
    	dummy_i = 2;

        //@LoopBound(max=2)
    	while (dummy_i > 0) {

    		dummy_i--;
    		/* Permutation for Place P1 : 0, 1, 2 */
    		/* Transition T1 */
    		if ((P1_is_marked >= 3) &&
    		    (P3_is_marked + 3 <= 6) &&
    		    (P1_marking_member_0[1] == P1_marking_member_0[2])) {

    			int            x;
    			int            y;
    			int            z;

    			x = P1_marking_member_0[0];
    			y = P1_marking_member_0[1];

    			/* Transition condition */
    			if (x < y) {

    				/* demarking of input places */
    				P1_is_marked -= 3;

    				/* preaction */
    				z = x - y;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = x;
    				P3_marking_member_0[P3_is_marked + 1] = y;
    				P3_marking_member_0[P3_is_marked + 2] = z;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P1 : 0, 2, 1 */
    		/* Transition T1 */
    		if ((P1_is_marked >= 3) &&
    		    (P3_is_marked + 3 <= 6) &&
    		    (P1_marking_member_0[2] == P1_marking_member_0[1])) {

    			int            x;
    			int            y;
    			int            z;

    			x = P1_marking_member_0[0];
    			y = P1_marking_member_0[2];

    			/* Transition condition */
    			if ((x < y)) {


    				/* demarking of input places */
    				P1_is_marked -= 3;

    				/* preaction */
    				z = x - y;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = x;
    				P3_marking_member_0[P3_is_marked + 1] = y;
    				P3_marking_member_0[P3_is_marked + 2] = z;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P1 : 1, 0, 2 */
    		/* Transition T1 */
    		if ((P1_is_marked >= 3) &&
    		    (P3_is_marked + 3 <= 6) &&
    		    (P1_marking_member_0[0] == P1_marking_member_0[2])) {

    			int            x;
    			int            y;
    			int            z;

    			x = P1_marking_member_0[1];
    			y = P1_marking_member_0[0];

    			/* Transition condition */
    			if (x < y) {


    				/* demarking of input places */
    				P1_is_marked -= 3;

    				/* preaction */
    				z = x - y;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = x;
    				P3_marking_member_0[P3_is_marked + 1] = y;
    				P3_marking_member_0[P3_is_marked + 2] = z;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P1 : 1, 2, 0 */
    		/* Transition T1 */
    		if ((P1_is_marked >= 3) &&
    		    (P3_is_marked + 3 <= 6) &&
    		    (P1_marking_member_0[2] == P1_marking_member_0[0])) {

    			int            x;
    			int            y;
    			int            z;

    			x = P1_marking_member_0[1];
    			y = P1_marking_member_0[2];

    			/* Transition condition */
    			if ((x < y)) {


    				/* demarking of input places */
    				P1_is_marked -= 3;

    				/* preaction */
    				z = x - y;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = x;
    				P3_marking_member_0[P3_is_marked + 1] = y;
    				P3_marking_member_0[P3_is_marked + 2] = z;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P1 : 2, 0, 1 */
    		/* Transition T1 */
    		if ((P1_is_marked >= 3) &&
    		    (P3_is_marked + 3 <= 6) &&
    		    (P1_marking_member_0[0] == P1_marking_member_0[1])) {
    			int            x;
    			int            y;
    			int            z;

    			x = P1_marking_member_0[2];
    			y = P1_marking_member_0[0];

    			/* Transition condition */
    			if ((x < y)) {

    				/* demarking of input places */
    				P1_is_marked -= 3;

    				/* preaction */
    				z = x - y;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = x;
    				P3_marking_member_0[P3_is_marked + 1] = y;
    				P3_marking_member_0[P3_is_marked + 2] = z;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P1 : 2, 1, 0 */
    		/* Transition T1 */
    		if ((P1_is_marked >= 3) &&
    		    (P3_is_marked + 3 <= 6) &&
    		    (P1_marking_member_0[1] == P1_marking_member_0[0])) {
    			int            x;
    			int            y;
    			int            z;

    			x = P1_marking_member_0[2];
    			y = P1_marking_member_0[1];

    			/* Transition condition */
    			if ((x < y)) {

    				/* demarking of input places */
    				P1_is_marked -= 3;

    				/* preaction */
    				z = x - y;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = x;
    				P3_marking_member_0[P3_is_marked + 1] = y;
    				P3_marking_member_0[P3_is_marked + 2] = z;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 1, 2, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    (((P3_is_marked + 3) <= 6)) &&
    		    (((P2_marking_member_0[1] == P2_marking_member_0[2])) &&
    		     ((P2_marking_member_0[1] == P2_marking_member_0[3])))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 1, 3, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    (((P3_is_marked + 3) <= 6)) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[2]))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 2, 1, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[3]))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 2, 3, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[1]))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 3, 1, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[2]))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 3, 2, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[1]))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 0, 2, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[3]))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 0, 3, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[2]))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 2, 0, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[3]))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 2, 3, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[0]))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {
    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 3, 0, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[2]))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {
    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 3, 2, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[0]))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 0, 1, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[3]))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {
    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 0, 3, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[1]))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {
    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 1, 0, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[3]))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {
    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 1, 3, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[0]))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {
    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 3, 0, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[1]))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {
    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 3, 1, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[0]))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {
    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 0, 1, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[2]))) {
    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 0, 2, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 1, 0, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 1, 2, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 2, 0, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 2, 1, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 4) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 1, 2, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 1, 3, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 1, 4, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 1, 4, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[3]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 2, 1, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 2, 3, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 2, 4, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 2, 4, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[3]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 3, 1, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 3, 2, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 3, 4, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 3, 4, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 4, 1, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 4, 1, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[3]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 4, 2, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 4, 2, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[3]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 4, 3, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 0, 4, 3, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[0];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 0, 2, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 0, 3, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 0, 4, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 0, 4, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[3]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 2, 0, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 2, 3, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 2, 4, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 2, 4, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[3]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 3, 0, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 3, 2, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 3, 4, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 3, 4, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 4, 0, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 4, 0, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[3]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 4, 2, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 4, 2, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[3]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 4, 3, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 1, 4, 3, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[1];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 0, 1, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 0, 3, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 0, 4, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 0, 4, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[3]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 1, 0, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 1, 3, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 1, 4, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 1, 4, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[3]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 3, 0, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 3, 1, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 3, 4, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 3, 4, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 4, 0, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 4, 0, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[3]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 4, 1, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 4, 1, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[3]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 4, 3, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 2, 4, 3, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[2];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 0, 1, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 0, 2, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 0, 4, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 0, 4, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 1, 0, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 1, 2, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 1, 4, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 1, 4, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 2, 0, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 2, 1, 4 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[4]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 2, 4, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 2, 4, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[4]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 4, 0, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 4, 0, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 4, 1, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 4, 1, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 4, 2, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 3, 4, 2, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[4] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[4] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[3];
    			b = P2_marking_member_0[4];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 0, 1, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 0, 1, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[3]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 0, 2, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 0, 2, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[3]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 0, 3, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 0, 3, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[0] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[0] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[0];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 1, 0, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 1, 0, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[3]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 1, 2, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 1, 2, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[3]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 1, 3, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 1, 3, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[1] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[1] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[1];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 2, 0, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 2, 0, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[3]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 2, 1, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[3];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 2, 1, 3 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[3]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 2, 3, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 2, 3, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[2] == P2_marking_member_0[3]) &&
    		     (P2_marking_member_0[2] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[2];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 3, 0, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 3, 0, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[0]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 3, 1, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[2];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 3, 1, 2 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[1]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[2]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 3, 2, 0 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[0]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_marking_member_0[0] = P2_marking_member_0[1];
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    		/* Permutation for Place P2 : 4, 3, 2, 1 */
    		/* Transition T2 */
    		if ((P2_is_marked >= 5) &&
    		    ((P3_is_marked + 3) <= 6) &&
    		    ((P2_marking_member_0[3] == P2_marking_member_0[2]) &&
    		     (P2_marking_member_0[3] == P2_marking_member_0[1]))) {

    			int            a;
    			int            b;
    			int            c;

    			a = P2_marking_member_0[4];
    			b = P2_marking_member_0[3];

    			/* Transition condition */
    			if ((b > a)) {

    				/* demarking of input places */
    				P2_is_marked -= 4;

    				/* preaction */
    				c = a + b;

    				/* marking of output places */
    				P3_marking_member_0[P3_is_marked + 0] = a;
    				P3_marking_member_0[P3_is_marked + 1] = b;
    				P3_marking_member_0[P3_is_marked + 2] = c;
    				P3_is_marked += 3;

    			}	/* end of if (Transition condition) */
    		}
    	}

    	dummy_i = 77;

    	return dummy_i;
    }

    public static void main(String[] args)
    {
        PetriNet p = new PetriNet();
        
        p.run();
    }
}
