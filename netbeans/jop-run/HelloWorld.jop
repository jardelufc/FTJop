	12607,//	length of the application in words (including this word)
	7622,//	pointer to special pointers = address of 'special' pointer
//
//	2: test.HelloWorld static fields
//
//
//	2: java.lang.Object static fields
//
//
//	2: java.lang.Character static fields
//
		0,	//	2: MAX_RADIXI
		0,	//	3: MAX_VALUEC
		0,	//	4: MIN_RADIXI
		0,	//	5: MIN_VALUEC
//
//	6: java.lang.ArithmeticException static fields
//
		0, 0,	//	6: serialVersionUIDJ
//
//	8: java.lang.NullPointerException static fields
//
		0, 0,	//	8: serialVersionUIDJ
//
//	10: com.jopdesign.sys.Startup static fields
//
		0,	//	10: varI
		0,	//	11: mem_sizeI
		0,	//	12: spm_sizeI
		0,	//	13: MAX_STACKI
		0,	//	14: spI
		0,	//	15: pcI
		0,	//	16: cpI
		0,	//	17: startedZ
//
//	18: java.lang.System static fields
//
//
//	18: java.lang.StringIndexOutOfBoundsException static fields
//
		0, 0,	//	18: serialVersionUIDJ
//
//	20: java.lang.CloneNotSupportedException static fields
//
		0, 0,	//	20: serialVersionUIDJ
//
//	22: java.lang.IllegalArgumentException static fields
//
		0, 0,	//	22: serialVersionUIDJ
//
//	24: com.jopdesign.sys.DummyHandler static fields
//
//
//	24: java.lang.ArrayStoreException static fields
//
		0, 0,	//	24: serialVersionUIDJ
//
//	26: java.lang.IndexOutOfBoundsException static fields
//
		0, 0,	//	26: serialVersionUIDJ
//
//	28: java.io.PrintStream static fields
//
//
//	28: com.jopdesign.io.SerialPort static fields
//
		0,	//	28: MASK_TDREI
		0,	//	29: MASK_RDRFI
//
//	30: java.lang.Throwable static fields
//
//
//	30: com.jopdesign.io.IOFactory static fields
//
		0,	//	30: SP_PTRI
		0,	//	31: SP_MTABI
		0,	//	32: SYS_PTRI
		0,	//	33: SYS_MTABI
		0,	//	34: ARR_PRTI
		0,	//	35: ARR_LENGTHI
		0,	//	36: interruptMaskI
//
//	37: java.io.JOPInputStream static fields
//
//
//	37: java.lang.RuntimeException static fields
//
		0, 0,	//	37: serialVersionUIDJ
//
//	39: java.io.UnsupportedEncodingException static fields
//
		0, 0,	//	39: serialVersionUIDJ
//
//	41: util.Dbg static fields
//
		0,	//	41: MAX_TMPI
//
//	42: com.jopdesign.sys.JVM static fields
//
		0,	//	42: enterCntI
//
//	43: java.lang.Runnable static fields
//
//
//	43: java.lang.StringBuilder static fields
//
		0, 0,	//	43: serialVersionUIDJ
		0,	//	45: DEFAULT_CAPACITYI
//
//	46: java.lang.Error static fields
//
		0, 0,	//	46: serialVersionUIDJ
//
//	48: joprt.RtThread static fields
//
//
//	48: com.jopdesign.io.SysDevice static fields
//
//
//	48: com.jopdesign.io.HardwareObject static fields
//
//
//	48: java.lang.NumberFormatException static fields
//
		0, 0,	//	48: serialVersionUIDJ
//
//	50: com.jopdesign.sys.GC static fields
//
		0,	//	50: USE_SCOPESZ
		0,	//	51: mem_startI
		0,	//	52: full_heap_sizeI
		0,	//	53: HANDLE_SIZEI
		0,	//	54: OFF_PTRI
		0,	//	55: OFF_MTAB_ALENI
		0,	//	56: OFF_SIZEI
		0,	//	57: OFF_TYPEI
		0,	//	58: IS_OBJI
		0,	//	59: IS_REFARRI
		0,	//	60: OFF_NEXTI
		0,	//	61: OFF_GREYI
		0,	//	62: GREY_ENDI
		0,	//	63: OFF_SPACEI
		0,	//	64: TYPICAL_OBJ_SIZEI
		0,	//	65: handle_cntI
		0,	//	66: semi_sizeI
		0,	//	67: heapStartAI
		0,	//	68: heapStartBI
		0,	//	69: useAZ
		0,	//	70: fromSpaceI
		0,	//	71: toSpaceI
		0,	//	72: copyPtrI
		0,	//	73: allocPtrI
		0,	//	74: freeListI
		0,	//	75: useListI
		0,	//	76: grayListI
		0,	//	77: addrStaticRefsI
		0,	//	78: concurrentGcZ
//
//	79: com.jopdesign.sys.Scheduler static fields
//
		0,	//	79: NO_EVENTI
		0,	//	80: EV_FIREDI
		0,	//	81: EV_WAITINGI
		0,	//	82: IDL_TICKI
		0,	//	83: TIM_VAL_ADDRI
		0,	//	84: SP_VAL_ADDRI
		0,	//	85: TIM_OFFI
//
//	86: java.lang.OutOfMemoryError static fields
//
		0, 0,	//	86: serialVersionUIDJ
//
//	88: com.jopdesign.sys.RtThreadImpl$CMPStart static fields
//
//
//	88: java.io.InputStream static fields
//
//
//	88: java.lang.StringBuffer static fields
//
		0,	//	88: DEFAULT_CAPACITYI
		0,	//	89: MAX_TMPI
//
//	90: java.lang.Integer static fields
//
		0,	//	90: MIN_VALUEI
		0,	//	91: MAX_VALUEI
		0,	//	92: SIZEI
//
//	93: java.lang.Math static fields
//
		0, 0,	//	93: ED
		0, 0,	//	95: PID
//
//	97: java.lang.CharSequence static fields
//
//
//	97: com.jopdesign.sys.SoftFloat static fields
//
//
//	97: java.lang.Exception static fields
//
		0, 0,	//	97: serialVersionUIDJ
//
//	99: util.DbgSerial static fields
//
//
//	99: util.DbgUdp static fields
//
		0,	//	99: BUF_LENI
		0,	//	100: BUF_MSKI
//
//	101: java.io.IOException static fields
//
		0, 0,	//	101: serialVersionUIDJ
//
//	103: com.jopdesign.sys.JVMHelp static fields
//
		0,	//	103: saved_spI
		0,	//	104: MAX_TMPI
//
//	105: java.io.Serializable static fields
//
//
//	105: java.lang.Float static fields
//
		0, 0,	//	105: serialVersionUIDJ
		0,	//	107: MAX_VALUEF
		0,	//	108: MIN_VALUEF
		0,	//	109: NEGATIVE_INFINITYF
		0,	//	110: POSITIVE_INFINITYF
		0,	//	111: NaNF
		0,	//	112: SIZEI
//
//	113: java.lang.String static fields
//
//
//	113: java.lang.StackOverflowError static fields
//
		0, 0,	//	113: serialVersionUIDJ
//
//	115: java.lang.NegativeArraySizeException static fields
//
		0, 0,	//	115: serialVersionUIDJ
//
//	117: java.lang.ClassCastException static fields
//
		0, 0,	//	117: serialVersionUIDJ
//
//	119: com.jopdesign.sys.Scope static fields
//
//
//	119: java.io.JOPPrintStream static fields
//
		0,	//	119: MAX_TMPI
//
//	120: java.lang.Long static fields
//
		0, 0,	//	120: serialVersionUIDJ
		0, 0,	//	122: MIN_VALUEJ
		0, 0,	//	124: MAX_VALUEJ
		0,	//	126: SIZEI
//
//	127: java.lang.IllegalStateException static fields
//
		0, 0,	//	127: serialVersionUIDJ
//
//	129: java.io.OutputStream static fields
//
//
//	129: java.lang.VirtualMachineError static fields
//
		0, 0,	//	129: serialVersionUIDJ
//
//	131: java.lang.ArrayIndexOutOfBoundsException static fields
//
		0, 0,	//	131: serialVersionUIDJ
//
//	133: com.jopdesign.sys.RtThreadImpl static fields
//
		0,	//	133: MIN_PRIORITYI
		0,	//	134: NORM_PRIORITYI
		0,	//	135: MAX_PRIORITYI
		0,	//	136: RT_BASEI
		0,	//	137: RT_IDLEI
		0,	//	138: CREATEDI
		0,	//	139: READYI
		0,	//	140: WAITINGI
		0,	//	141: DEADI
		0,	//	142: initDoneZ
		0,	//	143: missionZ
		0,	//	144: startTimeI
		0,	//	145: MIN_USI
//
//	146: test.HelloWorld static reference fields
//
//
//	146: java.lang.Object static reference fields
//
//
//	146: java.lang.Character static reference fields
//
//
//	146: java.lang.ArithmeticException static reference fields
//
//
//	146: java.lang.NullPointerException static reference fields
//
//
//	146: com.jopdesign.sys.Startup static reference fields
//
		0,	//	146: stack[I
		0,	//	147: cpuStart[Ljava/lang/Runnable;
//
//	148: java.lang.System static reference fields
//
		0,	//	148: outLjava/io/PrintStream;
		0,	//	149: inLjava/io/InputStream;
		0,	//	150: errLjava/io/PrintStream;
//
//	151: java.lang.StringIndexOutOfBoundsException static reference fields
//
//
//	151: java.lang.CloneNotSupportedException static reference fields
//
//
//	151: java.lang.IllegalArgumentException static reference fields
//
//
//	151: com.jopdesign.sys.DummyHandler static reference fields
//
//
//	151: java.lang.ArrayStoreException static reference fields
//
//
//	151: java.lang.IndexOutOfBoundsException static reference fields
//
//
//	151: java.io.PrintStream static reference fields
//
//
//	151: com.jopdesign.io.SerialPort static reference fields
//
//
//	151: java.lang.Throwable static reference fields
//
//
//	151: com.jopdesign.io.IOFactory static reference fields
//
		0,	//	151: singleLcom/jopdesign/io/IOFactory;
//
//	152: java.io.JOPInputStream static reference fields
//
//
//	152: java.lang.RuntimeException static reference fields
//
//
//	152: java.io.UnsupportedEncodingException static reference fields
//
//
//	152: util.Dbg static reference fields
//
		0,	//	152: stLutil/Dbg;
		0,	//	153: tmp[I
//
//	154: com.jopdesign.sys.JVM static reference fields
//
//
//	154: java.lang.Runnable static reference fields
//
//
//	154: java.lang.StringBuilder static reference fields
//
//
//	154: java.lang.Error static reference fields
//
//
//	154: joprt.RtThread static reference fields
//
//
//	154: com.jopdesign.io.SysDevice static reference fields
//
//
//	154: com.jopdesign.io.HardwareObject static reference fields
//
//
//	154: java.lang.NumberFormatException static reference fields
//
//
//	154: com.jopdesign.sys.GC static reference fields
//
		0,	//	154: mutexLjava/lang/Object;
		0,	//	155: roots[I
		0,	//	156: OOMErrorLjava/lang/OutOfMemoryError;
//
//	157: com.jopdesign.sys.Scheduler static reference fields
//
		0,	//	157: sysLcom/jopdesign/io/SysDevice;
		0,	//	158: sched[Lcom/jopdesign/sys/Scheduler;
//
//	159: java.lang.OutOfMemoryError static reference fields
//
//
//	159: com.jopdesign.sys.RtThreadImpl$CMPStart static reference fields
//
//
//	159: java.io.InputStream static reference fields
//
//
//	159: java.lang.StringBuffer static reference fields
//
		0,	//	159: tmp[C
//
//	160: java.lang.Integer static reference fields
//
		0,	//	160: digits[C
//
//	161: java.lang.Math static reference fields
//
//
//	161: java.lang.CharSequence static reference fields
//
//
//	161: com.jopdesign.sys.SoftFloat static reference fields
//
//
//	161: java.lang.Exception static reference fields
//
//
//	161: util.DbgSerial static reference fields
//
//
//	161: util.DbgUdp static reference fields
//
//
//	161: java.io.IOException static reference fields
//
//
//	161: com.jopdesign.sys.JVMHelp static reference fields
//
		0,	//	161: ih[[Ljava/lang/Runnable;
		0,	//	162: dhLjava/lang/Runnable;
		0,	//	163: SOErrorLjava/lang/StackOverflowError;
		0,	//	164: NPExcLjava/lang/NullPointerException;
		0,	//	165: ABExcLjava/lang/ArrayIndexOutOfBoundsException;
		0,	//	166: ArithExcLjava/lang/ArithmeticException;
		0,	//	167: CCExcLjava/lang/ClassCastException;
		0,	//	168: tmp[I
//
//	169: java.io.Serializable static reference fields
//
//
//	169: java.lang.Float static reference fields
//
//
//	169: java.lang.String static reference fields
//
//
//	169: java.lang.StackOverflowError static reference fields
//
//
//	169: java.lang.NegativeArraySizeException static reference fields
//
//
//	169: java.lang.ClassCastException static reference fields
//
//
//	169: com.jopdesign.sys.Scope static reference fields
//
//
//	169: java.io.JOPPrintStream static reference fields
//
		0,	//	169: tmp[I
//
//	170: java.lang.Long static reference fields
//
		0,	//	170: digits[C
//
//	171: java.lang.IllegalStateException static reference fields
//
//
//	171: java.io.OutputStream static reference fields
//
//
//	171: java.lang.VirtualMachineError static reference fields
//
//
//	171: java.lang.ArrayIndexOutOfBoundsException static reference fields
//
//
//	171: com.jopdesign.sys.RtThreadImpl static reference fields
//
		0,	//	171: headLcom/jopdesign/sys/RtThreadImpl;
		0,	//	172: sysLcom/jopdesign/io/SysDevice;
//	test.HelloWorld
//	173: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	177: main([Ljava/lang/String;)V
	-536833006,	 // (0xe0009412) // 224 (0xe0) 0 (0x00) 148 (0x94) 18 (0x12)  CRC: 0x78191AEF
	45481987,	 // (0x2b60003) // 2 (0x02) 182 (0xb6) 0 (0x00) 3 (0x03)  CRC: 0xDEC3FD43
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x4F879755
	1334286165,	// CRC do Jardel: 0x4F879755
	0,	//	synchronized?, exception table length
//	java.lang.Object
//	182: <init>()V
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xB9FF90C9
	-1174433591,	// CRC do Jardel: 0xB9FF90C9
	0,	//	synchronized?, exception table length
//	185: equals(Ljava/lang/Object;)Z
	707503616,	 // (0x2a2ba600) // 42 (0x2a) 43 (0x2b) 166 (0xa6) 0 (0x00)  CRC: 0xBC3972E3
	117745408,	 // (0x704a700) // 7 (0x07) 4 (0x04) 167 (0xa7) 0 (0x00)  CRC: 0x8701A8E0
	67349504,	 // (0x403ac00) // 4 (0x04) 3 (0x03) 172 (0xac)  CRC: 0xE979C82F
	-377894865,	// CRC do Jardel: 0xE979C82F
	0,	//	synchronized?, exception table length
//	190: hashCode()I
	719170560,	 // (0x2addac00) // 42 (0x2a) 221 (0xdd) 172 (0xac)  CRC: 0xA7A3E992
	-1482430062,	// CRC do Jardel: 0xA7A3E992
	0,	//	synchronized?, exception table length
//	193: toString()Ljava/lang/String;
	-1157627303,	 // (0xbb000259) // 187 (0xbb) 0 (0x00) 2 (0x02) 89 (0x59)  CRC: 0x9644A05A
	-1224735982,	 // (0xb7000312) // 183 (0xb7) 0 (0x00) 3 (0x03) 18 (0x12)  CRC: 0xFF785959
	79036421,	 // (0x4b60005) // 4 (0x04) 182 (0xb6) 0 (0x00) 5 (0x05)  CRC: 0x663DF9AF
	716570630,	 // (0x2ab60006) // 42 (0x2a) 182 (0xb6) 0 (0x00) 6 (0x06)  CRC: 0x97122E76
	-1241512010,	 // (0xb60007b6) // 182 (0xb6) 0 (0x00) 7 (0x07) 182 (0xb6)  CRC: 0x3F0350E6
	569344,	 // (0x8b000) // 0 (0x00) 8 (0x08) 176 (0xb0)  CRC: 0x34453C6C
	876952684,	// CRC do Jardel: 0x34453C6C
	0,	//	synchronized?, exception table length
//	201: clone()Ljava/lang/Object;
	-1157625511,	 // (0xbb000959) // 187 (0xbb) 0 (0x00) 9 (0x09) 89 (0x59)  CRC: 0x9AE831EB
	302692096,	 // (0x120ab700) // 18 (0x12) 10 (0x0a) 183 (0xb7) 0 (0x00)  CRC: 0x174DD6C2
	197066752,	 // (0xbbf0000) // 11 (0x0b) 191 (0xbf)  CRC: 0xD33530D9
	-751488807,	// CRC do Jardel: 0xD33530D9
	0,	//	synchronized?, exception table length
//	206: getClass()Ljava/lang/Class;
	-1157624743,	 // (0xbb000c59) // 187 (0xbb) 0 (0x00) 12 (0x0c) 89 (0x59)  CRC: 0x9C522F70
	302888704,	 // (0x120db700) // 18 (0x12) 13 (0x0d) 183 (0xb7) 0 (0x00)  CRC: 0x56497D5A
	247398400,	 // (0xebf0000) // 14 (0x0e) 191 (0xbf)  CRC: 0x9775C755
	-1753888939,	// CRC do Jardel: 0x9775C755
	0,	//	synchronized?, exception table length
//	java.lang.Character
//	211: <init>(C)V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	706458880,	 // (0x2a1bb500) // 42 (0x2a) 27 (0x1b) 181 (0xb5) 0 (0x00)  CRC: 0x220FAC03
	11599872,	 // (0xb10000) // 0 (0x00) 177 (0xb1)  CRC: 0x5D5A5368
	1566200680,	// CRC do Jardel: 0x5D5A5368
	0,	//	synchronized?, exception table length
//	216: charValue()C
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x03DD4804
	64833540,	// CRC do Jardel: 0x03DD4804
	0,	//	synchronized?, exception table length
//	220: digit(CI)I
	454036127,	 // (0x1b100a9f) // 27 (0x1b) 16 (0x10) 10 (0x0a) 159 (0x9f)  CRC: 0xCEE5C0EB
	899840,	 // (0xdbb00) // 0 (0x00) 13 (0x0d) 187 (0xbb) 0 (0x00)  CRC: 0x1F1ACDEF
	39391747,	 // (0x2591203) // 2 (0x02) 89 (0x59) 18 (0x12) 3 (0x03)  CRC: 0x5F535F1C
	-1224735553,	 // (0xb70004bf) // 183 (0xb7) 0 (0x00) 4 (0x04) 191 (0xbf)  CRC: 0xC5421284
	440209438,	 // (0x1a3d101e) // 26 (0x1a) 61 (0x3d) 16 (0x10) 30 (0x1e)  CRC: 0xF5DB8AAB
	480444430,	 // (0x1ca3000e) // 28 (0x1c) 163 (0xa3) 0 (0x00) 14 (0x0e)  CRC: 0xA345BE2C
	470825379,	 // (0x1c1039a3) // 28 (0x1c) 16 (0x10) 57 (0x39) 163 (0xa3)  CRC: 0x4090D0AE
	531472,	 // (0x81c10) // 0 (0x00) 8 (0x08) 28 (0x1c) 16 (0x10)  CRC: 0x5784B2C3
	811904002,	 // (0x3064ac02) // 48 (0x30) 100 (0x64) 172 (0xac) 2 (0x02)  CRC: 0x01F9D42D
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x94E09BEF
	-1797219345,	// CRC do Jardel: 0x94E09BEF
	0,	//	synchronized?, exception table length
//	232: equals(Ljava/lang/Object;)Z
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	734003205,	 // (0x2bc00005) // 43 (0x2b) 192 (0xc0) 0 (0x00) 5 (0x05)  CRC: 0x17C49A89
	-1275068256,	 // (0xb40000a0) // 180 (0xb4) 0 (0x00) 0 (0x00) 160 (0xa0)  CRC: 0x671E0DED
	459943,	 // (0x704a7) // 0 (0x00) 7 (0x07) 4 (0x04) 167 (0xa7)  CRC: 0xB9D525F9
	263084,	 // (0x403ac) // 0 (0x00) 4 (0x04) 3 (0x03) 172 (0xac)  CRC: 0x8D6340CF
	-1922875185,	// CRC do Jardel: 0x8D6340CF
	0,	//	synchronized?, exception table length
//	239: hashCode()I
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x03DD4804
	64833540,	// CRC do Jardel: 0x03DD4804
	0,	//	synchronized?, exception table length
//	243: isDigit(C)Z
	440143902,	 // (0x1a3c101e) // 26 (0x1a) 60 (0x3c) 16 (0x10) 30 (0x1e)  CRC: 0x4F9EDB6D
	463667211,	 // (0x1ba3000b) // 27 (0x1b) 163 (0xa3) 0 (0x00) 11 (0x0b)  CRC: 0x57E20AF4
	454048163,	 // (0x1b1039a3) // 27 (0x1b) 16 (0x10) 57 (0x39) 163 (0xa3)  CRC: 0x5AAB6C14
	328876,	 // (0x504ac) // 0 (0x00) 5 (0x05) 4 (0x04) 172 (0xac)  CRC: 0x10CB2743
	61603840,	 // (0x3ac0000) // 3 (0x03) 172 (0xac)  CRC: 0x2F6C6A3C
	795634236,	// CRC do Jardel: 0x2F6C6A3C
	0,	//	synchronized?, exception table length
//	250: isLowerCase(C)Z
	440143969,	 // (0x1a3c1061) // 26 (0x1a) 60 (0x3c) 16 (0x10) 97 (0x61)  CRC: 0x6618460B
	463667211,	 // (0x1ba3000b) // 27 (0x1b) 163 (0xa3) 0 (0x00) 11 (0x0b)  CRC: 0x49828DA3
	454064803,	 // (0x1b107aa3) // 27 (0x1b) 16 (0x10) 122 (0x7a) 163 (0xa3)  CRC: 0x7E5585E8
	328876,	 // (0x504ac) // 0 (0x00) 5 (0x05) 4 (0x04) 172 (0xac)  CRC: 0x37AFFE5C
	61603840,	 // (0x3ac0000) // 3 (0x03) 172 (0xac)  CRC: 0x6CCF1A1E
	1825511966,	// CRC do Jardel: 0x6CCF1A1E
	0,	//	synchronized?, exception table length
//	257: isUpperCase(C)Z
	440143937,	 // (0x1a3c1041) // 26 (0x1a) 60 (0x3c) 16 (0x10) 65 (0x41)  CRC: 0x8CF100FA
	463667211,	 // (0x1ba3000b) // 27 (0x1b) 163 (0xa3) 0 (0x00) 11 (0x0b)  CRC: 0x16F2DF82
	454056611,	 // (0x1b105aa3) // 27 (0x1b) 16 (0x10) 90 (0x5a) 163 (0xa3)  CRC: 0xBB9C75C8
	328876,	 // (0x504ac) // 0 (0x00) 5 (0x05) 4 (0x04) 172 (0xac)  CRC: 0x1EB98058
	61603840,	 // (0x3ac0000) // 3 (0x03) 172 (0xac)  CRC: 0xB7D63661
	-1210698143,	// CRC do Jardel: 0xB7D63661
	0,	//	synchronized?, exception table length
//	264: toLowerCase(C)C
	440143969,	 // (0x1a3c1061) // 26 (0x1a) 60 (0x3c) 16 (0x10) 97 (0x61)  CRC: 0x6618460B
	463667211,	 // (0x1ba3000b) // 27 (0x1b) 163 (0xa3) 0 (0x00) 11 (0x0b)  CRC: 0x49828DA3
	454064803,	 // (0x1b107aa3) // 27 (0x1b) 16 (0x10) 122 (0x7a) 163 (0xa3)  CRC: 0x7E5585E8
	334508,	 // (0x51aac) // 0 (0x00) 5 (0x05) 26 (0x1a) 172 (0xac)  CRC: 0x2033B906
	272702371,	 // (0x10411ba3) // 16 (0x10) 65 (0x41) 27 (0x1b) 163 (0xa3)  CRC: 0xDCA6B7DA
	989968,	 // (0xf1b10) // 0 (0x00) 15 (0x0f) 27 (0x1b) 16 (0x10)  CRC: 0x367BB334
	1520631817,	 // (0x5aa30009) // 90 (0x5a) 163 (0xa3) 0 (0x00) 9 (0x09)  CRC: 0x24F7185C
	454041696,	 // (0x1b102060) // 27 (0x1b) 16 (0x10) 32 (0x20) 96 (0x60)  CRC: 0x8F9352D5
	-1834214740,	 // (0x92ac1aac) // 146 (0x92) 172 (0xac) 26 (0x1a) 172 (0xac)  CRC: 0xDFB2BAC7
	-541934905,	// CRC do Jardel: 0xDFB2BAC7
	0,	//	synchronized?, exception table length
//	275: toString()Ljava/lang/String;
	-1157626279,	 // (0xbb000659) // 187 (0xbb) 0 (0x00) 6 (0x06) 89 (0x59)  CRC: 0x91261246
	79431001,	 // (0x4bc0559) // 4 (0x04) 188 (0xbc) 5 (0x05) 89 (0x59)  CRC: 0x47D60978
	53130240,	 // (0x32ab400) // 3 (0x03) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x1AA93963
	5571332,	 // (0x550304) // 0 (0x00) 85 (0x55) 3 (0x03) 4 (0x04)  CRC: 0x1B49E7FC
	-1224734800,	 // (0xb70007b0) // 183 (0xb7) 0 (0x00) 7 (0x07) 176 (0xb0)  CRC: 0x62C4B8FC
	1657059580,	// CRC do Jardel: 0x62C4B8FC
	0,	//	synchronized?, exception table length
//	282: toUpperCase(C)C
	440143969,	 // (0x1a3c1061) // 26 (0x1a) 60 (0x3c) 16 (0x10) 97 (0x61)  CRC: 0x6618460B
	463667215,	 // (0x1ba3000f) // 27 (0x1b) 163 (0xa3) 0 (0x00) 15 (0x0f)  CRC: 0x3577C1A6
	454064803,	 // (0x1b107aa3) // 27 (0x1b) 16 (0x10) 122 (0x7a) 163 (0xa3)  CRC: 0x1413EB77
	596752,	 // (0x91b10) // 0 (0x00) 9 (0x09) 27 (0x1b) 16 (0x10)  CRC: 0xCF587922
	543462060,	 // (0x206492ac) // 32 (0x20) 100 (0x64) 146 (0x92) 172 (0xac)  CRC: 0xC82238E6
	272702371,	 // (0x10411ba3) // 16 (0x10) 65 (0x41) 27 (0x1b) 163 (0xa3)  CRC: 0x313E9FA3
	727824,	 // (0xb1b10) // 0 (0x00) 11 (0x0b) 27 (0x1b) 16 (0x10)  CRC: 0x20BE40C8
	1520631813,	 // (0x5aa30005) // 90 (0x5a) 163 (0xa3) 0 (0x00) 5 (0x05)  CRC: 0x37B3D9A8
	447486636,	 // (0x1aac1aac) // 26 (0x1a) 172 (0xac) 26 (0x1a) 172 (0xac)  CRC: 0x4204B619
	1107605017,	// CRC do Jardel: 0x4204B619
	0,	//	synchronized?, exception table length
//	java.lang.ArithmeticException
//	293: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	297: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	java.lang.NullPointerException
//	301: <init>()V
	705823159,	 // (0x2a1201b7) // 42 (0x2a) 18 (0x12) 1 (0x01) 183 (0xb7)  CRC: 0xA14B6189
	176384,	 // (0x2b100) // 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0x793FF3E5
	2034234341,	// CRC do Jardel: 0x793FF3E5
	0,	//	synchronized?, exception table length
//	305: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	com.jopdesign.sys.Startup
//	309: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	313: boot()V
	51415250,	 // (0x31088d2) // 3 (0x03) 16 (0x10) 136 (0x88) 210 (0xd2)  CRC: 0xC37A3240
	277271450,	 // (0x1086d39a) // 16 (0x10) 134 (0x86) 211 (0xd3) 154 (0x9a)  CRC: 0x54135B97
	3474355,	 // (0x3503b3) // 0 (0x00) 53 (0x35) 3 (0x03) 179 (0xb3)  CRC: 0xA93510A7
	1161216,	 // (0x11b800) // 0 (0x00) 17 (0x11) 184 (0xb8) 0 (0x00)  CRC: 0xB0D087A5
	68289976,	 // (0x41205b8) // 4 (0x04) 18 (0x12) 5 (0x05) 184 (0xb8)  CRC: 0x88A9C4E6
	439040,	 // (0x6b300) // 0 (0x00) 6 (0x06) 179 (0xb3) 0 (0x00)  CRC: 0xF3E51141
	201570304,	 // (0xc03b800) // 12 (0x0c) 3 (0x03) 184 (0xb8) 0 (0x00)  CRC: 0xDC4914DF
	112394251,	 // (0x6b3000b) // 6 (0x06) 179 (0xb3) 0 (0x00) 11 (0x0b)  CRC: 0x43E7BCDD
	80952242,	 // (0x4d33bb2) // 4 (0x04) 211 (0xd3) 59 (0x3b) 178 (0xb2)  CRC: 0xD705FC1D
	727559,	 // (0xb1a07) // 0 (0x00) 11 (0x0b) 26 (0x1a) 7 (0x07)  CRC: 0x2F8E510E
	1622671367,	 // (0x60b80007) // 96 (0x60) 184 (0xb8) 0 (0x00) 7 (0x07)  CRC: 0xDE5074B0
	-1207957320,	 // (0xb80008b8) // 184 (0xb8) 0 (0x00) 8 (0x08) 184 (0xb8)  CRC: 0x8CE93298
	591027,	 // (0x904b3) // 0 (0x00) 9 (0x09) 4 (0x04) 179 (0xb3)  CRC: 0x9AC6E2A2
	1161216,	 // (0x11b800) // 0 (0x00) 17 (0x11) 184 (0xb8) 0 (0x00)  CRC: 0x37DE7D45
	179830795,	 // (0xab8000b) // 10 (0x0a) 184 (0xb8) 0 (0x00) 11 (0x0b)  CRC: 0x4D3D032C
	68192722,	 // (0x41089d2) // 4 (0x04) 16 (0x10) 137 (0x89) 210 (0xd2)  CRC: 0xA5A0404B
	68190418,	 // (0x41080d2) // 4 (0x04) 16 (0x10) 128 (0x80) 210 (0xd2)  CRC: 0xB6A7AF19
	277271355,	 // (0x1086d33b) // 16 (0x10) 134 (0x86) 211 (0xd3) 59 (0x3b)  CRC: 0xF279FC4E
	446300180,	 // (0x1a9a0014) // 26 (0x1a) 154 (0x9a) 0 (0x00) 20 (0x14)  CRC: 0xEDFA069D
	80952090,	 // (0x4d33b1a) // 4 (0x04) 211 (0xd3) 59 (0x3b) 26 (0x1a)  CRC: 0xAE5DF295
	107008827,	 // (0x660d33b) // 6 (0x06) 96 (0x60) 211 (0xd3) 59 (0x3b)  CRC: 0x0D5BCA65
	52092600,	 // (0x31adeb8) // 3 (0x03) 26 (0x1a) 222 (0xde) 184 (0xb8)  CRC: 0x94D77904
	894720,	 // (0xda700) // 0 (0x00) 13 (0x0d) 167 (0xa7) 0 (0x00)  CRC: 0x5A27B3E7
	484442259,	 // (0x1ce00093) // 28 (0x1c) 224 (0xe0) 0 (0x00) 147 (0x93)  CRC: 0xED63E664
	436495410,	 // (0x1a046432) // 26 (0x1a) 4 (0x04) 100 (0x64) 50 (0x32)  CRC: 0xFF23000F
	-973074464,	 // (0xc6000fe0) // 198 (0xc6) 0 (0x00) 15 (0x0f) 224 (0xe0)  CRC: 0x5F8D6D90
	9640452,	 // (0x931a04) // 0 (0x00) 147 (0x93) 26 (0x1a) 4 (0x04)  CRC: 0xF2F6857C
	1681045760,	 // (0x6432b900) // 100 (0x64) 50 (0x32) 185 (0xb9) 0 (0x00)  CRC: 0x445FD1B1
	234946727,	 // (0xe0100a7) // 14 (0x0e) 1 (0x01) 0 (0x00) 167 (0xa7)  CRC: 0xCBEE8CCE
	45312,	 // (0xb100) // 0 (0x00) 0 (0x00) 177 (0xb1)  CRC: 0xA2E3C7C1
	-1562130495,	// CRC do Jardel: 0xA2E3C7C1
	0,	//	synchronized?, exception table length
//	345: msg()V
	303020032,	 // (0x120fb800) // 18 (0x12) 15 (0x0f) 184 (0xb8) 0 (0x00)  CRC: 0x3C18A21E
	280035328,	 // (0x10b10000) // 16 (0x10) 177 (0xb1)  CRC: 0xD59977DF
	-711362593,	// CRC do Jardel: 0xD59977DF
	0,	//	synchronized?, exception table length
//	349: setRunnable(Ljava/lang/Runnable;I)V
	-536833253,	 // (0xe000931b) // 224 (0xe0) 0 (0x00) 147 (0x93) 27 (0x1b)  CRC: 0x58955FC7
	710127872,	 // (0x2a53b100) // 42 (0x2a) 83 (0x53) 177 (0xb1)  CRC: 0xD892C551
	-661469871,	// CRC do Jardel: 0xD892C551
	0,	//	synchronized?, exception table length
//	353: getRamSize(I)I
	54270467,	 // (0x33c1a03) // 3 (0x03) 60 (0x3c) 26 (0x1a) 3 (0x03)  CRC: 0x8254AE3F
	1624325379,	 // (0x60d13d03) // 96 (0x60) 209 (0xd1) 61 (0x3d) 3 (0x03)  CRC: 0xB44334DE
	1008343904,	 // (0x3c1a1b60) // 60 (0x3c) 26 (0x1a) 27 (0x1b) 96 (0x60)  CRC: 0x1A6696A3
	-784461294,	 // (0xd13e1212) // 209 (0xd1) 62 (0x3e) 18 (0x12) 18 (0x12)  CRC: 0x6F6DD823
	438001874,	 // (0x1a1b60d2) // 26 (0x1a) 27 (0x1b) 96 (0x60) 210 (0xd2)  CRC: 0xADCC14CC
	438001873,	 // (0x1a1b60d1) // 26 (0x1a) 27 (0x1b) 96 (0x60) 209 (0xd1)  CRC: 0x218F113F
	303210240,	 // (0x12129f00) // 18 (0x12) 18 (0x12) 159 (0x9f) 0 (0x00)  CRC: 0xF00B7BD6
	111607858,	 // (0x6a70032) // 6 (0x06) 167 (0xa7) 0 (0x00) 50 (0x32)  CRC: 0xCA2F12F5
	303241755,	 // (0x12131a1b) // 18 (0x12) 19 (0x13) 26 (0x1a) 27 (0x1b)  CRC: 0x755EEBF7
	1624381979,	 // (0x60d21a1b) // 96 (0x60) 210 (0xd2) 26 (0x1a) 27 (0x1b)  CRC: 0x204FFD8E
	1624314387,	 // (0x60d11213) // 96 (0x60) 209 (0xd1) 18 (0x12) 19 (0x13)  CRC: 0x08BC9881
	-1627388249,	 // (0x9f0006a7) // 159 (0x9f) 0 (0x00) 6 (0x06) 167 (0xa7)  CRC: 0x06D04008
	2104217,	 // (0x201b99) // 0 (0x00) 32 (0x20) 27 (0x1b) 153 (0x99)  CRC: 0x65A632FC
	924163,	 // (0xe1a03) // 0 (0x00) 14 (0x0e) 26 (0x1a) 3 (0x03)  CRC: 0x7B51D6EF
	1624317087,	 // (0x60d11c9f) // 96 (0x60) 209 (0xd1) 28 (0x1c) 159 (0x9f)  CRC: 0xF931DFF6
	435968,	 // (0x6a700) // 0 (0x00) 6 (0x06) 167 (0xa7) 0 (0x00)  CRC: 0xA274B9B7
	287119899,	 // (0x111d1a1b) // 17 (0x11) 29 (0x1d) 26 (0x1a) 27 (0x1b)  CRC: 0xD516BE53
	1624382225,	 // (0x60d21b11) // 96 (0x60) 210 (0xd2) 27 (0x1b) 17 (0x11)  CRC: 0x7487E836
	8413244,	 // (0x80603c) // 0 (0x00) 128 (0x80) 96 (0x60) 60 (0x3c)  CRC: 0xA9838470
	-1476412132,	 // (0xa7ffbd1c) // 167 (0xa7) 255 (0xff) 189 (0xbd) 28 (0x1c)  CRC: 0xB1C19153
	436429010,	 // (0x1a0360d2) // 26 (0x1a) 3 (0x03) 96 (0x60) 210 (0xd2)  CRC: 0xA97646D1
	464257024,	 // (0x1bac0000) // 27 (0x1b) 172 (0xac)  CRC: 0x863CF2F3
	-2042825997,	// CRC do Jardel: 0x863CF2F3
	0,	//	synchronized?, exception table length
//	377: getSpeed()I
	54199100,	 // (0x33b033c) // 3 (0x03) 59 (0x3b) 3 (0x03) 60 (0x3c)  CRC: 0x5F99DDB9
	276943112,	 // (0x1081d108) // 16 (0x10) 129 (0x81) 209 (0xd1) 8 (0x08)  CRC: 0x0FF635C0
	1614614657,	 // (0x603d1081) // 96 (0x60) 61 (0x3d) 16 (0x10) 129 (0x81)  CRC: 0x413FCD25
	-786668388,	 // (0xd11c649c) // 209 (0xd1) 28 (0x1c) 100 (0x64) 156 (0x9c)  CRC: 0x25A0D39C
	436223,	 // (0x6a7ff) // 0 (0x00) 6 (0x06) 167 (0xa7) 255 (0xff)  CRC: 0x94AD18E5
	-133136175,	 // (0xf81080d1) // 248 (0xf8) 16 (0x10) 128 (0x80) 209 (0xd1)  CRC: 0xB575B255
	991694880,	 // (0x3b1c1020) // 59 (0x3b) 28 (0x1c) 16 (0x10) 32 (0x20)  CRC: 0xE7741D60
	1614614657,	 // (0x603d1081) // 96 (0x60) 61 (0x3d) 16 (0x10) 129 (0x81)  CRC: 0x91EA8762
	-786668388,	 // (0xd11c649c) // 209 (0xd1) 28 (0x1c) 100 (0x64) 156 (0x9c)  CRC: 0x653176BF
	436223,	 // (0x6a7ff) // 0 (0x00) 6 (0x06) 167 (0xa7) 255 (0xff)  CRC: 0x15C83135
	-133136175,	 // (0xf81080d1) // 248 (0xf8) 16 (0x10) 128 (0x80) 209 (0xd1)  CRC: 0xED134505
	1008409188,	 // (0x3c1b1a64) // 60 (0x3c) 27 (0x1b) 26 (0x1a) 100 (0x64)  CRC: 0x440E612B
	269508616,	 // (0x10106008) // 16 (0x10) 16 (0x10) 96 (0x60) 8 (0x08)  CRC: 0x4FF0DC04
	2058092544,	 // (0x7aac0000) // 122 (0x7a) 172 (0xac)  CRC: 0x2517B070
	622309488,	// CRC do Jardel: 0x2517B070
	0,	//	synchronized?, exception table length
//	393: version()V
	272553275,	 // (0x103ed53b) // 16 (0x10) 62 (0x3e) 213 (0xd5) 59 (0x3b)  CRC: 0x16507F2C
	437392288,	 // (0x1a1213a0) // 26 (0x1a) 18 (0x12) 19 (0x13) 160 (0xa0)  CRC: 0xBD923FB5
	462912,	 // (0x71040) // 0 (0x00) 7 (0x07) 16 (0x10) 64 (0x40)  CRC: 0xCCDC9A5E
	-717549035,	 // (0xd53b1215) // 213 (0xd5) 59 (0x3b) 18 (0x12) 21 (0x15)  CRC: 0x077C6BD1
	-1207955430,	 // (0xb800101a) // 184 (0xb8) 0 (0x00) 16 (0x10) 26 (0x1a)  CRC: 0xFDD5746C
	303276032,	 // (0x1213a000) // 18 (0x12) 19 (0x13) 160 (0xa0) 0 (0x00)  CRC: 0xEF647694
	185734840,	 // (0xb1216b8) // 11 (0x0b) 18 (0x12) 22 (0x16) 184 (0xb8)  CRC: 0x50139E23
	1091328,	 // (0x10a700) // 0 (0x00) 16 (0x10) 167 (0xa7) 0 (0x00)  CRC: 0x93DEA0AF
	119191552,	 // (0x71ab800) // 7 (0x07) 26 (0x1a) 184 (0xb8) 0 (0x00)  CRC: 0x378BEBA4
	387061944,	 // (0x171218b8) // 23 (0x17) 18 (0x12) 24 (0x18) 184 (0xb8)  CRC: 0xAB2F15CD
	1095680,	 // (0x10b800) // 0 (0x00) 16 (0x10) 184 (0xb8) 0 (0x00)  CRC: 0xDA3F6BD2
	423369656,	 // (0x193c1bb8) // 25 (0x19) 60 (0x3c) 27 (0x1b) 184 (0xb8)  CRC: 0xAB8E0E5C
	1511962,	 // (0x17121a) // 0 (0x00) 23 (0x17) 18 (0x12) 26 (0x1a)  CRC: 0x9A96B8D2
	-1207955278,	 // (0xb80010b2) // 184 (0xb8) 0 (0x00) 16 (0x10) 178 (0xb2)  CRC: 0x409F50D7
	725252,	 // (0xb1104) // 0 (0x00) 11 (0x0b) 17 (0x11) 4 (0x04)  CRC: 0xEDCEE0C8
	7079784,	 // (0x6c0768) // 0 (0x00) 108 (0x6c) 7 (0x07) 104 (0x68)  CRC: 0xA57C8612
	-1207953646,	 // (0xb8001712) // 184 (0xb8) 0 (0x00) 23 (0x17) 18 (0x12)  CRC: 0x5FF46F53
	465043472,	 // (0x1bb80010) // 27 (0x1b) 184 (0xb8) 0 (0x00) 16 (0x10)  CRC: 0x7921B28A
	-1308619623,	 // (0xb2000c99) // 178 (0xb2) 0 (0x00) 12 (0x0c) 153 (0x99)  CRC: 0x4EC06A70
	1380892,	 // (0x15121c) // 0 (0x00) 21 (0x15) 18 (0x12) 28 (0x1c)  CRC: 0x32DC87A7
	-1207955278,	 // (0xb80010b2) // 184 (0xb8) 0 (0x00) 16 (0x10) 178 (0xb2)  CRC: 0xF4214956
	788328,	 // (0xc0768) // 0 (0x00) 12 (0x0c) 7 (0x07) 104 (0x68)  CRC: 0x5F41D5CF
	-1207953646,	 // (0xb8001712) // 184 (0xb8) 0 (0x00) 23 (0x17) 18 (0x12)  CRC: 0x5D465E1F
	498597904,	 // (0x1db80010) // 29 (0x1d) 184 (0xb8) 0 (0x00) 16 (0x10)  CRC: 0xF5A41205
	303872000,	 // (0x121cb800) // 18 (0x12) 28 (0x1c) 184 (0xb8) 0 (0x00)  CRC: 0xE375797D
	269519827,	 // (0x10108bd3) // 16 (0x10) 16 (0x10) 139 (0x8b) 211 (0xd3)  CRC: 0x0FD54608
	-1207953646,	 // (0xb8001712) // 184 (0xb8) 0 (0x00) 23 (0x17) 18 (0x12)  CRC: 0x2E0406C1
	515375120,	 // (0x1eb80010) // 30 (0x1e) 184 (0xb8) 0 (0x00) 16 (0x10)  CRC: 0xD7AE5A95
	303609856,	 // (0x1218b800) // 18 (0x12) 24 (0x18) 184 (0xb8) 0 (0x00)  CRC: 0x13C51F4A
	280035328,	 // (0x10b10000) // 16 (0x10) 177 (0xb1)  CRC: 0x91088C8D
	-1861710707,	// CRC do Jardel: 0x91088C8D
	0,	//	synchronized?, exception table length
//	425: exit()V
	-1308586087,	 // (0xb2008f99) // 178 (0xb2) 0 (0x00) 143 (0x8f) 153 (0x99)  CRC: 0x2751C43E
	790787,	 // (0xc1103) // 0 (0x00) 12 (0x0c) 17 (0x11) 3 (0x03)  CRC: 0x41091128
	-390594529,	 // (0xe8b8001f) // 232 (0xe8) 184 (0xb8) 0 (0x00) 31 (0x1f)  CRC: 0xB7EB7536
	-1476398062,	 // (0xa7fff412) // 167 (0xa7) 255 (0xff) 244 (0xf4) 18 (0x12)  CRC: 0x7339656F
	548929552,	 // (0x20b80010) // 32 (0x20) 184 (0xb8) 0 (0x00) 16 (0x10)  CRC: 0xB028B5CF
	-536833447,	 // (0xe0009259) // 224 (0xe0) 0 (0x00) 146 (0x92) 89 (0x59)  CRC: 0xFA0951A7
	1271047936,	 // (0x4bc2a700) // 75 (0x4b) 194 (0xc2) 167 (0xa7) 0 (0x00)  CRC: 0xE23E8BC6
	4991683,	 // (0x4c2ac3) // 0 (0x00) 76 (0x4c) 42 (0x2a) 195 (0xc3)  CRC: 0x9F65B1AF
	733937664,	 // (0x2bbf0000) // 43 (0x2b) 191 (0xbf)  CRC: 0xEA88B3A2
	-360139870,	// CRC do Jardel: 0xEA88B3A2
	1,	//	synchronized?, exception table length
	1703968,	// start: 26	end: 32
	1900544,	// target: 29	type: 0
//	438: getSPMSize()I
	-1308619769,	 // (0xb2000c07) // 178 (0xb2) 0 (0x00) 12 (0x0c) 7 (0x07)  CRC: 0xA1999E5F
	1756102656,	 // (0x68ac0000) // 104 (0x68) 172 (0xac)  CRC: 0x34D6ACBB
	886484155,	// CRC do Jardel: 0x34D6ACBB
	0,	//	synchronized?, exception table length
//	442: clazzinit()V
	275037194,	 // (0x1064bc0a) // 16 (0x10) 100 (0x64) 188 (0xbc) 10 (0x0a)  CRC: 0xEE4EDD54
	-520056316,	 // (0xe1009204) // 225 (0xe1) 0 (0x00) 146 (0x92) 4 (0x04)  CRC: 0x32A94D8B
	-753924512,	 // (0xd3100660) // 211 (0xd3) 16 (0x10) 6 (0x06) 96 (0x60)  CRC: 0x546D7725
	991613756,	 // (0x3b1ad33c) // 59 (0x3b) 26 (0x1a) 211 (0xd3) 60 (0x3c)  CRC: 0x0EC058A3
	436494395,	 // (0x1a04603b) // 26 (0x1a) 4 (0x04) 96 (0x60) 59 (0x3b)  CRC: 0x6BAA8655
	54336539,	 // (0x33d1c1b) // 3 (0x03) 61 (0x3d) 28 (0x1c) 27 (0x1b)  CRC: 0x2A38849C
	-1577039078,	 // (0xa2004b1a) // 162 (0xa2) 0 (0x00) 75 (0x4b) 26 (0x1a)  CRC: 0x6034D320
	476107582,	 // (0x1c60d33e) // 28 (0x1c) 96 (0x60) 211 (0xd3) 62 (0x3e)  CRC: 0x9ACA289F
	500413184,	 // (0x1dd3b300) // 29 (0x1d) 211 (0xd3) 179 (0xb3) 0 (0x00)  CRC: 0x20BECF62
	179437578,	 // (0xab2000a) // 10 (0x0a) 178 (0xb2) 0 (0x00) 10 (0x0a)  CRC: 0x89AA2B69
	285474686,	 // (0x1103ff7e) // 17 (0x11) 3 (0x03) 255 (0xff) 126 (0x7e)  CRC: 0x77C64A71
	906277376,	 // (0x3604b200) // 54 (0x36) 4 (0x04) 178 (0xb2) 0 (0x00)  CRC: 0x83A37EEA
	168823420,	 // (0xa100a7c) // 10 (0x0a) 16 (0x10) 10 (0x0a) 124 (0x7c)  CRC: 0x9CEC3B43
	-1291843043,	 // (0xb3000a1d) // 179 (0xb3) 0 (0x00) 10 (0x0a) 29 (0x1d)  CRC: 0x9ED9F2A5
	73454515,	 // (0x460d3b3) // 4 (0x04) 96 (0x60) 211 (0xd3) 179 (0xb3)  CRC: 0x792EA342
	1094144,	 // (0x10b200) // 0 (0x00) 16 (0x10) 178 (0xb2) 0 (0x00)  CRC: 0xEC83C509
	269486716,	 // (0x10100a7c) // 16 (0x10) 16 (0x10) 10 (0x0a) 124 (0x7c)  CRC: 0x98C77F4C
	-1291841515,	 // (0xb3001015) // 179 (0xb3) 0 (0x00) 16 (0x10) 21 (0x15)  CRC: 0x00AC22E5
	68223232,	 // (0x4110100) // 4 (0x04) 17 (0x11) 1 (0x01) 0 (0x00)  CRC: 0x5C4D60EB
	-1577054955,	 // (0xa2000d15) // 162 (0xa2) 0 (0x00) 13 (0x0d) 21 (0x15)  CRC: 0xF515693A
	77135880,	 // (0x4990008) // 4 (0x04) 153 (0x99) 0 (0x00) 8 (0x08)  CRC: 0x33CE8A32
	501131008,	 // (0x1ddea700) // 29 (0x1d) 222 (0xde) 167 (0xa7) 0 (0x00)  CRC: 0x8BF67D08
	112721954,	 // (0x6b80022) // 6 (0x06) 184 (0xb8) 0 (0x00) 34 (0x22)  CRC: 0xB9C05C38
	470048829,	 // (0x1c04603d) // 28 (0x1c) 4 (0x04) 96 (0x60) 61 (0x3d)  CRC: 0x5D28D649
	-1476413775,	 // (0xa7ffb6b1) // 167 (0xa7) 255 (0xff) 182 (0xb6) 177 (0xb1)  CRC: 0x621C09B7
	1646004663,	// CRC do Jardel: 0x621C09B7
	0,	//	synchronized?, exception table length
//	469: interpret()V
	62062607,	 // (0x3b3000f) // 3 (0x03) 179 (0xb3) 0 (0x00) 15 (0x0f)  CRC: 0x28BE6AC6
	62062606,	 // (0x3b3000e) // 3 (0x03) 179 (0xb3) 0 (0x00) 14 (0x0e)  CRC: 0x2B5CE0AC
	-1207950533,	 // (0xb800233b) // 184 (0xb8) 0 (0x00) 35 (0x23) 59 (0x3b)  CRC: 0x10125800
	447414272,	 // (0x1aab0000) // 26 (0x1a) 171 (0xab) 0 (0x00) 0 (0x00)  CRC: 0x0B67F749
	611,	 // (0x0263) // 0 (0x00) 0 (0x00) 2 (0x02) 99 (0x63)  CRC: 0x5B2C06F6
	30,	 // (0x1e) // 0 (0x00) 0 (0x00) 0 (0x00) 30 (0x1e)  CRC: 0x35D10F3E
	0,	 // (0x00) // 0 (0x00) 0 (0x00) 0 (0x00) 0 (0x00)  CRC: 0x6E714BE5
	251,	 // (0xfb) // 0 (0x00) 0 (0x00) 0 (0x00) 251 (0xfb)  CRC: 0xCB8F2E04
	1,	 // (0x01) // 0 (0x00) 0 (0x00) 0 (0x00) 1 (0x01)  CRC: 0x89A4C1B8
	254,	 // (0xfe) // 0 (0x00) 0 (0x00) 0 (0x00) 254 (0xfe)  CRC: 0x8AA871DE
	2,	 // (0x02) // 0 (0x00) 0 (0x00) 0 (0x00) 2 (0x02)  CRC: 0x0832F909
	271,	 // (0x010f) // 0 (0x00) 0 (0x00) 1 (0x01) 15 (0x0f)  CRC: 0xB1D43812
	3,	 // (0x03) // 0 (0x00) 0 (0x00) 0 (0x00) 3 (0x03)  CRC: 0x78BD68C3
	288,	 // (0x0120) // 0 (0x00) 0 (0x00) 1 (0x01) 32 (0x20)  CRC: 0xA7E747B0
	4,	 // (0x04) // 0 (0x00) 0 (0x00) 0 (0x00) 4 (0x04)  CRC: 0x43ACE3FF
	305,	 // (0x0131) // 0 (0x00) 0 (0x00) 1 (0x01) 49 (0x31)  CRC: 0x8FBDE788
	5,	 // (0x05) // 0 (0x00) 0 (0x00) 0 (0x00) 5 (0x05)  CRC: 0xBA021DA3
	322,	 // (0x0142) // 0 (0x00) 0 (0x00) 1 (0x01) 66 (0x42)  CRC: 0x60C3E37A
	6,	 // (0x06) // 0 (0x00) 0 (0x00) 0 (0x00) 6 (0x06)  CRC: 0x3DBD33A1
	339,	 // (0x0153) // 0 (0x00) 0 (0x00) 1 (0x01) 83 (0x53)  CRC: 0x76665E19
	7,	 // (0x07) // 0 (0x00) 0 (0x00) 0 (0x00) 7 (0x07)  CRC: 0x093F1B56
	356,	 // (0x0164) // 0 (0x00) 0 (0x00) 1 (0x01) 100 (0x64)  CRC: 0xC4E22E81
	8,	 // (0x08) // 0 (0x00) 0 (0x00) 0 (0x00) 8 (0x08)  CRC: 0x72C3E562
	373,	 // (0x0175) // 0 (0x00) 0 (0x00) 1 (0x01) 117 (0x75)  CRC: 0x543D5A5B
	11,	 // (0x0b) // 0 (0x00) 0 (0x00) 0 (0x00) 11 (0x0b)  CRC: 0xC5FEB3C0
	390,	 // (0x0186) // 0 (0x00) 0 (0x00) 1 (0x01) 134 (0x86)  CRC: 0x9B5781A1
	12,	 // (0x0c) // 0 (0x00) 0 (0x00) 0 (0x00) 12 (0x0c)  CRC: 0x86A1120D
	407,	 // (0x0197) // 0 (0x00) 0 (0x00) 1 (0x01) 151 (0x97)  CRC: 0x7D54E7BB
	13,	 // (0x0d) // 0 (0x00) 0 (0x00) 0 (0x00) 13 (0x0d)  CRC: 0xE2FE1A3C
	425,	 // (0x01a9) // 0 (0x00) 0 (0x00) 1 (0x01) 169 (0xa9)  CRC: 0x247713F6
	16,	 // (0x10) // 0 (0x00) 0 (0x00) 0 (0x00) 16 (0x10)  CRC: 0xC5336DE9
	443,	 // (0x01bb) // 0 (0x00) 0 (0x00) 1 (0x01) 187 (0xbb)  CRC: 0x4B352974
	17,	 // (0x11) // 0 (0x00) 0 (0x00) 0 (0x00) 17 (0x11)  CRC: 0xC89094BD
	462,	 // (0x01ce) // 0 (0x00) 0 (0x00) 1 (0x01) 206 (0xce)  CRC: 0x6BE12A24
	18,	 // (0x12) // 0 (0x00) 0 (0x00) 0 (0x00) 18 (0x12)  CRC: 0xC8E78CDA
	481,	 // (0x01e1) // 0 (0x00) 0 (0x00) 1 (0x01) 225 (0xe1)  CRC: 0x19247AA2
	79,	 // (0x4f) // 0 (0x00) 0 (0x00) 0 (0x00) 79 (0x4f)  CRC: 0x793C8A92
	505,	 // (0x01f9) // 0 (0x00) 0 (0x00) 1 (0x01) 249 (0xf9)  CRC: 0x0CAF1A1B
	81,	 // (0x51) // 0 (0x00) 0 (0x00) 0 (0x00) 81 (0x51)  CRC: 0xFE4955DC
	505,	 // (0x01f9) // 0 (0x00) 0 (0x00) 1 (0x01) 249 (0xf9)  CRC: 0x86D17C34
	83,	 // (0x53) // 0 (0x00) 0 (0x00) 0 (0x00) 83 (0x53)  CRC: 0xDFB8E820
	505,	 // (0x01f9) // 0 (0x00) 0 (0x00) 1 (0x01) 249 (0xf9)  CRC: 0x1ED086C2
	84,	 // (0x54) // 0 (0x00) 0 (0x00) 0 (0x00) 84 (0x54)  CRC: 0x2046467F
	505,	 // (0x01f9) // 0 (0x00) 0 (0x00) 1 (0x01) 249 (0xf9)  CRC: 0xAA2D97B3
	85,	 // (0x55) // 0 (0x00) 0 (0x00) 0 (0x00) 85 (0x55)  CRC: 0xA965DC6E
	505,	 // (0x01f9) // 0 (0x00) 0 (0x00) 1 (0x01) 249 (0xf9)  CRC: 0xE087956B
	86,	 // (0x56) // 0 (0x00) 0 (0x00) 0 (0x00) 86 (0x56)  CRC: 0x10A7988E
	505,	 // (0x01f9) // 0 (0x00) 0 (0x00) 1 (0x01) 249 (0xf9)  CRC: 0x261C914B
	89,	 // (0x59) // 0 (0x00) 0 (0x00) 0 (0x00) 89 (0x59)  CRC: 0x62A2BA73
	558,	 // (0x022e) // 0 (0x00) 0 (0x00) 2 (0x02) 46 (0x2e)  CRC: 0xF67C04F4
	177,	 // (0xb1) // 0 (0x00) 0 (0x00) 0 (0x00) 177 (0xb1)  CRC: 0x4B1A6B36
	583,	 // (0x0247) // 0 (0x00) 0 (0x00) 2 (0x02) 71 (0x47)  CRC: 0xC1A21E8E
	178,	 // (0xb2) // 0 (0x00) 0 (0x00) 0 (0x00) 178 (0xb2)  CRC: 0x5226E404
	584,	 // (0x0248) // 0 (0x00) 0 (0x00) 2 (0x02) 72 (0x48)  CRC: 0x3BDA6A0B
	179,	 // (0xb3) // 0 (0x00) 0 (0x00) 0 (0x00) 179 (0xb3)  CRC: 0xB59B7E47
	593,	 // (0x0251) // 0 (0x00) 0 (0x00) 2 (0x02) 81 (0x51)  CRC: 0x2BC3F90C
	188,	 // (0xbc) // 0 (0x00) 0 (0x00) 0 (0x00) 188 (0xbc)  CRC: 0x4B017917
	599,	 // (0x0257) // 0 (0x00) 0 (0x00) 2 (0x02) 87 (0x57)  CRC: 0x0BD1C4A7
	189,	 // (0xbd) // 0 (0x00) 0 (0x00) 0 (0x00) 189 (0xbd)  CRC: 0x945DA752
	605,	 // (0x025d) // 0 (0x00) 0 (0x00) 2 (0x02) 93 (0x5d)  CRC: 0xD6E86545
	221,	 // (0xdd) // 0 (0x00) 0 (0x00) 0 (0x00) 221 (0xdd)  CRC: 0xE3AB1DFF
	590,	 // (0x024e) // 0 (0x00) 0 (0x00) 2 (0x02) 78 (0x4e)  CRC: 0x71F0560B
	224,	 // (0xe0) // 0 (0x00) 0 (0x00) 0 (0x00) 224 (0xe0)  CRC: 0xAEF73341
	584,	 // (0x0248) // 0 (0x00) 0 (0x00) 2 (0x02) 72 (0x48)  CRC: 0x95F53408
	225,	 // (0xe1) // 0 (0x00) 0 (0x00) 0 (0x00) 225 (0xe1)  CRC: 0x599DF26D
	593,	 // (0x0251) // 0 (0x00) 0 (0x00) 2 (0x02) 81 (0x51)  CRC: 0xCD5AF7FD
	-1476460320,	 // (0xa7ff00e0) // 167 (0xa7) 255 (0xff) 0 (0x00) 224 (0xe0)  CRC: 0x081BE24C
	9613824,	 // (0x92b200) // 0 (0x00) 146 (0x92) 178 (0xb2) 0 (0x00)  CRC: 0x518AA9BF
	235167833,	 // (0xe046059) // 14 (0x0e) 4 (0x04) 96 (0x60) 89 (0x59)  CRC: 0x53538ACC
	-1291842045,	 // (0xb3000e03) // 179 (0xb3) 0 (0x00) 14 (0x0e) 3 (0x03)  CRC: 0x35148B7A
	1336409839,	 // (0x4fa7feef) // 79 (0x4f) 167 (0xa7) 254 (0xfe) 239 (0xef)  CRC: 0x4535AD88
	-536833358,	 // (0xe00092b2) // 224 (0xe0) 0 (0x00) 146 (0x92) 178 (0xb2)  CRC: 0x9135CA32
	918624,	 // (0xe0460) // 0 (0x00) 14 (0x0e) 4 (0x04) 96 (0x60)  CRC: 0xCA7C6B39
	1504903182,	 // (0x59b3000e) // 89 (0x59) 179 (0xb3) 0 (0x00) 14 (0x0e)  CRC: 0xA765E43B
	38774782,	 // (0x24fa7fe) // 2 (0x02) 79 (0x4f) 167 (0xa7) 254 (0xfe)  CRC: 0x363BEBA5
	-555745134,	 // (0xdee00092) // 222 (0xde) 224 (0xe0) 0 (0x00) 146 (0x92)  CRC: 0x299534CF
	-1308619260,	 // (0xb2000e04) // 178 (0xb2) 0 (0x00) 14 (0x0e) 4 (0x04)  CRC: 0xEA4405A0
	1616491264,	 // (0x6059b300) // 96 (0x60) 89 (0x59) 179 (0xb3) 0 (0x00)  CRC: 0xA2F42312
	235098023,	 // (0xe034fa7) // 14 (0x0e) 3 (0x03) 79 (0x4f) 167 (0xa7)  CRC: 0x3F432A21
	-20062208,	 // (0xfecde000) // 254 (0xfe) 205 (0xcd) 224 (0xe0) 0 (0x00)  CRC: 0xD0CD2106
	-1833828338,	 // (0x92b2000e) // 146 (0x92) 178 (0xb2) 0 (0x00) 14 (0x0e)  CRC: 0xFDC935C4
	73423283,	 // (0x46059b3) // 4 (0x04) 96 (0x60) 89 (0x59) 179 (0xb3)  CRC: 0x826A60C0
	918607,	 // (0xe044f) // 0 (0x00) 14 (0x0e) 4 (0x04) 79 (0x4f)  CRC: 0x3A5EEBFD
	-1476477728,	 // (0xa7febce0) // 167 (0xa7) 254 (0xfe) 188 (0xbc) 224 (0xe0)  CRC: 0xB7B99D21
	9613824,	 // (0x92b200) // 0 (0x00) 146 (0x92) 178 (0xb2) 0 (0x00)  CRC: 0x8A50AFEA
	235167833,	 // (0xe046059) // 14 (0x0e) 4 (0x04) 96 (0x60) 89 (0x59)  CRC: 0x4A28C88F
	-1291842043,	 // (0xb3000e05) // 179 (0xb3) 0 (0x00) 14 (0x0e) 5 (0x05)  CRC: 0xA3018CB4
	1336409771,	 // (0x4fa7feab) // 79 (0x4f) 167 (0xa7) 254 (0xfe) 171 (0xab)  CRC: 0x34359DB8
	-536833358,	 // (0xe00092b2) // 224 (0xe0) 0 (0x00) 146 (0x92) 178 (0xb2)  CRC: 0x65766B27
	918624,	 // (0xe0460) // 0 (0x00) 14 (0x0e) 4 (0x04) 96 (0x60)  CRC: 0x8321AA16
	1504903182,	 // (0x59b3000e) // 89 (0x59) 179 (0xb3) 0 (0x00) 14 (0x0e)  CRC: 0x81909B95
	105883646,	 // (0x64fa7fe) // 6 (0x06) 79 (0x4f) 167 (0xa7) 254 (0xfe)  CRC: 0xB4F3914A
	-1696595822,	 // (0x9ae00092) // 154 (0x9a) 224 (0xe0) 0 (0x00) 146 (0x92)  CRC: 0x26BBA638
	-1308619260,	 // (0xb2000e04) // 178 (0xb2) 0 (0x00) 14 (0x0e) 4 (0x04)  CRC: 0x9BFF0C83
	1616491264,	 // (0x6059b300) // 96 (0x60) 89 (0x59) 179 (0xb3) 0 (0x00)  CRC: 0xB923DAB4
	235360167,	 // (0xe074fa7) // 14 (0x0e) 7 (0x07) 79 (0x4f) 167 (0xa7)  CRC: 0xD6D26139
	-24518656,	 // (0xfe89e000) // 254 (0xfe) 137 (0x89) 224 (0xe0) 0 (0x00)  CRC: 0x4FCCE495
	-1833828338,	 // (0x92b2000e) // 146 (0x92) 178 (0xb2) 0 (0x00) 14 (0x0e)  CRC: 0x3422A67A
	73423283,	 // (0x46059b3) // 4 (0x04) 96 (0x60) 89 (0x59) 179 (0xb3)  CRC: 0x1C5A9D08
	919631,	 // (0xe084f) // 0 (0x00) 14 (0x0e) 8 (0x08) 79 (0x4f)  CRC: 0xE85E4EC6
	-1476495136,	 // (0xa7fe78e0) // 167 (0xa7) 254 (0xfe) 120 (0x78) 224 (0xe0)  CRC: 0xDC364D75
	9613824,	 // (0x92b200) // 0 (0x00) 146 (0x92) 178 (0xb2) 0 (0x00)  CRC: 0x77A7C11B
	235167833,	 // (0xe046059) // 14 (0x0e) 4 (0x04) 96 (0x60) 89 (0x59)  CRC: 0x43B97B48
	-1291842045,	 // (0xb3000e03) // 179 (0xb3) 0 (0x00) 14 (0x0e) 3 (0x03)  CRC: 0x35352740
	1336409703,	 // (0x4fa7fe67) // 79 (0x4f) 167 (0xa7) 254 (0xfe) 103 (0x67)  CRC: 0xB60F03FB
	-536833358,	 // (0xe00092b2) // 224 (0xe0) 0 (0x00) 146 (0x92) 178 (0xb2)  CRC: 0x90E7F294
	918624,	 // (0xe0460) // 0 (0x00) 14 (0x0e) 4 (0x04) 96 (0x60)  CRC: 0xC344F76B
	1504903182,	 // (0x59b3000e) // 89 (0x59) 179 (0xb3) 0 (0x00) 14 (0x0e)  CRC: 0x861C6B37
	304369575,	 // (0x12244fa7) // 18 (0x12) 36 (0x24) 79 (0x4f) 167 (0xa7)  CRC: 0x2C6B4C90
	-27926528,	 // (0xfe55e000) // 254 (0xfe) 85 (0x55) 224 (0xe0) 0 (0x00)  CRC: 0x57273FCF
	-1833828338,	 // (0x92b2000e) // 146 (0x92) 178 (0xb2) 0 (0x00) 14 (0x0e)  CRC: 0xEB3D3E55
	73423283,	 // (0x46059b3) // 4 (0x04) 96 (0x60) 89 (0x59) 179 (0xb3)  CRC: 0xD76E9BDB
	922149,	 // (0xe1225) // 0 (0x00) 14 (0x0e) 18 (0x12) 37 (0x25)  CRC: 0xB03162C1
	1336409667,	 // (0x4fa7fe43) // 79 (0x4f) 167 (0xa7) 254 (0xfe) 67 (0x43)  CRC: 0x9AB921DC
	-536833358,	 // (0xe00092b2) // 224 (0xe0) 0 (0x00) 146 (0x92) 178 (0xb2)  CRC: 0x373EDEA4
	918624,	 // (0xe0460) // 0 (0x00) 14 (0x0e) 4 (0x04) 96 (0x60)  CRC: 0x20DE292E
	1504903182,	 // (0x59b3000e) // 89 (0x59) 179 (0xb3) 0 (0x00) 14 (0x0e)  CRC: 0x18994C09
	-1207949745,	 // (0xb800264f) // 184 (0xb8) 0 (0x00) 38 (0x26) 79 (0x4f)  CRC: 0xCC57E55E
	-1476513568,	 // (0xa7fe30e0) // 167 (0xa7) 254 (0xfe) 48 (0x30) 224 (0xe0)  CRC: 0x6440EEDF
	9613824,	 // (0x92b200) // 0 (0x00) 146 (0x92) 178 (0xb2) 0 (0x00)  CRC: 0x6F50ACA9
	235167833,	 // (0xe046059) // 14 (0x0e) 4 (0x04) 96 (0x60) 89 (0x59)  CRC: 0x3C82FCF9
	-1291841864,	 // (0xb3000eb8) // 179 (0xb3) 0 (0x00) 14 (0x0e) 184 (0xb8)  CRC: 0x18BA3907
	2576295,	 // (0x274fa7) // 0 (0x00) 39 (0x27) 79 (0x4f) 167 (0xa7)  CRC: 0x85A32387
	-31596544,	 // (0xfe1de000) // 254 (0xfe) 29 (0x1d) 224 (0xe0) 0 (0x00)  CRC: 0xEF2D83CF
	-1833828338,	 // (0x92b2000e) // 146 (0x92) 178 (0xb2) 0 (0x00) 14 (0x0e)  CRC: 0xD9AADA70
	73423283,	 // (0x46059b3) // 4 (0x04) 96 (0x60) 89 (0x59) 179 (0xb3)  CRC: 0xABF56AE5
	963072,	 // (0xeb200) // 0 (0x00) 14 (0x0e) 178 (0xb2) 0 (0x00)  CRC: 0x501F010C
	280494115,	 // (0x10b80023) // 16 (0x10) 184 (0xb8) 0 (0x00) 35 (0x23)  CRC: 0x29EF1583
	1624461223,	 // (0x60d34fa7) // 96 (0x60) 211 (0xd3) 79 (0x4f) 167 (0xa7)  CRC: 0xA6561979
	-33169408,	 // (0xfe05e000) // 254 (0xfe) 5 (0x05) 224 (0xe0) 0 (0x00)  CRC: 0xEA8CA631
	-1833828338,	 // (0x92b2000e) // 146 (0x92) 178 (0xb2) 0 (0x00) 14 (0x0e)  CRC: 0xAD01F875
	1493460147,	 // (0x590464b3) // 89 (0x59) 4 (0x04) 100 (0x64) 179 (0xb3)  CRC: 0x14EE2850
	929340,	 // (0xe2e3c) // 0 (0x00) 14 (0x0e) 46 (0x2e) 60 (0x3c)  CRC: 0x349C9E3C
	-536833358,	 // (0xe00092b2) // 224 (0xe0) 0 (0x00) 146 (0x92) 178 (0xb2)  CRC: 0xB5CBB919
	940292,	 // (0xe5904) // 0 (0x00) 14 (0x0e) 89 (0x59) 4 (0x04)  CRC: 0x7E723EAE
	1689452558,	 // (0x64b3000e) // 100 (0x64) 179 (0xb3) 0 (0x00) 14 (0x0e)  CRC: 0x7212E6A9
	775872512,	 // (0x2e3ee000) // 46 (0x2e) 62 (0x3e) 224 (0xe0) 0 (0x00)  CRC: 0xE13F6C7E
	-1833828338,	 // (0x92b2000e) // 146 (0x92) 178 (0xb2) 0 (0x00) 14 (0x0e)  CRC: 0x198598CB
	1493460147,	 // (0x590464b3) // 89 (0x59) 4 (0x04) 100 (0x64) 179 (0xb3)  CRC: 0xD861B498
	929341,	 // (0xe2e3d) // 0 (0x00) 14 (0x0e) 46 (0x2e) 61 (0x3d)  CRC: 0xDBB041B0
	483605787,	 // (0x1cd33d1b) // 28 (0x1c) 211 (0xd3) 61 (0x3d) 27 (0x1b)  CRC: 0x65D08485
	471687380,	 // (0x1c1d60d4) // 28 (0x1c) 29 (0x1d) 96 (0x60) 212 (0xd4)  CRC: 0x60E7DD7C
	-1476538144,	 // (0xa7fdd0e0) // 167 (0xa7) 253 (0xfd) 208 (0xd0) 224 (0xe0)  CRC: 0x9F0194B6
	9613824,	 // (0x92b200) // 0 (0x00) 146 (0x92) 178 (0xb2) 0 (0x00)  CRC: 0x3E54E72C
	237911264,	 // (0xe2e3ce0) // 14 (0x0e) 46 (0x2e) 60 (0x3c) 224 (0xe0)  CRC: 0xF02512F1
	9613824,	 // (0x92b200) // 0 (0x00) 146 (0x92) 178 (0xb2) 0 (0x00)  CRC: 0x912A3259
	235167833,	 // (0xe046059) // 14 (0x0e) 4 (0x04) 96 (0x60) 89 (0x59)  CRC: 0x46B4C025
	-1291842021,	 // (0xb3000e1b) // 179 (0xb3) 0 (0x00) 14 (0x0e) 27 (0x1b)  CRC: 0x44991790
	1336409527,	 // (0x4fa7fdb7) // 79 (0x4f) 167 (0xa7) 253 (0xfd) 183 (0xb7)  CRC: 0xDB89F4B1
	-1313341399,	 // (0xb1b80029) // 177 (0xb1) 184 (0xb8) 0 (0x00) 41 (0x29)  CRC: 0xBB736B4B
	-1476546393,	 // (0xa7fdb0a7) // 167 (0xa7) 253 (0xfd) 176 (0xb0) 167 (0xa7)  CRC: 0x6DB12F55
	-38946816,	 // (0xfdadb800) // 253 (0xfd) 173 (0xad) 184 (0xb8) 0 (0x00)  CRC: 0x98CCAD82
	715652519,	 // (0x2aa7fda7) // 42 (0x2a) 167 (0xa7) 253 (0xfd) 167 (0xa7)  CRC: 0x224F9FCF
	-1207948377,	 // (0xb8002ba7) // 184 (0xb8) 0 (0x00) 43 (0x2b) 167 (0xa7)  CRC: 0x9D8BDBD2
	-39733248,	 // (0xfda1b800) // 253 (0xfd) 161 (0xa1) 184 (0xb8) 0 (0x00)  CRC: 0xD714E466
	749206939,	 // (0x2ca7fd9b) // 44 (0x2c) 167 (0xa7) 253 (0xfd) 155 (0x9b)  CRC: 0xD2D8EB7B
	-536833006,	 // (0xe0009412) // 224 (0xe0) 0 (0x00) 148 (0x94) 18 (0x12)  CRC: 0x1DE53420
	766902318,	 // (0x2db6002e) // 45 (0x2d) 182 (0xb6) 0 (0x00) 46 (0x2e)  CRC: 0xC9EBF543
	-536832998,	 // (0xe000941a) // 224 (0xe0) 0 (0x00) 148 (0x94) 26 (0x1a)  CRC: 0x2385E13B
	-1241501728,	 // (0xb6002fe0) // 182 (0xb6) 0 (0x00) 47 (0x2f) 224 (0xe0)  CRC: 0xA404D463
	9703984,	 // (0x941230) // 0 (0x00) 148 (0x94) 18 (0x12) 48 (0x30)  CRC: 0xD4FEF3DB
	-1241501273,	 // (0xb60031a7) // 182 (0xb6) 0 (0x00) 49 (0x31) 167 (0xa7)  CRC: 0x21910EF2
	0,	 // (0x00) // 0 (0x00) 0 (0x00)  CRC: 0x2924C1A2
	690274722,	// CRC do Jardel: 0x2924C1A2
	0,	//	synchronized?, exception table length
//	634: readBC8u()I
	-1308620110,	 // (0xb2000ab2) // 178 (0xb2) 0 (0x00) 10 (0x0a) 178 (0xb2)  CRC: 0xBEC9F5B0
	984442,	 // (0xf057a) // 0 (0x00) 15 (0x0f) 5 (0x05) 122 (0x7a)  CRC: 0xFC661CEB
	1624455962,	 // (0x60d33b1a) // 96 (0x60) 211 (0xd3) 59 (0x3b) 26 (0x1a)  CRC: 0x0227BE05
	112328719,	 // (0x6b2000f) // 6 (0x06) 178 (0xb2) 0 (0x00) 15 (0x0f)  CRC: 0xA543DDEF
	108946438,	 // (0x67e6406) // 6 (0x06) 126 (0x7e) 100 (0x64) 6 (0x06)  CRC: 0x25C279EC
	2021276442,	 // (0x787a3b1a) // 120 (0x78) 122 (0x7a) 59 (0x3b) 26 (0x1a)  CRC: 0x0F98EDCD
	285278078,	 // (0x1100ff7e) // 17 (0x11) 0 (0x00) 255 (0xff) 126 (0x7e)  CRC: 0x823D665D
	1001521167,	 // (0x3bb2000f) // 59 (0x3b) 178 (0xb2) 0 (0x00) 15 (0x0f)  CRC: 0xF1E8D4DD
	73446144,	 // (0x460b300) // 4 (0x04) 96 (0x60) 179 (0xb3) 0 (0x00)  CRC: 0x1560CB4E
	253406208,	 // (0xf1aac00) // 15 (0x0f) 26 (0x1a) 172 (0xac)  CRC: 0xF593CCAE
	-174863186,	// CRC do Jardel: 0xF593CCAE
	0,	//	synchronized?, exception table length
//	646: readBC8s()B
	-1308620110,	 // (0xb2000ab2) // 178 (0xb2) 0 (0x00) 10 (0x0a) 178 (0xb2)  CRC: 0xBEC9F5B0
	984442,	 // (0xf057a) // 0 (0x00) 15 (0x0f) 5 (0x05) 122 (0x7a)  CRC: 0xFC661CEB
	1624455962,	 // (0x60d33b1a) // 96 (0x60) 211 (0xd3) 59 (0x3b) 26 (0x1a)  CRC: 0x0227BE05
	112328719,	 // (0x6b2000f) // 6 (0x06) 178 (0xb2) 0 (0x00) 15 (0x0f)  CRC: 0xA543DDEF
	108946438,	 // (0x67e6406) // 6 (0x06) 126 (0x7e) 100 (0x64) 6 (0x06)  CRC: 0x25C279EC
	2021276594,	 // (0x787a3bb2) // 120 (0x78) 122 (0x7a) 59 (0x3b) 178 (0xb2)  CRC: 0xBA7D0E2B
	984160,	 // (0xf0460) // 0 (0x00) 15 (0x0f) 4 (0x04) 96 (0x60)  CRC: 0xFBC93D8A
	-1291841766,	 // (0xb3000f1a) // 179 (0xb3) 0 (0x00) 15 (0x0f) 26 (0x1a)  CRC: 0x04A36BD1
	-1850998784,	 // (0x91ac0000) // 145 (0x91) 172 (0xac)  CRC: 0x695CD035
	1767690293,	// CRC do Jardel: 0x695CD035
	0,	//	synchronized?, exception table length
//	657: readBC16s()S
	-1207949677,	 // (0xb8002693) // 184 (0xb8) 0 (0x00) 38 (0x26) 147 (0x93)  CRC: 0x9575B9E4
	991563784,	 // (0x3b1a1008) // 59 (0x3b) 26 (0x1a) 16 (0x10) 8 (0x08)  CRC: 0xBA14B684
	2022914842,	 // (0x78933b1a) // 120 (0x78) 147 (0x93) 59 (0x3b) 26 (0x1a)  CRC: 0x77FE789F
	-1207949807,	 // (0xb8002611) // 184 (0xb8) 0 (0x00) 38 (0x26) 17 (0x11)  CRC: 0x0FBF18BE
	16744064,	 // (0xff7e80) // 0 (0x00) 255 (0xff) 126 (0x7e) 128 (0x80)  CRC: 0x8D3D4447
	-1824843092,	 // (0x933b1aac) // 147 (0x93) 59 (0x3b) 26 (0x1a) 172 (0xac)  CRC: 0xC636CA57
	-969487785,	// CRC do Jardel: 0xC636CA57
	0,	//	synchronized?, exception table length
//	665: readBC16u()I
	-1207949509,	 // (0xb800273b) // 184 (0xb8) 0 (0x00) 39 (0x27) 59 (0x3b)  CRC: 0x2148F685
	437400190,	 // (0x1a12327e) // 26 (0x1a) 18 (0x12) 50 (0x32) 126 (0x7e)  CRC: 0x25B0BA89
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x979AFE28
	-1751450072,	// CRC do Jardel: 0x979AFE28
	0,	//	synchronized?, exception table length
//	670: putstatic()V
	-1207946437,	 // (0xb800333b) // 184 (0xb8) 0 (0x00) 51 (0x33) 59 (0x3b)  CRC: 0x3BA08CE9
	-536833358,	 // (0xe00092b2) // 224 (0xe0) 0 (0x00) 146 (0x92) 178 (0xb2)  CRC: 0xC9667452
	940292,	 // (0xe5904) // 0 (0x00) 14 (0x0e) 89 (0x59) 4 (0x04)  CRC: 0x29CD1480
	1689452558,	 // (0x64b3000e) // 100 (0x64) 179 (0xb3) 0 (0x00) 14 (0x0e)  CRC: 0x27246018
	773510321,	 // (0x2e1ad4b1) // 46 (0x2e) 26 (0x1a) 212 (0xd4) 177 (0xb1)  CRC: 0xB84572B4
	-1203408204,	// CRC do Jardel: 0xB84572B4
	0,	//	synchronized?, exception table length
//	677: getstatic()V
	-1207946437,	 // (0xb800333b) // 184 (0xb8) 0 (0x00) 51 (0x33) 59 (0x3b)  CRC: 0x3BA08CE9
	-536833358,	 // (0xe00092b2) // 224 (0xe0) 0 (0x00) 146 (0x92) 178 (0xb2)  CRC: 0xC9667452
	918624,	 // (0xe0460) // 0 (0x00) 14 (0x0e) 4 (0x04) 96 (0x60)  CRC: 0x0D1C1D32
	1504903182,	 // (0x59b3000e) // 89 (0x59) 179 (0xb3) 0 (0x00) 14 (0x0e)  CRC: 0x3E05B386
	450056113,	 // (0x1ad34fb1) // 26 (0x1a) 211 (0xd3) 79 (0x4f) 177 (0xb1)  CRC: 0x4925BD1A
	1227210010,	// CRC do Jardel: 0x4925BD1A
	0,	//	synchronized?, exception table length
//	684: putfield()V
	-1207946437,	 // (0xb800333b) // 184 (0xb8) 0 (0x00) 51 (0x33) 59 (0x3b)  CRC: 0x3BA08CE9
	-536833358,	 // (0xe00092b2) // 224 (0xe0) 0 (0x00) 146 (0x92) 178 (0xb2)  CRC: 0xC9667452
	940292,	 // (0xe5904) // 0 (0x00) 14 (0x0e) 89 (0x59) 4 (0x04)  CRC: 0x29CD1480
	1689452558,	 // (0x64b3000e) // 100 (0x64) 179 (0xb3) 0 (0x00) 14 (0x0e)  CRC: 0x27246018
	775741440,	 // (0x2e3ce000) // 46 (0x2e) 60 (0x3c) 224 (0xe0) 0 (0x00)  CRC: 0x3BBBDD40
	-1833828338,	 // (0x92b2000e) // 146 (0x92) 178 (0xb2) 0 (0x00) 14 (0x0e)  CRC: 0xBF7B2084
	1493460147,	 // (0x590464b3) // 89 (0x59) 4 (0x04) 100 (0x64) 179 (0xb3)  CRC: 0xD68AE567
	929341,	 // (0xe2e3d) // 0 (0x00) 14 (0x0e) 46 (0x2e) 61 (0x3d)  CRC: 0x7D88A840
	483605787,	 // (0x1cd33d1b) // 28 (0x1c) 211 (0xd3) 61 (0x3d) 27 (0x1b)  CRC: 0xF3EA5A68
	471490772,	 // (0x1c1a60d4) // 28 (0x1c) 26 (0x1a) 96 (0x60) 212 (0xd4)  CRC: 0xA5BFC15B
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xD6601044
	-698347452,	// CRC do Jardel: 0xD6601044
	0,	//	synchronized?, exception table length
//	697: getfield()V
	-1207946437,	 // (0xb800333b) // 184 (0xb8) 0 (0x00) 51 (0x33) 59 (0x3b)  CRC: 0x3BA08CE9
	-536833358,	 // (0xe00092b2) // 224 (0xe0) 0 (0x00) 146 (0x92) 178 (0xb2)  CRC: 0xC9667452
	929340,	 // (0xe2e3c) // 0 (0x00) 14 (0x0e) 46 (0x2e) 60 (0x3c)  CRC: 0x9865D91D
	466828512,	 // (0x1bd33ce0) // 27 (0x1b) 211 (0xd3) 60 (0x3c) 224 (0xe0)  CRC: 0x6184D2ED
	9613824,	 // (0x92b200) // 0 (0x00) 146 (0x92) 178 (0xb2) 0 (0x00)  CRC: 0x70F93377
	236657248,	 // (0xe1b1a60) // 14 (0x0e) 27 (0x1b) 26 (0x1a) 96 (0x60)  CRC: 0x3C83B216
	-749752064,	 // (0xd34fb100) // 211 (0xd3) 79 (0x4f) 177 (0xb1)  CRC: 0x19CEFFF7
	432996343,	// CRC do Jardel: 0x19CEFFF7
	0,	//	synchronized?, exception table length
//	706: newarray()V
	-1207950533,	 // (0xb800233b) // 184 (0xb8) 0 (0x00) 35 (0x23) 59 (0x3b)  CRC: 0x262A4499
	-536833358,	 // (0xe00092b2) // 224 (0xe0) 0 (0x00) 146 (0x92) 178 (0xb2)  CRC: 0x2F14839E
	929340,	 // (0xe2e3c) // 0 (0x00) 14 (0x0e) 46 (0x2e) 60 (0x3c)  CRC: 0x3AE21A40
	-536833358,	 // (0xe00092b2) // 224 (0xe0) 0 (0x00) 146 (0x92) 178 (0xb2)  CRC: 0xC47CCC07
	924442,	 // (0xe1b1a) // 0 (0x00) 14 (0x0e) 27 (0x1b) 26 (0x1a)  CRC: 0x8CAEF056
	-1207946161,	 // (0xb800344f) // 184 (0xb8) 0 (0x00) 52 (0x34) 79 (0x4f)  CRC: 0xE1353672
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xE4B993D6
	-457600042,	// CRC do Jardel: 0xE4B993D6
	0,	//	synchronized?, exception table length
//	715: anewarray()V
	-1207946437,	 // (0xb800333b) // 184 (0xb8) 0 (0x00) 51 (0x33) 59 (0x3b)  CRC: 0x3BA08CE9
	-536833358,	 // (0xe00092b2) // 224 (0xe0) 0 (0x00) 146 (0x92) 178 (0xb2)  CRC: 0xC9667452
	929340,	 // (0xe2e3c) // 0 (0x00) 14 (0x0e) 46 (0x2e) 60 (0x3c)  CRC: 0x9865D91D
	-536833358,	 // (0xe00092b2) // 224 (0xe0) 0 (0x00) 146 (0x92) 178 (0xb2)  CRC: 0x254F5DF4
	924442,	 // (0xe1b1a) // 0 (0x00) 14 (0x0e) 27 (0x1b) 26 (0x1a)  CRC: 0x2D1675C6
	-1207945905,	 // (0xb800354f) // 184 (0xb8) 0 (0x00) 53 (0x35) 79 (0x4f)  CRC: 0x842F07F5
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xFA85BA84
	-91899260,	// CRC do Jardel: 0xFA85BA84
	0,	//	synchronized?, exception table length
//	724: <clinit>()V
	277598980,	 // (0x108bd304) // 16 (0x10) 139 (0x8b) 211 (0xd3) 4 (0x04)  CRC: 0xCF550CD5
	1690107958,	 // (0x64bd0036) // 100 (0x64) 189 (0xbd) 0 (0x00) 54 (0x36)  CRC: 0xFB0C1734
	-520055887,	 // (0xe10093b1) // 225 (0xe1) 0 (0x00) 147 (0x93) 177 (0xb1)  CRC: 0x4F314D30
	1328631088,	// CRC do Jardel: 0x4F314D30
	0,	//	synchronized?, exception table length
//	java.lang.System
//	729: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	733: currentTimeMillis()J
	276943121,	 // (0x1081d111) // 16 (0x10) 129 (0x81) 209 (0xd1) 17 (0x11)  CRC: 0xB1D27397
	65563781,	 // (0x3e86c85) // 3 (0x03) 232 (0xe8) 108 (0x6c) 133 (0x85)  CRC: 0xFDB0A125
	-1392508928,	 // (0xad000000) // 173 (0xad)  CRC: 0xC681B186
	-964578938,	// CRC do Jardel: 0xC681B186
	0,	//	synchronized?, exception table length
//	738: init()V
	-1157627047,	 // (0xbb000359) // 187 (0xbb) 0 (0x00) 3 (0x03) 89 (0x59)  CRC: 0x979C0CDD
	-1224735519,	 // (0xb70004e1) // 183 (0xb7) 0 (0x00) 4 (0x04) 225 (0xe1)  CRC: 0xBF5B02A9
	9747200,	 // (0x94bb00) // 0 (0x00) 148 (0x94) 187 (0xbb) 0 (0x00)  CRC: 0x5BF698A2
	89765632,	 // (0x559b700) // 5 (0x05) 89 (0x59) 183 (0xb7) 0 (0x00)  CRC: 0x36D269D6
	115409045,	 // (0x6e10095) // 6 (0x06) 225 (0xe1) 0 (0x00) 149 (0x95)  CRC: 0xB161EA9F
	-536832799,	 // (0xe00094e1) // 224 (0xe0) 0 (0x00) 148 (0x94) 225 (0xe1)  CRC: 0x8D776648
	9875712,	 // (0x96b100) // 0 (0x00) 150 (0x96) 177 (0xb1)  CRC: 0x808C7ED9
	-2138276135,	// CRC do Jardel: 0x808C7ED9
	0,	//	synchronized?, exception table length
//	747: exit(I)V
	-1207957583,	 // (0xb80007b1) // 184 (0xb8) 0 (0x00) 7 (0x07) 177 (0xb1)  CRC: 0xF94BEBAB
	-112464981,	// CRC do Jardel: 0xF94BEBAB
	0,	//	synchronized?, exception table length
//	750: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
	717619207,	 // (0x2ac60007) // 42 (0x2a) 198 (0xc6) 0 (0x00) 7 (0x07)  CRC: 0x8D37952F
	751239179,	 // (0x2cc7000b) // 44 (0x2c) 199 (0xc7) 0 (0x00) 11 (0x0b)  CRC: 0xB93B094D
	-1157625767,	 // (0xbb000859) // 187 (0xbb) 0 (0x00) 8 (0x08) 89 (0x59)  CRC: 0x72857495
	-1224734273,	 // (0xb70009bf) // 183 (0xb7) 0 (0x00) 9 (0x09) 191 (0xbf)  CRC: 0x6E471B0A
	352590688,	 // (0x15041b60) // 21 (0x15) 4 (0x04) 27 (0x1b) 96 (0x60)  CRC: 0x828B03B4
	-2059991787,	 // (0x85370515) // 133 (0x85) 55 (0x37) 5 (0x05) 21 (0x15)  CRC: 0x0E15DEC4
	69034117,	 // (0x41d6085) // 4 (0x04) 29 (0x1d) 96 (0x60) 133 (0x85)  CRC: 0x85DE0B2C
	923216605,	 // (0x37072add) // 55 (0x37) 7 (0x07) 42 (0x2a) 221 (0xdd)  CRC: 0xCC5BDFDA
	906570973,	 // (0x36092cdd) // 54 (0x36) 9 (0x09) 44 (0x2c) 221 (0xdd)  CRC: 0xB82EA4AD
	906630409,	 // (0x360a1509) // 54 (0x36) 10 (0x0a) 21 (0x15) 9 (0x09)  CRC: 0x8EA2E76C
	107008822,	 // (0x660d336) // 6 (0x06) 96 (0x60) 211 (0xd3) 54 (0x36)  CRC: 0x25F1AD31
	185928198,	 // (0xb150a06) // 11 (0x0b) 21 (0x15) 10 (0x0a) 6 (0x06)  CRC: 0xF95ED247
	1624454668,	 // (0x60d3360c) // 96 (0x60) 211 (0xd3) 54 (0x36) 12 (0x0c)  CRC: 0xDD16E289
	353081600,	 // (0x150b9900) // 21 (0x15) 11 (0x0b) 153 (0x99) 0 (0x00)  CRC: 0x95220EF8
	135597210,	 // (0x8150c9a) // 8 (0x08) 21 (0x15) 12 (0x0c) 154 (0x9a)  CRC: 0xB5210330
	768768,	 // (0xbbb00) // 0 (0x00) 11 (0x0b) 187 (0xbb) 0 (0x00)  CRC: 0xB95118F9
	207206144,	 // (0xc59b700) // 12 (0x0c) 89 (0x59) 183 (0xb7) 0 (0x00)  CRC: 0x360576B2
	230626571,	 // (0xdbf150b) // 13 (0x0d) 191 (0xbf) 21 (0x15) 11 (0x0b)  CRC: 0x47EFEB03
	353148672,	 // (0x150c9f00) // 21 (0x15) 12 (0x0c) 159 (0x9f) 0 (0x00)  CRC: 0x1F147D24
	196804620,	 // (0xbbb000c) // 11 (0x0b) 187 (0xbb) 0 (0x00) 12 (0x0c)  CRC: 0x0BFBE58E
	1505165325,	 // (0x59b7000d) // 89 (0x59) 183 (0xb7) 0 (0x00) 13 (0x0d)  CRC: 0x8E98BD01
	-1078460402,	 // (0xbfb8000e) // 191 (0xbf) 184 (0xb8) 0 (0x00) 14 (0x0e)  CRC: 0x4F721FD4
	1496976834,	 // (0x593a0dc2) // 89 (0x59) 58 (0x3a) 13 (0x0d) 194 (0xc2)  CRC: 0x4BB19936
	352965430,	 // (0x1509d336) // 21 (0x15) 9 (0x09) 211 (0xd3) 54 (0x36)  CRC: 0xDCAE8E23
	236260051,	 // (0xe150ad3) // 14 (0x0e) 21 (0x15) 10 (0x0a) 211 (0xd3)  CRC: 0xF6D96824
	906958089,	 // (0x360f1509) // 54 (0x36) 15 (0x0f) 21 (0x15) 9 (0x09)  CRC: 0x0F03D011
	73454390,	 // (0x460d336) // 4 (0x04) 96 (0x60) 211 (0xd3) 54 (0x36)  CRC: 0x56270669
	269814276,	 // (0x10150a04) // 16 (0x10) 21 (0x15) 10 (0x0a) 4 (0x04)  CRC: 0x09B05644
	1624454673,	 // (0x60d33611) // 96 (0x60) 211 (0xd3) 54 (0x36) 17 (0x11)  CRC: 0x78EDE5EA
	463142942,	 // (0x1b9b001e) // 27 (0x1b) 155 (0x9b) 0 (0x00) 30 (0x1e)  CRC: 0xC151E748
	496697370,	 // (0x1d9b001a) // 29 (0x1d) 155 (0x9b) 0 (0x00) 26 (0x1a)  CRC: 0xA28F8C56
	352623360,	 // (0x15049b00) // 21 (0x15) 4 (0x04) 155 (0x9b) 0 (0x00)  CRC: 0xDBFCE43D
	353764629,	 // (0x15160515) // 21 (0x15) 22 (0x16) 5 (0x05) 21 (0x15)  CRC: 0x10EE7F47
	277189789,	 // (0x1085949d) // 16 (0x10) 133 (0x85) 148 (0x94) 157 (0x9d)  CRC: 0x1D06087D
	792071,	 // (0xc1607) // 0 (0x00) 12 (0x0c) 22 (0x16) 7 (0x07)  CRC: 0x3B33EF9D
	353469844,	 // (0x15118594) // 21 (0x15) 17 (0x11) 133 (0x85) 148 (0x94)  CRC: 0xB4DF05CC
	-1644164165,	 // (0x9e000bbb) // 158 (0x9e) 0 (0x00) 11 (0x0b) 187 (0xbb)  CRC: 0x83D50E51
	1006007,	 // (0xf59b7) // 0 (0x00) 15 (0x0f) 89 (0x59) 183 (0xb7)  CRC: 0x2AB6C59F
	1097514,	 // (0x10bf2a) // 0 (0x00) 16 (0x10) 191 (0xbf) 42 (0x2a)  CRC: 0x56E9812E
	749076527,	 // (0x2ca6002f) // 44 (0x2c) 166 (0xa6) 0 (0x00) 47 (0x2f)  CRC: 0x59F2B097
	454926848,	 // (0x1b1da200) // 27 (0x1b) 29 (0x1d) 162 (0xa2) 0 (0x00)  CRC: 0x8B7B60E8
	706020356,	 // (0x2a150404) // 42 (0x2a) 21 (0x15) 4 (0x04) 4 (0x04)  CRC: 0xAA758B7A
	1681265173,	 // (0x64361215) // 100 (0x64) 54 (0x36) 18 (0x12) 21 (0x15)  CRC: 0xC9D26B6B
	312147996,	 // (0x129b001c) // 18 (0x12) 155 (0x9b) 0 (0x00) 28 (0x1c)  CRC: 0x957A516E
	353246048,	 // (0x150e1b60) // 21 (0x15) 14 (0x0e) 27 (0x1b) 96 (0x60)  CRC: 0xA11911FE
	353525971,	 // (0x151260d3) // 21 (0x15) 18 (0x12) 96 (0x60) 211 (0xd3)  CRC: 0xB354D0FA
	353312096,	 // (0x150f1d60) // 21 (0x15) 15 (0x0f) 29 (0x1d) 96 (0x60)  CRC: 0x0A5A52D1
	353525972,	 // (0x151260d4) // 21 (0x15) 18 (0x12) 96 (0x60) 212 (0xd4)  CRC: 0x9DC79392
	353501792,	 // (0x15120260) // 21 (0x15) 18 (0x12) 2 (0x02) 96 (0x60)  CRC: 0x88635DD6
	907192319,	 // (0x3612a7ff) // 54 (0x36) 18 (0x12) 167 (0xa7) 255 (0xff)  CRC: 0x741BA22D
	-442040282,	 // (0xe5a70026) // 229 (0xe5) 167 (0xa7) 0 (0x00) 38 (0x26)  CRC: 0x678451BA
	53875221,	 // (0x3361215) // 3 (0x03) 54 (0x36) 18 (0x12) 21 (0x15)  CRC: 0x4C26EA5D
	303367330,	 // (0x121504a2) // 18 (0x12) 21 (0x15) 4 (0x04) 162 (0xa2)  CRC: 0xDECB3782
	1840398,	 // (0x1c150e) // 0 (0x00) 28 (0x1c) 21 (0x15) 14 (0x0e)  CRC: 0xB58E54D6
	459281682,	 // (0x1b601512) // 27 (0x1b) 96 (0x60) 21 (0x15) 18 (0x12)  CRC: 0xB46C0510
	1624446223,	 // (0x60d3150f) // 96 (0x60) 211 (0xd3) 21 (0x15) 15 (0x0f)  CRC: 0xABD64042
	492836114,	 // (0x1d601512) // 29 (0x1d) 96 (0x60) 21 (0x15) 18 (0x12)  CRC: 0x66F3E3A7
	1624511762,	 // (0x60d41512) // 96 (0x60) 212 (0xd4) 21 (0x15) 18 (0x12)  CRC: 0x5150BD63
	73414162,	 // (0x4603612) // 4 (0x04) 96 (0x60) 54 (0x36) 18 (0x12)  CRC: 0x8485627B
	-1476402407,	 // (0xa7ffe319) // 167 (0xa7) 255 (0xff) 227 (0xe3) 25 (0x19)  CRC: 0xEA523415
	230926080,	 // (0xdc3a700) // 13 (0x0d) 195 (0xc3) 167 (0xa7) 0 (0x00)  CRC: 0xCC5A2E72
	188355353,	 // (0xb3a1319) // 11 (0x0b) 58 (0x3a) 19 (0x13) 25 (0x19)  CRC: 0xCE47E874
	230889747,	 // (0xdc31913) // 13 (0x0d) 195 (0xc3) 25 (0x19) 19 (0x13)  CRC: 0xA2596F86
	-1078919168,	 // (0xbfb10000) // 191 (0xbf) 177 (0xb1)  CRC: 0xDE573C96
	-564708202,	// CRC do Jardel: 0xDE573C96
	2,	//	synchronized?, exception table length
	6029554,	// start: 92	end: 242
	16056320,	// target: 245	type: 0
	16056570,	// start: 245	end: 250
	16056320,	// target: 245	type: 0
//	820: getProperty(Ljava/lang/String;)Ljava/lang/String;
	28311552,	 // (0x1b00000) // 1 (0x01) 176 (0xb0)  CRC: 0xB6BF681A
	-1228969958,	// CRC do Jardel: 0xB6BF681A
	0,	//	synchronized?, exception table length
//	823: gc()V
	-1207954767,	 // (0xb80012b1) // 184 (0xb8) 0 (0x00) 18 (0x12) 177 (0xb1)  CRC: 0xE27B3D40
	-495239872,	// CRC do Jardel: 0xE27B3D40
	0,	//	synchronized?, exception table length
//	826: identityHashCode(Ljava/lang/Object;)I
	733347859,	 // (0x2bb60013) // 43 (0x2b) 182 (0xb6) 0 (0x00) 19 (0x13)  CRC: 0x73A32847
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x3DBAF7EC
	1035663340,	// CRC do Jardel: 0x3DBAF7EC
	0,	//	synchronized?, exception table length
//	java.lang.StringIndexOutOfBoundsException
//	830: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	834: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	838: <init>(I)V
	716898307,	 // (0x2abb0003) // 42 (0x2a) 187 (0xbb) 0 (0x00) 3 (0x03)  CRC: 0x9D03BB74
	1505165316,	 // (0x59b70004) // 89 (0x59) 183 (0xb7) 0 (0x00) 4 (0x04)  CRC: 0x109EB542
	302364160,	 // (0x1205b600) // 18 (0x12) 5 (0x05) 182 (0xb6) 0 (0x00)  CRC: 0x082D07D1
	102479360,	 // (0x61bb600) // 6 (0x06) 27 (0x1b) 182 (0xb6) 0 (0x00)  CRC: 0xD47B604F
	129368072,	 // (0x7b60008) // 7 (0x07) 182 (0xb6) 0 (0x00) 8 (0x08)  CRC: 0x7D25B1AB
	-1224736079,	 // (0xb70002b1) // 183 (0xb7) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xD58E5A57
	-712091049,	// CRC do Jardel: 0xD58E5A57
	0,	//	synchronized?, exception table length
//	java.lang.CloneNotSupportedException
//	846: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	850: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	java.lang.IllegalArgumentException
//	854: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	858: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	862: <init>(Ljava/lang/String;Ljava/lang/Throwable;)V
	707472567,	 // (0x2a2b2cb7) // 42 (0x2a) 43 (0x2b) 44 (0x2c) 183 (0xb7)  CRC: 0xFA82A471
	241920,	 // (0x3b100) // 0 (0x00) 3 (0x03) 177 (0xb1)  CRC: 0x7A9B4B44
	2056997700,	// CRC do Jardel: 0x7A9B4B44
	0,	//	synchronized?, exception table length
//	866: <init>(Ljava/lang/Throwable;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	78708736,	 // (0x4b10000) // 4 (0x04) 177 (0xb1)  CRC: 0xD46C10C9
	-731115319,	// CRC do Jardel: 0xD46C10C9
	0,	//	synchronized?, exception table length
//	com.jopdesign.sys.DummyHandler
//	870: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	874: run()V
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xB9FF90C9
	-1174433591,	// CRC do Jardel: 0xB9FF90C9
	0,	//	synchronized?, exception table length
//	java.lang.ArrayStoreException
//	877: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	881: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	java.lang.IndexOutOfBoundsException
//	885: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	889: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	java.io.PrintStream
//	893: <init>(Ljava/io/OutputStream;)V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	704886016,	 // (0x2a03b500) // 42 (0x2a) 3 (0x03) 181 (0xb5) 0 (0x00)  CRC: 0xB8167442
	19540963,	 // (0x12a2be3) // 1 (0x01) 42 (0x2a) 43 (0x2b) 227 (0xe3)  CRC: 0x9636E8A4
	45312,	 // (0xb100) // 0 (0x00) 0 (0x00) 177 (0xb1)  CRC: 0xF34A9105
	-213217019,	// CRC do Jardel: 0xF34A9105
	0,	//	synchronized?, exception table length
//	899: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	704886016,	 // (0x2a03b500) // 42 (0x2a) 3 (0x03) 181 (0xb5) 0 (0x00)  CRC: 0xB8167442
	19530211,	 // (0x12a01e3) // 1 (0x01) 42 (0x2a) 1 (0x01) 227 (0xe3)  CRC: 0xA0574572
	45312,	 // (0xb100) // 0 (0x00) 0 (0x00) 177 (0xb1)  CRC: 0xD6F9C8EE
	-688273170,	// CRC do Jardel: 0xD6F9C8EE
	0,	//	synchronized?, exception table length
//	905: checkError()Z
	716570626,	 // (0x2ab60002) // 42 (0x2a) 182 (0xb6) 0 (0x00) 2 (0x02)  CRC: 0x5C1B82E4
	716439553,	 // (0x2ab40001) // 42 (0x2a) 180 (0xb4) 0 (0x00) 1 (0x01)  CRC: 0xDA73888F
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x0A68B712
	174634770,	// CRC do Jardel: 0x0A68B712
	0,	//	synchronized?, exception table length
//	910: close()V
	716570626,	 // (0x2ab60002) // 42 (0x2a) 182 (0xb6) 0 (0x00) 2 (0x02)  CRC: 0x5C1B82E4
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xB2DF5AC1
	-1241513049,	 // (0xb60003a7) // 182 (0xb6) 0 (0x00) 3 (0x03) 167 (0xa7)  CRC: 0x5C82E0E5
	543787,	 // (0x84c2b) // 0 (0x00) 8 (0x08) 76 (0x4c) 43 (0x2b)  CRC: 0xFB4A64B4
	-1241512783,	 // (0xb60004b1) // 182 (0xb6) 0 (0x00) 4 (0x04) 177 (0xb1)  CRC: 0xC59DCEC1
	-979513663,	// CRC do Jardel: 0xC59DCEC1
	1,	//	synchronized?, exception table length
	11,	// start: 0	end: 11
	917509,	// target: 14	type: 5
//	919: flush()V
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xF4327CCB
	-1241512281,	 // (0xb60006a7) // 182 (0xb6) 0 (0x00) 6 (0x06) 167 (0xa7)  CRC: 0x082CDDA2
	281777,	 // (0x44cb1) // 0 (0x00) 4 (0x04) 76 (0x4c) 177 (0xb1)  CRC: 0xA0C525FB
	-1597692421,	// CRC do Jardel: 0xA0C525FB
	1,	//	synchronized?, exception table length
	7,	// start: 0	end: 7
	655365,	// target: 10	type: 5
//	926: print(Z)V
	463011852,	 // (0x1b99000c) // 27 (0x1b) 153 (0x99) 0 (0x00) 12 (0x0c)  CRC: 0x28C9051B
	705824695,	 // (0x2a1207b7) // 42 (0x2a) 18 (0x12) 7 (0x07) 183 (0xb7)  CRC: 0xD39C0EFB
	567040,	 // (0x8a700) // 0 (0x00) 8 (0x08) 167 (0xa7) 0 (0x00)  CRC: 0x8D80726A
	153752073,	 // (0x92a1209) // 9 (0x09) 42 (0x2a) 18 (0x12) 9 (0x09)  CRC: 0x52C7F7A5
	-1224734543,	 // (0xb70008b1) // 183 (0xb7) 0 (0x00) 8 (0x08) 177 (0xb1)  CRC: 0xEDBC9FBF
	-306405441,	// CRC do Jardel: 0xEDBC9FBF
	0,	//	synchronized?, exception table length
//	933: print(C)V
	717404928,	 // (0x2ac2bb00) // 42 (0x2a) 194 (0xc2) 187 (0xbb) 0 (0x00)  CRC: 0x12F4C04C
	173611959,	 // (0xa591bb7) // 10 (0x0a) 89 (0x59) 27 (0x1b) 183 (0xb7)  CRC: 0xA2BD8093
	740650,	 // (0xb4d2a) // 0 (0x00) 11 (0x0b) 77 (0x4d) 42 (0x2a)  CRC: 0xB19F4699
	750125068,	 // (0x2cb6000c) // 44 (0x2c) 182 (0xb6) 0 (0x00) 12 (0x0c)  CRC: 0x41B84F5E
	-1224734678,	 // (0xb700082a) // 183 (0xb7) 0 (0x00) 8 (0x08) 42 (0x2a)  CRC: 0x730F60C2
	-1011810304,	 // (0xc3b10000) // 195 (0xc3) 177 (0xb1)  CRC: 0xA2149968
	-1575708312,	// CRC do Jardel: 0xA2149968
	65536,	//	synchronized?, exception table length
//	941: print([C)V
	-1157624487,	 // (0xbb000d59) // 187 (0xbb) 0 (0x00) 13 (0x0d) 89 (0x59)  CRC: 0x9D8A83F7
	733413390,	 // (0x2bb7000e) // 43 (0x2b) 183 (0xb7) 0 (0x00) 14 (0x0e)  CRC: 0x81E68077
	1294609591,	 // (0x4d2a2cb7) // 77 (0x4d) 42 (0x2a) 44 (0x2c) 183 (0xb7)  CRC: 0x3936D85D
	569600,	 // (0x8b100) // 0 (0x00) 8 (0x08) 177 (0xb1)  CRC: 0x4BE66FE9
	1273393129,	// CRC do Jardel: 0x4BE66FE9
	0,	//	synchronized?, exception table length
//	947: print(I)V
	706459648,	 // (0x2a1bb800) // 42 (0x2a) 27 (0x1b) 184 (0xb8) 0 (0x00)  CRC: 0x9B57988C
	263651336,	 // (0xfb70008) // 15 (0x0f) 183 (0xb7) 0 (0x00) 8 (0x08)  CRC: 0xA644C1CC
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x3D0362D0
	1023632080,	// CRC do Jardel: 0x3D0362D0
	0,	//	synchronized?, exception table length
//	952: print(J)V
	706721792,	 // (0x2a1fb800) // 42 (0x2a) 31 (0x1f) 184 (0xb8) 0 (0x00)  CRC: 0xDE73B925
	280428552,	 // (0x10b70008) // 16 (0x10) 183 (0xb7) 0 (0x00) 8 (0x08)  CRC: 0xBEBA92E1
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x0F1BFA3C
	253491772,	// CRC do Jardel: 0x0F1BFA3C
	0,	//	synchronized?, exception table length
//	957: print(Ljava/lang/Object;)V
	707512064,	 // (0x2a2bc700) // 42 (0x2a) 43 (0x2b) 199 (0xc7) 0 (0x00)  CRC: 0xF0DF6F44
	135401895,	 // (0x81211a7) // 8 (0x08) 18 (0x12) 17 (0x11) 167 (0xa7)  CRC: 0xC7A527BA
	469942,	 // (0x72bb6) // 0 (0x00) 7 (0x07) 43 (0x2b) 182 (0xb6)  CRC: 0x44D4C094
	1226496,	 // (0x12b700) // 0 (0x00) 18 (0x12) 183 (0xb7) 0 (0x00)  CRC: 0xA7C16473
	145817600,	 // (0x8b10000) // 8 (0x08) 177 (0xb1)  CRC: 0x44715274
	1148277364,	// CRC do Jardel: 0x44715274
	0,	//	synchronized?, exception table length
//	964: print(Ljava/lang/String;)V
	717367851,	 // (0x2ac22a2b) // 42 (0x2a) 194 (0xc2) 42 (0x2a) 43 (0x2b)  CRC: 0x91848BAE
	-1241509078,	 // (0xb600132a) // 182 (0xb6) 0 (0x00) 19 (0x13) 42 (0x2a)  CRC: 0xC667429F
	-1241513305,	 // (0xb60002a7) // 182 (0xb6) 0 (0x00) 2 (0x02) 167 (0xa7)  CRC: 0xF74D5704
	544042,	 // (0x84d2a) // 0 (0x00) 8 (0x08) 77 (0x4d) 42 (0x2a)  CRC: 0x260772F8
	-1241508822,	 // (0xb600142a) // 182 (0xb6) 0 (0x00) 20 (0x14) 42 (0x2a)  CRC: 0x43B266FD
	-1011810304,	 // (0xc3b10000) // 195 (0xc3) 177 (0xb1)  CRC: 0x74F4FC02
	1962212354,	// CRC do Jardel: 0x74F4FC02
	65537,	//	synchronized?, exception table length
	131083,	// start: 2	end: 11
	917509,	// target: 14	type: 5
//	974: println()V
	303385642,	 // (0x12154c2a) // 18 (0x12) 21 (0x15) 76 (0x4c) 42 (0x2a)  CRC: 0x126A9ABE
	733347859,	 // (0x2bb60013) // 43 (0x2b) 182 (0xb6) 0 (0x00) 19 (0x13)  CRC: 0x41301289
	-1493170099,	 // (0xa700084d) // 167 (0xa7) 0 (0x00) 8 (0x08) 77 (0x4d)  CRC: 0xB94BFB51
	750125060,	 // (0x2cb60004) // 44 (0x2c) 182 (0xb6) 0 (0x00) 4 (0x04)  CRC: 0x15A4FCD9
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x3154CA58
	827640408,	// CRC do Jardel: 0x3154CA58
	1,	//	synchronized?, exception table length
	196616,	// start: 3	end: 8
	720901,	// target: 11	type: 5
//	983: println(Z)V
	706459136,	 // (0x2a1bb600) // 42 (0x2a) 27 (0x1b) 182 (0xb6) 0 (0x00)  CRC: 0x914117A6
	371897856,	 // (0x162ab600) // 22 (0x16) 42 (0x2a) 182 (0xb6) 0 (0x00)  CRC: 0xA4CF7420
	397475840,	 // (0x17b10000) // 23 (0x17) 177 (0xb1)  CRC: 0x3FCB1F30
	1070276400,	// CRC do Jardel: 0x3FCB1F30
	0,	//	synchronized?, exception table length
//	988: println(C)V
	717367835,	 // (0x2ac22a1b) // 42 (0x2a) 194 (0xc2) 42 (0x2a) 27 (0x1b)  CRC: 0x8C79E0FC
	-1241507798,	 // (0xb600182a) // 182 (0xb6) 0 (0x00) 24 (0x18) 42 (0x2a)  CRC: 0x386326C4
	-1241508054,	 // (0xb600172a) // 182 (0xb6) 0 (0x00) 23 (0x17) 42 (0x2a)  CRC: 0x309B613F
	-1011810304,	 // (0xc3b10000) // 195 (0xc3) 177 (0xb1)  CRC: 0x8FA238B9
	-1885194055,	// CRC do Jardel: 0x8FA238B9
	65536,	//	synchronized?, exception table length
//	994: println([C)V
	707507712,	 // (0x2a2bb600) // 42 (0x2a) 43 (0x2b) 182 (0xb6) 0 (0x00)  CRC: 0xA1B3BA93
	422229504,	 // (0x192ab600) // 25 (0x19) 42 (0x2a) 182 (0xb6) 0 (0x00)  CRC: 0x42838A73
	397475840,	 // (0x17b10000) // 23 (0x17) 177 (0xb1)  CRC: 0xF4C60F7A
	-188346502,	// CRC do Jardel: 0xF4C60F7A
	0,	//	synchronized?, exception table length
//	999: println(I)V
	706459136,	 // (0x2a1bb600) // 42 (0x2a) 27 (0x1b) 182 (0xb6) 0 (0x00)  CRC: 0x914117A6
	439006720,	 // (0x1a2ab600) // 26 (0x1a) 42 (0x2a) 182 (0xb6) 0 (0x00)  CRC: 0x91C3EF44
	397475840,	 // (0x17b10000) // 23 (0x17) 177 (0xb1)  CRC: 0x5ED69BB5
	1591122869,	// CRC do Jardel: 0x5ED69BB5
	0,	//	synchronized?, exception table length
//	1004: println(J)V
	706721280,	 // (0x2a1fb600) // 42 (0x2a) 31 (0x1f) 182 (0xb6) 0 (0x00)  CRC: 0xD465360F
	455783936,	 // (0x1b2ab600) // 27 (0x1b) 42 (0x2a) 182 (0xb6) 0 (0x00)  CRC: 0xF9A2C713
	397475840,	 // (0x17b10000) // 23 (0x17) 177 (0xb1)  CRC: 0x1C1B46CA
	471549642,	// CRC do Jardel: 0x1C1B46CA
	0,	//	synchronized?, exception table length
//	1009: println(Ljava/lang/Object;)V
	707507712,	 // (0x2a2bb600) // 42 (0x2a) 43 (0x2b) 182 (0xb6) 0 (0x00)  CRC: 0xA1B3BA93
	472561152,	 // (0x1c2ab600) // 28 (0x1c) 42 (0x2a) 182 (0xb6) 0 (0x00)  CRC: 0x5546E118
	397475840,	 // (0x17b10000) // 23 (0x17) 177 (0xb1)  CRC: 0x9D3FEB74
	-1656755340,	// CRC do Jardel: 0x9D3FEB74
	0,	//	synchronized?, exception table length
//	1014: println(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	137016832,	 // (0x82ab600) // 8 (0x08) 42 (0x2a) 182 (0xb6) 0 (0x00)  CRC: 0x450424A5
	397475840,	 // (0x17b10000) // 23 (0x17) 177 (0xb1)  CRC: 0xC7B5E115
	-944381675,	// CRC do Jardel: 0xC7B5E115
	0,	//	synchronized?, exception table length
//	1019: setError()V
	704951552,	 // (0x2a04b500) // 42 (0x2a) 4 (0x04) 181 (0xb5) 0 (0x00)  CRC: 0x3EFE4414
	28377088,	 // (0x1b10000) // 1 (0x01) 177 (0xb1)  CRC: 0xADDD6BF1
	-1377997839,	// CRC do Jardel: 0xADDD6BF1
	0,	//	synchronized?, exception table length
//	1023: write(I)V
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xF4327CCB
	454099199,	 // (0x1b1100ff) // 27 (0x1b) 17 (0x11) 0 (0x00) 255 (0xff)  CRC: 0xD1B8995E
	2125856797,	 // (0x7eb6001d) // 126 (0x7e) 182 (0xb6) 0 (0x00) 29 (0x1d)  CRC: 0x33E1BB81
	-1493170099,	 // (0xa700084d) // 167 (0xa7) 0 (0x00) 8 (0x08) 77 (0x4d)  CRC: 0x93E6AFB0
	750125060,	 // (0x2cb60004) // 44 (0x2c) 182 (0xb6) 0 (0x00) 4 (0x04)  CRC: 0xB0DA4E00
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xA6BFC138
	-1497382600,	// CRC do Jardel: 0xA6BFC138
	1,	//	synchronized?, exception table length
	12,	// start: 0	end: 12
	983045,	// target: 15	type: 5
//	1033: write([BII)V
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xF4327CCB
	723262902,	 // (0x2b1c1db6) // 43 (0x2b) 28 (0x1c) 29 (0x1d) 182 (0xb6)  CRC: 0xF99E77D2
	2011392,	 // (0x1eb100) // 0 (0x00) 30 (0x1e) 177 (0xb1)  CRC: 0x5EF9DF89
	1593433993,	// CRC do Jardel: 0x5EF9DF89
	0,	//	synchronized?, exception table length
//	1038: writeChars(Ljava/lang/String;)V
	721628086,	 // (0x2b032bb6) // 43 (0x2b) 3 (0x03) 43 (0x2b) 182 (0xb6)  CRC: 0x8DCE1190
	2078208,	 // (0x1fb600) // 0 (0x00) 31 (0x1f) 182 (0xb6) 0 (0x00)  CRC: 0xEB66A9A7
	548798497,	 // (0x20b60021) // 32 (0x20) 182 (0xb6) 0 (0x00) 33 (0x21)  CRC: 0xA1755179
	1294656000,	 // (0x4d2ae200) // 77 (0x4d) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x2A94EB8A
	2884396,	 // (0x2c032c) // 0 (0x00) 44 (0x2c) 3 (0x03) 44 (0x2c)  CRC: 0x86BB542F
	-1095368674,	 // (0xbeb6001e) // 190 (0xbe) 182 (0xb6) 0 (0x00) 30 (0x1e)  CRC: 0x0C3A38C1
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xF4FA4229
	-184925655,	// CRC do Jardel: 0xF4FA4229
	0,	//	synchronized?, exception table length
//	com.jopdesign.io.SerialPort
//	1047: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	1051: read()I
	716439553,	 // (0x2ab40001) // 42 (0x2a) 180 (0xb4) 0 (0x00) 1 (0x01)  CRC: 0x9C9EAE85
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x587C94CE
	1484559566,	// CRC do Jardel: 0x587C94CE
	0,	//	synchronized?, exception table length
//	1055: write(I)V
	706458880,	 // (0x2a1bb500) // 42 (0x2a) 27 (0x1b) 181 (0xb5) 0 (0x00)  CRC: 0x9328E22F
	28377088,	 // (0x1b10000) // 1 (0x01) 177 (0xb1)  CRC: 0x8304E86E
	-2096830354,	// CRC do Jardel: 0x8304E86E
	0,	//	synchronized?, exception table length
//	1059: rxFull()Z
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	92182784,	 // (0x57e9900) // 5 (0x05) 126 (0x7e) 153 (0x99) 0 (0x00)  CRC: 0x30D090C7
	117745408,	 // (0x704a700) // 7 (0x07) 4 (0x04) 167 (0xa7) 0 (0x00)  CRC: 0xC231A72C
	67349504,	 // (0x403ac00) // 4 (0x04) 3 (0x03) 172 (0xac)  CRC: 0x6B6CE08D
	1802297485,	// CRC do Jardel: 0x6B6CE08D
	0,	//	synchronized?, exception table length
//	1065: txEmpty()Z
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	75405568,	 // (0x47e9900) // 4 (0x04) 126 (0x7e) 153 (0x99) 0 (0x00)  CRC: 0x34118D70
	117745408,	 // (0x704a700) // 7 (0x07) 4 (0x04) 167 (0xa7) 0 (0x00)  CRC: 0x8B3CC0A1
	67349504,	 // (0x403ac00) // 4 (0x04) 3 (0x03) 172 (0xac)  CRC: 0x996C4AEB
	-1720956181,	// CRC do Jardel: 0x996C4AEB
	0,	//	synchronized?, exception table length
//	java.lang.Throwable
//	1071: <init>()V
	704757760,	 // (0x2a01c000) // 42 (0x2a) 1 (0x01) 192 (0xc0) 0 (0x00)  CRC: 0xFFCDC3AA
	28770306,	 // (0x1b70002) // 1 (0x01) 183 (0xb7) 0 (0x00) 2 (0x02)  CRC: 0x4F8CEDFE
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x235F8F8F
	593465231,	// CRC do Jardel: 0x235F8F8F
	0,	//	synchronized?, exception table length
//	1076: <init>(Ljava/lang/String;)V
	716636163,	 // (0x2ab70003) // 42 (0x2a) 183 (0xb7) 0 (0x00) 3 (0x03)  CRC: 0x526FD98F
	707453696,	 // (0x2a2ae300) // 42 (0x2a) 42 (0x2a) 227 (0xe3) 0 (0x00)  CRC: 0x18D57BDC
	19576320,	 // (0x12ab600) // 1 (0x01) 42 (0x2a) 182 (0xb6) 0 (0x00)  CRC: 0xE2F10AB9
	72821291,	 // (0x4572a2b) // 4 (0x04) 87 (0x57) 42 (0x2a) 43 (0x2b)  CRC: 0x19B8CBA1
	-486539087,	 // (0xe30000b1) // 227 (0xe3) 0 (0x00) 0 (0x00) 177 (0xb1)  CRC: 0x77847F82
	2005172098,	// CRC do Jardel: 0x77847F82
	0,	//	synchronized?, exception table length
//	1083: <init>(Ljava/lang/String;Ljava/lang/Throwable;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	36318435,	 // (0x22a2ce3) // 2 (0x02) 42 (0x2a) 44 (0x2c) 227 (0xe3)  CRC: 0x6B4D1D62
	110848,	 // (0x1b100) // 0 (0x00) 1 (0x01) 177 (0xb1)  CRC: 0x6D381425
	1832391717,	// CRC do Jardel: 0x6D381425
	0,	//	synchronized?, exception table length
//	1088: <init>(Ljava/lang/Throwable;)V
	707512064,	 // (0x2a2bc700) // 42 (0x2a) 43 (0x2b) 199 (0xc7) 0 (0x00)  CRC: 0xF0DF6F44
	117548800,	 // (0x701a700) // 7 (0x07) 1 (0x01) 167 (0xa7) 0 (0x00)  CRC: 0x03C72B42
	120305152,	 // (0x72bb600) // 7 (0x07) 43 (0x2b) 182 (0xb6) 0 (0x00)  CRC: 0x12587CA5
	86750976,	 // (0x52bb700) // 5 (0x05) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0x765F0B5C
	112263168,	 // (0x6b10000) // 6 (0x06) 177 (0xb1)  CRC: 0xA3B780E7
	-1548255001,	// CRC do Jardel: 0xA3B780E7
	0,	//	synchronized?, exception table length
//	1095: getMessage()Ljava/lang/String;
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xF4327CCB
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0x46F4FE85
	1190461061,	// CRC do Jardel: 0x46F4FE85
	0,	//	synchronized?, exception table length
//	1099: getLocalizedMessage()Ljava/lang/String;
	716570631,	 // (0x2ab60007) // 42 (0x2a) 182 (0xb6) 0 (0x00) 7 (0x07)  CRC: 0xFC835456
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0xCA341921
	-902555359,	// CRC do Jardel: 0xCA341921
	0,	//	synchronized?, exception table length
//	1103: getCause()Ljava/lang/Throwable;
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x285FE67C
	715522055,	 // (0x2aa60007) // 42 (0x2a) 166 (0xa6) 0 (0x00) 7 (0x07)  CRC: 0x4CB96074
	27721735,	 // (0x1a70007) // 1 (0x01) 167 (0xa7) 0 (0x00) 7 (0x07)  CRC: 0x8E2ED5BC
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x4A2BE1D5
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0x294ACF05
	692768517,	// CRC do Jardel: 0x294ACF05
	0,	//	synchronized?, exception table length
//	1110: initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
	724215296,	 // (0x2b2aa600) // 43 (0x2b) 42 (0x2a) 166 (0xa6) 0 (0x00)  CRC: 0x6AE1AE88
	196804616,	 // (0xbbb0008) // 11 (0x0b) 187 (0xbb) 0 (0x00) 8 (0x08)  CRC: 0xC4731D0B
	1505165321,	 // (0x59b70009) // 89 (0x59) 183 (0xb7) 0 (0x00) 9 (0x09)  CRC: 0x85DACCA3
	-1087708672,	 // (0xbf2ae200) // 191 (0xbf) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x5186AA47
	19571968,	 // (0x12aa500) // 1 (0x01) 42 (0x2a) 165 (0xa5) 0 (0x00)  CRC: 0x6F9AA775
	196804618,	 // (0xbbb000a) // 11 (0x0b) 187 (0xbb) 0 (0x00) 10 (0x0a)  CRC: 0x64CDF2D5
	1505165323,	 // (0x59b7000b) // 89 (0x59) 183 (0xb7) 0 (0x00) 11 (0x0b)  CRC: 0xC6EB5F95
	-1087755293,	 // (0xbf2a2be3) // 191 (0xbf) 42 (0x2a) 43 (0x2b) 227 (0xe3)  CRC: 0x812CB339
	76464,	 // (0x12ab0) // 0 (0x00) 1 (0x01) 42 (0x2a) 176 (0xb0)  CRC: 0x21346CCA
	557083850,	// CRC do Jardel: 0x21346CCA
	0,	//	synchronized?, exception table length
//	1121: printStackTrace()V
	719323286,	 // (0x2ae00096) // 42 (0x2a) 224 (0xe0) 0 (0x00) 150 (0x96)  CRC: 0xC5DD96A6
	-1241510735,	 // (0xb6000cb1) // 182 (0xb6) 0 (0x00) 12 (0x0c) 177 (0xb1)  CRC: 0x0D2E96E8
	221157096,	// CRC do Jardel: 0x0D2E96E8
	0,	//	synchronized?, exception table length
//	1125: printStackTrace(Ljava/io/PrintStream;)V
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xB9FF90C9
	-1174433591,	// CRC do Jardel: 0xB9FF90C9
	0,	//	synchronized?, exception table length
//	1128: fillInStackTrace()Ljava/lang/Throwable;
	716177408,	 // (0x2ab00000) // 42 (0x2a) 176 (0xb0)  CRC: 0x05D7159B
	97981851,	// CRC do Jardel: 0x05D7159B
	0,	//	synchronized?, exception table length
//	com.jopdesign.io.IOFactory
//	1131: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	716898306,	 // (0x2abb0002) // 42 (0x2a) 187 (0xbb) 0 (0x00) 2 (0x02)  CRC: 0xF0496FEF
	1505165315,	 // (0x59b70003) // 89 (0x59) 183 (0xb7) 0 (0x00) 3 (0x03)  CRC: 0x8D223152
	277873592,	 // (0x109003b8) // 16 (0x10) 144 (0x90) 3 (0x03) 184 (0xb8)  CRC: 0xCA9AE5FC
	311296,	 // (0x4c000) // 0 (0x00) 4 (0x04) 192 (0xc0) 0 (0x00)  CRC: 0xD914EC5E
	48431104,	 // (0x2e30000) // 2 (0x02) 227 (0xe3) 0 (0x00) 0 (0x00)  CRC: 0x4F92F571
	716898309,	 // (0x2abb0005) // 42 (0x2a) 187 (0xbb) 0 (0x00) 5 (0x05)  CRC: 0x1B8A02A6
	1505165318,	 // (0x59b70006) // 89 (0x59) 183 (0xb7) 0 (0x00) 6 (0x06)  CRC: 0xDBF0C8C1
	276825272,	 // (0x108004b8) // 16 (0x10) 128 (0x80) 4 (0x04) 184 (0xb8)  CRC: 0x3E599546
	311296,	 // (0x4c000) // 0 (0x00) 4 (0x04) 192 (0xc0) 0 (0x00)  CRC: 0xB4FD6B59
	98762753,	 // (0x5e30001) // 5 (0x05) 227 (0xe3) 0 (0x00) 1 (0x01)  CRC: 0xEA416B27
	716701703,	 // (0x2ab80007) // 42 (0x2a) 184 (0xb8) 0 (0x00) 7 (0x07)  CRC: 0x2320DE81
	302515640,	 // (0x120805b8) // 18 (0x12) 8 (0x08) 5 (0x05) 184 (0xb8)  CRC: 0xEBD33987
	647936,	 // (0x9e300) // 0 (0x00) 9 (0x09) 227 (0xe3) 0 (0x00)  CRC: 0x65A78493
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCF39FF8A
	-818282614,	// CRC do Jardel: 0xCF39FF8A
	0,	//	synchronized?, exception table length
//	1148: makeHWObject(Ljava/lang/Object;II)Ljava/lang/Object;
	81083946,	 // (0x4d53e2a) // 4 (0x04) 213 (0xd5) 62 (0x3e) 42 (0x2a)  CRC: 0xD43298F6
	454827448,	 // (0x1b1c1db8) // 27 (0x1b) 28 (0x1c) 29 (0x1d) 184 (0xb8)  CRC: 0xBDF2E87D
	765952,	 // (0xbb000) // 0 (0x00) 11 (0x0b) 176 (0xb0)  CRC: 0xD708262C
	-687331796,	// CRC do Jardel: 0xD708262C
	0,	//	synchronized?, exception table length
//	1153: makeHWArray(III)[I
	81083930,	 // (0x4d53e1a) // 4 (0x04) 213 (0xd5) 62 (0x3e) 26 (0x1a)  CRC: 0xC9CFF3A4
	454827448,	 // (0x1b1c1db8) // 27 (0x1b) 28 (0x1c) 29 (0x1d) 184 (0xb8)  CRC: 0x4F5A1D97
	831488,	 // (0xcb000) // 0 (0x00) 12 (0x0c) 176 (0xb0)  CRC: 0x617508F6
	1635059958,	// CRC do Jardel: 0x617508F6
	0,	//	synchronized?, exception table length
//	1158: getFactory()Lcom/jopdesign/io/IOFactory;
	-536832080,	 // (0xe00097b0) // 224 (0xe0) 0 (0x00) 151 (0x97) 176 (0xb0)  CRC: 0x8A65BC53
	-1973044141,	// CRC do Jardel: 0x8A65BC53
	0,	//	synchronized?, exception table length
//	1161: registerInterruptHandler(ILjava/lang/Runnable;)V
	455915520,	 // (0x1b2cb800) // 27 (0x1b) 44 (0x2c) 184 (0xb8) 0 (0x00)  CRC: 0x4C993BE4
	229703680,	 // (0xdb10000) // 13 (0x0d) 177 (0xb1)  CRC: 0xE59BD4A6
	-442772314,	// CRC do Jardel: 0xE59BD4A6
	0,	//	synchronized?, exception table length
//	1165: deregisterInterruptHandler(I)V
	465043470,	 // (0x1bb8000e) // 27 (0x1b) 184 (0xb8) 0 (0x00) 14 (0x0e)  CRC: 0x6669DA38
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x0BD2299C
	198322588,	// CRC do Jardel: 0x0BD2299C
	0,	//	synchronized?, exception table length
//	1169: enableInterrupt(I)V
	-1308613628,	 // (0xb2002404) // 178 (0xb2) 0 (0x00) 36 (0x24) 4 (0x04)  CRC: 0xF43ED8E9
	460882099,	 // (0x1b7880b3) // 27 (0x1b) 120 (0x78) 128 (0x80) 179 (0xb3)  CRC: 0x2F5BD2DD
	2370274,	 // (0x242ae2) // 0 (0x00) 36 (0x24) 42 (0x2a) 226 (0xe2)  CRC: 0x49535D5A
	111104,	 // (0x1b200) // 0 (0x00) 1 (0x01) 178 (0xb2) 0 (0x00)  CRC: 0x9D4224BA
	615841800,	 // (0x24b50008) // 36 (0x24) 181 (0xb5) 0 (0x00) 8 (0x08)  CRC: 0xDDA7A701
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x2305471C
	587548444,	// CRC do Jardel: 0x2305471C
	0,	//	synchronized?, exception table length
//	1177: disableInterrupt(I)V
	68909117,	 // (0x41b783d) // 4 (0x04) 27 (0x1b) 120 (0x78) 61 (0x3d)  CRC: 0xE108C9CC
	469926461,	 // (0x1c02823d) // 28 (0x1c) 2 (0x02) 130 (0x82) 61 (0x3d)  CRC: 0xCE2EC9EE
	-1308613604,	 // (0xb200241c) // 178 (0xb2) 0 (0x00) 36 (0x24) 28 (0x1c)  CRC: 0xE78F933D
	2125660196,	 // (0x7eb30024) // 126 (0x7e) 179 (0xb3) 0 (0x00) 36 (0x24)  CRC: 0xE97C1F83
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x004EC000
	-1308613451,	 // (0xb20024b5) // 178 (0xb2) 0 (0x00) 36 (0x24) 181 (0xb5)  CRC: 0x2CBF0E2F
	569600,	 // (0x8b100) // 0 (0x00) 8 (0x08) 177 (0xb1)  CRC: 0x205AA92F
	542812463,	// CRC do Jardel: 0x205AA92F
	0,	//	synchronized?, exception table length
//	1186: getSerialPort()Lcom/jopdesign/io/SerialPort;
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xF4327CCB
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0x46F4FE85
	1190461061,	// CRC do Jardel: 0x46F4FE85
	0,	//	synchronized?, exception table length
//	1190: getSysDevice()Lcom/jopdesign/io/SysDevice;
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x285FE67C
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0x1D55224F
	492118607,	// CRC do Jardel: 0x1D55224F
	0,	//	synchronized?, exception table length
//	1194: getScratchpadMemory()[I
	719454210,	 // (0x2ae20002) // 42 (0x2a) 226 (0xe2) 0 (0x00) 2 (0x02)  CRC: 0x48285412
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0xF1B74711
	-239646959,	// CRC do Jardel: 0xF1B74711
	0,	//	synchronized?, exception table length
//	1198: <clinit>()V
	-1157623975,	 // (0xbb000f59) // 187 (0xbb) 0 (0x00) 15 (0x0f) 89 (0x59)  CRC: 0x9E3BDAF9
	-1224732447,	 // (0xb70010e1) // 183 (0xb7) 0 (0x00) 16 (0x10) 225 (0xe1)  CRC: 0xEF16BED0
	9941248,	 // (0x97b100) // 0 (0x00) 151 (0x97) 177 (0xb1)  CRC: 0xC355E66C
	-1017780628,	// CRC do Jardel: 0xC355E66C
	0,	//	synchronized?, exception table length
//	java.io.JOPInputStream
//	1203: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	1207: available()I
	277926149,	 // (0x1090d105) // 16 (0x10) 144 (0x90) 209 (0xd1) 5 (0x05)  CRC: 0xF87B48FE
	2123956229,	 // (0x7e990005) // 126 (0x7e) 153 (0x99) 0 (0x00) 5 (0x05)  CRC: 0x07EC6EB6
	78381996,	 // (0x4ac03ac) // 4 (0x04) 172 (0xac) 3 (0x03) 172 (0xac)  CRC: 0xA8B01C4E
	-1464853426,	// CRC do Jardel: 0xA8B01C4E
	0,	//	synchronized?, exception table length
//	1212: read()I
	277926149,	 // (0x1090d105) // 16 (0x10) 144 (0x90) 209 (0xd1) 5 (0x05)  CRC: 0xF87B48FE
	2124021766,	 // (0x7e9a0006) // 126 (0x7e) 154 (0x9a) 0 (0x00) 6 (0x06)  CRC: 0x1570830B
	-1476397040,	 // (0xa7fff810) // 167 (0xa7) 255 (0xff) 248 (0xf8) 16 (0x10)  CRC: 0x38F09FE2
	-1848529920,	 // (0x91d1ac00) // 145 (0x91) 209 (0xd1) 172 (0xac)  CRC: 0x453E674A
	1161717578,	// CRC do Jardel: 0x453E674A
	0,	//	synchronized?, exception table length
//	java.lang.RuntimeException
//	1218: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	1222: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	1226: <init>(Ljava/lang/String;Ljava/lang/Throwable;)V
	707472567,	 // (0x2a2b2cb7) // 42 (0x2a) 43 (0x2b) 44 (0x2c) 183 (0xb7)  CRC: 0xFA82A471
	241920,	 // (0x3b100) // 0 (0x00) 3 (0x03) 177 (0xb1)  CRC: 0x7A9B4B44
	2056997700,	// CRC do Jardel: 0x7A9B4B44
	0,	//	synchronized?, exception table length
//	1230: <init>(Ljava/lang/Throwable;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	78708736,	 // (0x4b10000) // 4 (0x04) 177 (0xb1)  CRC: 0xD46C10C9
	-731115319,	// CRC do Jardel: 0xD46C10C9
	0,	//	synchronized?, exception table length
//	java.io.UnsupportedEncodingException
//	1234: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	1238: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	util.Dbg
//	1242: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	1246: dbgWr(I)V
//	abstract
//	1246: dbgReadBuffer([II)I
//	abstract
//	1246: init()V
	-1157627303,	 // (0xbb000259) // 187 (0xbb) 0 (0x00) 2 (0x02) 89 (0x59)  CRC: 0x9644A05A
	-1224735775,	 // (0xb70003e1) // 183 (0xb7) 0 (0x00) 3 (0x03) 225 (0xe1)  CRC: 0xF5072D2D
	10006784,	 // (0x98b100) // 0 (0x00) 152 (0x98) 177 (0xb1)  CRC: 0x88274541
	-2010692287,	// CRC do Jardel: 0x88274541
	0,	//	synchronized?, exception table length
//	1251: initSer()V
	-1157626791,	 // (0xbb000459) // 187 (0xbb) 0 (0x00) 4 (0x04) 89 (0x59)  CRC: 0x92974B48
	-1224735263,	 // (0xb70005e1) // 183 (0xb7) 0 (0x00) 5 (0x05) 225 (0xe1)  CRC: 0x56E6ABEE
	10006784,	 // (0x98b100) // 0 (0x00) 152 (0x98) 177 (0xb1)  CRC: 0x337C039A
	863765402,	// CRC do Jardel: 0x337C039A
	0,	//	synchronized?, exception table length
//	1256: initSerWait()V
	-1157626791,	 // (0xbb000459) // 187 (0xbb) 0 (0x00) 4 (0x04) 89 (0x59)  CRC: 0x92974B48
	79101958,	 // (0x4b70006) // 4 (0x04) 183 (0xb7) 0 (0x00) 6 (0x06)  CRC: 0xE40E00D7
	-520054607,	 // (0xe10098b1) // 225 (0xe1) 0 (0x00) 152 (0x98) 177 (0xb1)  CRC: 0xBD242B84
	-1121703036,	// CRC do Jardel: 0xBD242B84
	0,	//	synchronized?, exception table length
//	1261: wr(I)V
	-536831974,	 // (0xe000981a) // 224 (0xe0) 0 (0x00) 152 (0x98) 26 (0x1a)  CRC: 0x885454C1
	-1241512015,	 // (0xb60007b1) // 182 (0xb6) 0 (0x00) 7 (0x07) 177 (0xb1)  CRC: 0xBB72EEC2
	-1150095678,	// CRC do Jardel: 0xBB72EEC2
	0,	//	synchronized?, exception table length
//	1265: lf()V
	-536831984,	 // (0xe0009810) // 224 (0xe0) 0 (0x00) 152 (0x98) 16 (0x10)  CRC: 0xCDA4E412
	230031367,	 // (0xdb60007) // 13 (0x0d) 182 (0xb6) 0 (0x00) 7 (0x07)  CRC: 0x679F737A
	-536831984,	 // (0xe0009810) // 224 (0xe0) 0 (0x00) 152 (0x98) 16 (0x10)  CRC: 0xDCAF311B
	179699719,	 // (0xab60007) // 10 (0x0a) 182 (0xb6) 0 (0x00) 7 (0x07)  CRC: 0x38623A67
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xBBCD6D45
	-1144165051,	// CRC do Jardel: 0xBBCD6D45
	0,	//	synchronized?, exception table length
//	1272: readBuffer([II)I
	-536831958,	 // (0xe000982a) // 224 (0xe0) 0 (0x00) 152 (0x98) 42 (0x2a)  CRC: 0x95A93F93
	464912392,	 // (0x1bb60008) // 27 (0x1b) 182 (0xb6) 0 (0x00) 8 (0x08)  CRC: 0x45071299
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x07D40295
	131334805,	// CRC do Jardel: 0x07D40295
	0,	//	synchronized?, exception table length
//	1277: wr(Ljava/lang/String;I)V
	716701705,	 // (0x2ab80009) // 42 (0x2a) 184 (0xb8) 0 (0x00) 9 (0x09)  CRC: 0xAA185474
	465043466,	 // (0x1bb8000a) // 27 (0x1b) 184 (0xb8) 0 (0x00) 10 (0x0a)  CRC: 0xE7AF4C87
	302757888,	 // (0x120bb800) // 18 (0x12) 11 (0x0b) 184 (0xb8) 0 (0x00)  CRC: 0xDD4ED8F4
	162594816,	 // (0x9b10000) // 9 (0x09) 177 (0xb1)  CRC: 0x246FC387
	611304327,	// CRC do Jardel: 0x246FC387
	0,	//	synchronized?, exception table length
//	1283: wr(Ljava/lang/String;)V
	716570636,	 // (0x2ab6000c) // 42 (0x2a) 182 (0xb6) 0 (0x00) 12 (0x0c)  CRC: 0x651E7E32
	1006845212,	 // (0x3c033d1c) // 60 (0x3c) 3 (0x03) 61 (0x3d) 28 (0x1c)  CRC: 0x805A5E87
	463601682,	 // (0x1ba20012) // 27 (0x1b) 162 (0xa2) 0 (0x00) 18 (0x12)  CRC: 0xA7783701
	706524672,	 // (0x2a1cb600) // 42 (0x2a) 28 (0x1c) 182 (0xb6) 0 (0x00)  CRC: 0xAB8E3FCB
	230162446,	 // (0xdb8000e) // 13 (0x0d) 184 (0xb8) 0 (0x00) 14 (0x0e)  CRC: 0xF8981A3D
	470048829,	 // (0x1c04603d) // 28 (0x1c) 4 (0x04) 96 (0x60) 61 (0x3d)  CRC: 0x8667E9A2
	-1476399183,	 // (0xa7ffefb1) // 167 (0xa7) 255 (0xff) 239 (0xef) 177 (0xb1)  CRC: 0x01AEFD5F
	28245343,	// CRC do Jardel: 0x01AEFD5F
	0,	//	synchronized?, exception table length
//	1292: wr(Ljava/lang/StringBuffer;)V
	716570639,	 // (0x2ab6000f) // 42 (0x2a) 182 (0xb6) 0 (0x00) 15 (0x0f)  CRC: 0x0569CC5C
	1006845212,	 // (0x3c033d1c) // 60 (0x3c) 3 (0x03) 61 (0x3d) 28 (0x1c)  CRC: 0x6CB83BD9
	463601682,	 // (0x1ba20012) // 27 (0x1b) 162 (0xa2) 0 (0x00) 18 (0x12)  CRC: 0xAF63120B
	706524672,	 // (0x2a1cb600) // 42 (0x2a) 28 (0x1c) 182 (0xb6) 0 (0x00)  CRC: 0xDB56FE85
	280494094,	 // (0x10b8000e) // 16 (0x10) 184 (0xb8) 0 (0x00) 14 (0x0e)  CRC: 0xD943D7E4
	470048829,	 // (0x1c04603d) // 28 (0x1c) 4 (0x04) 96 (0x60) 61 (0x3d)  CRC: 0xD655A270
	-1476399183,	 // (0xa7ffefb1) // 167 (0xa7) 255 (0xff) 239 (0xef) 177 (0xb1)  CRC: 0xA37B417D
	-1552203395,	// CRC do Jardel: 0xA37B417D
	0,	//	synchronized?, exception table length
//	1301: wr(Z)V
	446234632,	 // (0x1a990008) // 26 (0x1a) 153 (0x99) 0 (0x00) 8 (0x08)  CRC: 0x50FD54A9
	303146752,	 // (0x1211a700) // 18 (0x12) 17 (0x11) 167 (0xa7) 0 (0x00)  CRC: 0x00DCA356
	85070520,	 // (0x51212b8) // 5 (0x05) 18 (0x12) 18 (0x12) 184 (0xb8)  CRC: 0xC7291A80
	635136,	 // (0x9b100) // 0 (0x00) 9 (0x09) 177 (0xb1)  CRC: 0x9FD898C5
	-1613195067,	// CRC do Jardel: 0x9FD898C5
	0,	//	synchronized?, exception table length
//	1307: intVal(I)V
	71113372,	 // (0x43d1a9c) // 4 (0x04) 61 (0x3d) 26 (0x1a) 156 (0x9c)  CRC: 0xFA904939
	659501,	 // (0xa102d) // 0 (0x00) 10 (0x0a) 16 (0x10) 45 (0x2d)  CRC: 0xB5639300
	-1207955966,	 // (0xb8000e02) // 184 (0xb8) 0 (0x00) 14 (0x0e) 2 (0x02)  CRC: 0x99D81F39
	1023622171,	 // (0x3d033c1b) // 61 (0x3d) 3 (0x03) 60 (0x3c) 27 (0x1b)  CRC: 0x70CFDA4C
	270508544,	 // (0x101fa200) // 16 (0x10) 31 (0x1f) 162 (0xa2) 0 (0x00)  CRC: 0x90C35446
	618659993,	 // (0x24e00099) // 36 (0x24) 224 (0xe0) 0 (0x00) 153 (0x99)  CRC: 0xEFEE3C89
	454692874,	 // (0x1b1a100a) // 27 (0x1b) 26 (0x1a) 16 (0x10) 10 (0x0a)  CRC: 0x629A0181
	1880909840,	 // (0x701c6810) // 112 (0x70) 28 (0x1c) 104 (0x68) 16 (0x10)  CRC: 0x4FFA688A
	811618074,	 // (0x30604f1a) // 48 (0x30) 96 (0x60) 79 (0x4f) 26 (0x1a)  CRC: 0x52107635
	269118523,	 // (0x100a6c3b) // 16 (0x10) 10 (0x0a) 108 (0x6c) 59 (0x3b)  CRC: 0x76500564
	446300166,	 // (0x1a9a0006) // 26 (0x1a) 154 (0x9a) 0 (0x00) 6 (0x06)  CRC: 0x542FD1F9
	-1493169637,	 // (0xa7000a1b) // 167 (0xa7) 0 (0x00) 10 (0x0a) 27 (0x1b)  CRC: 0x4C4F9D59
	73415847,	 // (0x4603ca7) // 4 (0x04) 96 (0x60) 60 (0x3c) 167 (0xa7)  CRC: 0xF14BDA16
	-2352325,	 // (0xffdc1b3b) // 255 (0xff) 220 (0xdc) 27 (0x1b) 59 (0x3b)  CRC: 0x5B129DFB
	446365715,	 // (0x1a9b0013) // 26 (0x1a) 155 (0x9b) 0 (0x00) 19 (0x13)  CRC: 0x127C1D49
	-536831718,	 // (0xe000991a) // 224 (0xe0) 0 (0x00) 153 (0x99) 26 (0x1a)  CRC: 0x80FAEA04
	781367296,	 // (0x2e92b800) // 46 (0x2e) 146 (0x92) 184 (0xb8) 0 (0x00)  CRC: 0x9F29A7CE
	236585568,	 // (0xe1a0260) // 14 (0x0e) 26 (0x1a) 2 (0x02) 96 (0x60)  CRC: 0x4A58E739
	1000865775,	 // (0x3ba7ffef) // 59 (0x3b) 167 (0xa7) 255 (0xff) 239 (0xef)  CRC: 0x761B6E89
	270579712,	 // (0x1020b800) // 16 (0x10) 32 (0x20) 184 (0xb8) 0 (0x00)  CRC: 0xF027E21B
	246480896,	 // (0xeb10000) // 14 (0x0e) 177 (0xb1)  CRC: 0x2C3E09F8
	742263288,	// CRC do Jardel: 0x2C3E09F8
	0,	//	synchronized?, exception table length
//	1330: hexVal(I)V
	437260450,	 // (0x1a1010a2) // 26 (0x1a) 16 (0x10) 16 (0x10) 162 (0xa2)  CRC: 0x9E550DF0
	793243,	 // (0xc1a9b) // 0 (0x00) 12 (0x0c) 26 (0x1a) 155 (0x9b)  CRC: 0x86DCE80A
	528432,	 // (0x81030) // 0 (0x00) 8 (0x08) 16 (0x10) 48 (0x30)  CRC: 0x24CDD2D3
	-1207955965,	 // (0xb8000e03) // 184 (0xb8) 0 (0x00) 14 (0x0e) 3 (0x03)  CRC: 0x9AF8936D
	1008406559,	 // (0x3c1b101f) // 60 (0x3c) 27 (0x1b) 16 (0x10) 31 (0x1f)  CRC: 0xDD41504D
	-1577045222,	 // (0xa200331a) // 162 (0xa2) 0 (0x00) 51 (0x33) 26 (0x1a)  CRC: 0x94831FE6
	269450813,	 // (0x100f7e3d) // 16 (0x10) 15 (0x0f) 126 (0x7e) 61 (0x3d)  CRC: 0x5E7A128A
	470813346,	 // (0x1c100aa2) // 28 (0x1c) 16 (0x10) 10 (0x0a) 162 (0xa2)  CRC: 0x20CA8366
	728080,	 // (0xb1c10) // 0 (0x00) 11 (0x0b) 28 (0x1c) 16 (0x10)  CRC: 0x203E3A9F
	811613607,	 // (0x30603da7) // 48 (0x30) 96 (0x60) 61 (0x3d) 167 (0xa7)  CRC: 0x0AC0F74E
	531472,	 // (0x81c10) // 0 (0x00) 8 (0x08) 28 (0x1c) 16 (0x10)  CRC: 0x7A0315D0
	1465925088,	 // (0x57603de0) // 87 (0x57) 96 (0x60) 61 (0x3d) 224 (0xe0)  CRC: 0xA949E630
	10033948,	 // (0x991b1c) // 0 (0x00) 153 (0x99) 27 (0x1b) 28 (0x1c)  CRC: 0x6B92A182
	1327105916,	 // (0x4f1a077c) // 79 (0x4f) 26 (0x1a) 7 (0x07) 124 (0x7c)  CRC: 0x3A6A39C5
	991599104,	 // (0x3b1a9a00) // 59 (0x3b) 26 (0x1a) 154 (0x9a) 0 (0x00)  CRC: 0x0391D5A7
	111607818,	 // (0x6a7000a) // 6 (0x06) 167 (0xa7) 0 (0x00) 10 (0x0a)  CRC: 0xF12B3105
	453271612,	 // (0x1b04603c) // 27 (0x1b) 4 (0x04) 96 (0x60) 60 (0x3c)  CRC: 0x835065BB
	-1476408037,	 // (0xa7ffcd1b) // 167 (0xa7) 255 (0xff) 205 (0xcd) 27 (0x1b)  CRC: 0x90C1A725
	991599360,	 // (0x3b1a9b00) // 59 (0x3b) 26 (0x1a) 155 (0x9b) 0 (0x00)  CRC: 0xE8B369C8
	316670105,	 // (0x12e00099) // 18 (0x12) 224 (0xe0) 0 (0x00) 153 (0x99)  CRC: 0x3CEF4800
	439269376,	 // (0x1a2eb800) // 26 (0x1a) 46 (0x2e) 184 (0xb8) 0 (0x00)  CRC: 0x11E0F912
	236585568,	 // (0xe1a0260) // 14 (0x0e) 26 (0x1a) 2 (0x02) 96 (0x60)  CRC: 0x5AC5572B
	1000865776,	 // (0x3ba7fff0) // 59 (0x3b) 167 (0xa7) 255 (0xff) 240 (0xf0)  CRC: 0x9D3D6C08
	270579712,	 // (0x1020b800) // 16 (0x10) 32 (0x20) 184 (0xb8) 0 (0x00)  CRC: 0x065F3B62
	246480896,	 // (0xeb10000) // 14 (0x0e) 177 (0xb1)  CRC: 0x911FF6F7
	-1860176137,	// CRC do Jardel: 0x911FF6F7
	0,	//	synchronized?, exception table length
//	1357: byteVal(I)V
	436697616,	 // (0x1a077a10) // 26 (0x1a) 7 (0x07) 122 (0x7a) 16 (0x10)  CRC: 0xFE801A19
	259931163,	 // (0xf7e3c1b) // 15 (0x0f) 126 (0x7e) 60 (0x3c) 27 (0x1b)  CRC: 0x8CBC1D3E
	269132288,	 // (0x100aa200) // 16 (0x10) 10 (0x0a) 162 (0xa2) 0 (0x00)  CRC: 0xB7565DCB
	186322992,	 // (0xb1b1030) // 11 (0x0b) 27 (0x1b) 16 (0x10) 48 (0x30)  CRC: 0x31864AD7
	1614587648,	 // (0x603ca700) // 96 (0x60) 60 (0x3c) 167 (0xa7) 0 (0x00)  CRC: 0xCC466E26
	135991383,	 // (0x81b1057) // 8 (0x08) 27 (0x1b) 16 (0x10) 87 (0x57)  CRC: 0xE5390F9E
	1614551992,	 // (0x603c1bb8) // 96 (0x60) 60 (0x3c) 27 (0x1b) 184 (0xb8)  CRC: 0xB0FE9545
	924176,	 // (0xe1a10) // 0 (0x00) 14 (0x0e) 26 (0x1a) 16 (0x10)  CRC: 0xA3387F46
	259931163,	 // (0xf7e3c1b) // 15 (0x0f) 126 (0x7e) 60 (0x3c) 27 (0x1b)  CRC: 0x81C53DFD
	269132288,	 // (0x100aa200) // 16 (0x10) 10 (0x0a) 162 (0xa2) 0 (0x00)  CRC: 0xC1E722FA
	186322992,	 // (0xb1b1030) // 11 (0x0b) 27 (0x1b) 16 (0x10) 48 (0x30)  CRC: 0xEA56EEED
	1614587648,	 // (0x603ca700) // 96 (0x60) 60 (0x3c) 167 (0xa7) 0 (0x00)  CRC: 0x4E7E1AC8
	135991383,	 // (0x81b1057) // 8 (0x08) 27 (0x1b) 16 (0x10) 87 (0x57)  CRC: 0x1A284051
	1614551992,	 // (0x603c1bb8) // 96 (0x60) 60 (0x3c) 27 (0x1b) 184 (0xb8)  CRC: 0xBAC82D89
	921632,	 // (0xe1020) // 0 (0x00) 14 (0x0e) 16 (0x10) 32 (0x20)  CRC: 0x84BD1771
	-1207955791,	 // (0xb8000eb1) // 184 (0xb8) 0 (0x00) 14 (0x0e) 177 (0xb1)  CRC: 0x2D18D686
	756602502,	// CRC do Jardel: 0x2D18D686
	0,	//	synchronized?, exception table length
//	1375: <clinit>()V
	270580746,	 // (0x1020bc0a) // 16 (0x10) 32 (0x20) 188 (0xbc) 10 (0x0a)  CRC: 0xEA2C90B1
	-520054351,	 // (0xe10099b1) // 225 (0xe1) 0 (0x00) 153 (0x99) 177 (0xb1)  CRC: 0x99A37A95
	-1717339499,	// CRC do Jardel: 0x99A37A95
	0,	//	synchronized?, exception table length
//	com.jopdesign.sys.JVM
//	1379: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	1383: f_nop()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1386: f_aconst_null()I
	61603840,	 // (0x3ac0000) // 3 (0x03) 172 (0xac)  CRC: 0x6000AA9C
	1610656412,	// CRC do Jardel: 0x6000AA9C
	0,	//	synchronized?, exception table length
//	1389: f_iconst_m1()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1392: f_iconst_0()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1395: f_iconst_1()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1398: f_iconst_2()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1401: f_iconst_3()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1404: f_iconst_4()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1407: f_iconst_5()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1410: f_lconst_0()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1413: f_lconst_1()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1416: f_fconst_0()I
	61603840,	 // (0x3ac0000) // 3 (0x03) 172 (0xac)  CRC: 0x6000AA9C
	1610656412,	// CRC do Jardel: 0x6000AA9C
	0,	//	synchronized?, exception table length
//	1419: f_fconst_1()I
	302230528,	 // (0x1203ac00) // 18 (0x12) 3 (0x03) 172 (0xac)  CRC: 0xE99CBA89
	-375604599,	// CRC do Jardel: 0xE99CBA89
	0,	//	synchronized?, exception table length
//	1422: f_fconst_2()I
	302296064,	 // (0x1204ac00) // 18 (0x12) 4 (0x04) 172 (0xac)  CRC: 0xDE53C4F3
	-564935437,	// CRC do Jardel: 0xDE53C4F3
	0,	//	synchronized?, exception table length
//	1425: f_dconst_0()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1428: f_dconst_1()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1431: f_bipush()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1434: f_sipush()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1437: f_ldc()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1440: f_ldc_w()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1443: f_ldc2_w()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1446: f_iload()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1449: f_lload()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1452: f_fload()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1455: f_dload()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1458: f_aload()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1461: f_iload_0()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1464: f_iload_1()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1467: f_iload_2()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1470: f_iload_3()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1473: f_lload_0()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1476: f_lload_1()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1479: f_lload_2()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1482: f_lload_3()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1485: f_fload_0()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1488: f_fload_1()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1491: f_fload_2()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1494: f_fload_3()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1497: f_dload_0()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1500: f_dload_1()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1503: f_dload_2()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1506: f_dload_3()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1509: f_aload_0()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1512: f_aload_1()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1515: f_aload_2()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1518: f_aload_3()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1521: f_iaload()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1524: f_laload()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1527: f_faload()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1530: f_daload()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1533: f_aaload()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1536: f_baload()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1539: f_caload()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1542: f_saload()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1545: f_istore()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1548: f_lstore()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1551: f_fstore()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1554: f_dstore()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1557: f_astore()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1560: f_istore_0()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1563: f_istore_1()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1566: f_istore_2()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1569: f_istore_3()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1572: f_lstore_0()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1575: f_lstore_1()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1578: f_lstore_2()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1581: f_lstore_3()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1584: f_fstore_0()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1587: f_fstore_1()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1590: f_fstore_2()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1593: f_fstore_3()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1596: f_dstore_0()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1599: f_dstore_1()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1602: f_dstore_2()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1605: f_dstore_3()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1608: f_astore_0()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1611: f_astore_1()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1614: f_astore_2()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1617: f_astore_3()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1620: f_iastore()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1623: f_lastore()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1626: f_fastore()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1629: f_dastore()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1632: f_aastore(III)V
	-536831399,	 // (0xe0009a59) // 224 (0xe0) 0 (0x00) 154 (0x9a) 89 (0x59)  CRC: 0x3A812FF4
	1321343515,	 // (0x4ec21a1b) // 78 (0x4e) 194 (0xc2) 26 (0x1a) 27 (0x1b)  CRC: 0xA75CBC7A
	775291925,	 // (0x2e360415) // 46 (0x2e) 54 (0x36) 4 (0x04) 21 (0x15)  CRC: 0xA1C02B00
	77135908,	 // (0x4990024) // 4 (0x04) 153 (0x99) 0 (0x00) 36 (0x24)  CRC: 0x9D8B1491
	352587782,	 // (0x15041006) // 21 (0x15) 4 (0x04) 16 (0x10) 6 (0x06)  CRC: 0x5F462DBA
	1624486400,	 // (0x60d3b200) // 96 (0x60) 211 (0xd3) 178 (0xb2) 0 (0x00)  CRC: 0xDA582B71
	1201602584,	 // (0x479f0018) // 71 (0x47) 159 (0x9f) 0 (0x00) 24 (0x18)  CRC: 0x97657C3F
	352585824,	 // (0x15040860) // 21 (0x15) 4 (0x04) 8 (0x08) 96 (0x60)  CRC: 0x7F9E11EF
	-744882160,	 // (0xd39a0010) // 211 (0xd3) 154 (0x9a) 0 (0x00) 16 (0x10)  CRC: 0xBE4986F2
	-1308603371,	 // (0xb2004c15) // 178 (0xb2) 0 (0x00) 76 (0x4c) 21 (0x15)  CRC: 0x80F4585A
	67657940,	 // (0x40860d4) // 4 (0x04) 8 (0x08) 96 (0x60) 212 (0xd4)  CRC: 0xB942344D
	352629504,	 // (0x1504b300) // 21 (0x15) 4 (0x04) 179 (0xb3) 0 (0x00)  CRC: 0x4DCB292F
	1276779292,	 // (0x4c1a1b1c) // 76 (0x4c) 26 (0x1a) 27 (0x1b) 28 (0x1c)  CRC: 0x9E629FD9
	1328399271,	 // (0x4f2dc3a7) // 79 (0x4f) 45 (0x2d) 195 (0xc3) 167 (0xa7)  CRC: 0xC3F68B86
	670213,	 // (0xa3a05) // 0 (0x00) 10 (0x0a) 58 (0x3a) 5 (0x05)  CRC: 0x07DFC9E8
	767760645,	 // (0x2dc31905) // 45 (0x2d) 195 (0xc3) 25 (0x19) 5 (0x05)  CRC: 0x42418724
	-1078919168,	 // (0xbfb10000) // 191 (0xbf) 177 (0xb1)  CRC: 0xC188D7A7
	-1047996505,	// CRC do Jardel: 0xC188D7A7
	2,	//	synchronized?, exception table length
	393271,	// start: 6	end: 55
	3801088,	// target: 58	type: 0
	3801150,	// start: 58	end: 62
	3801088,	// target: 58	type: 0
//	1655: f_bastore()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1658: f_castore()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1661: f_sastore()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1664: f_pop()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1667: f_pop2()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1670: f_dup()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1673: f_dup_x1()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1676: f_dup_x2()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1679: f_dup2()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1682: f_dup2_x1()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1685: f_dup2_x2()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1688: f_swap()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1691: f_iadd()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1694: f_ladd(IIII)J
	453278749,	 // (0x1b047c1d) // 27 (0x1b) 4 (0x04) 124 (0x7c) 29 (0x1d)  CRC: 0xD50BFDD7
	75259931,	 // (0x47c601b) // 4 (0x04) 124 (0x7c) 96 (0x60) 27 (0x1b)  CRC: 0x432F057B
	494797950,	 // (0x1d7e047e) // 29 (0x1d) 126 (0x7e) 4 (0x04) 126 (0x7e)  CRC: 0x4C027266
	1611669372,	 // (0x60101f7c) // 96 (0x60) 16 (0x10) 31 (0x1f) 124 (0x7c)  CRC: 0xD3995056
	906238492,	 // (0x36041a1c) // 54 (0x36) 4 (0x04) 26 (0x1a) 28 (0x1c)  CRC: 0xC4346D41
	1611990112,	 // (0x60150460) // 96 (0x60) 21 (0x15) 4 (0x04) 96 (0x60)  CRC: 0x717B4605
	454910173,	 // (0x1b1d60dd) // 27 (0x1b) 29 (0x1d) 96 (0x60) 221 (0xdd)  CRC: 0x011D6686
	-1392508928,	 // (0xad000000) // 173 (0xad)  CRC: 0xFEC3B029
	-20729815,	// CRC do Jardel: 0xFEC3B029
	0,	//	synchronized?, exception table length
//	1704: f_fadd(II)I
	438024192,	 // (0x1a1bb800) // 26 (0x1a) 27 (0x1b) 184 (0xb8) 0 (0x00)  CRC: 0x4F65F51C
	179044352,	 // (0xaac0000) // 10 (0x0a) 172 (0xac)  CRC: 0x202EBA9C
	539933340,	// CRC do Jardel: 0x202EBA9C
	0,	//	synchronized?, exception table length
//	1708: f_dadd()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1711: f_isub()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1714: f_lsub(JJ)J
	505418752,	 // (0x1e201400) // 30 (0x1e) 32 (0x20) 20 (0x14) 0 (0x00)  CRC: 0x4AD43730
	193159434,	 // (0xb83610a) // 11 (0x0b) 131 (0x83) 97 (0x61) 10 (0x0a)  CRC: 0x1543672B
	1638727680,	 // (0x61ad0000) // 97 (0x61) 173 (0xad)  CRC: 0xD1B2E070
	-776806288,	// CRC do Jardel: 0xD1B2E070
	0,	//	synchronized?, exception table length
//	1719: f_fsub(II)I
	438024192,	 // (0x1a1bb800) // 26 (0x1a) 27 (0x1b) 184 (0xb8) 0 (0x00)  CRC: 0x4F65F51C
	229376000,	 // (0xdac0000) // 13 (0x0d) 172 (0xac)  CRC: 0x3E69EA99
	1047128729,	// CRC do Jardel: 0x3E69EA99
	0,	//	synchronized?, exception table length
//	1723: f_dsub()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1726: f_imul()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1729: f_lmul(JJ)J
	70648862,	 // (0x436041e) // 4 (0x04) 54 (0x36) 4 (0x04) 30 (0x1e)  CRC: 0x0F530726
	160734208,	 // (0x9949c00) // 9 (0x09) 148 (0x94) 156 (0x9c) 0 (0x00)  CRC: 0x34813089
	236852224,	 // (0xe1e1400) // 14 (0x0e) 30 (0x1e) 20 (0x14) 0 (0x00)  CRC: 0xAE18C805
	193137249,	 // (0xb830a61) // 11 (0x0b) 131 (0x83) 10 (0x0a) 97 (0x61)  CRC: 0x09CD8A90
	1057175044,	 // (0x3f033604) // 63 (0x3f) 3 (0x03) 54 (0x36) 4 (0x04)  CRC: 0xFA81547C
	537498780,	 // (0x2009949c) // 32 (0x20) 9 (0x09) 148 (0x94) 156 (0x9c)  CRC: 0xE1DC0088
	1515540,	 // (0x172014) // 0 (0x00) 23 (0x17) 32 (0x20) 20 (0x14)  CRC: 0x174F1463
	754442,	 // (0xb830a) // 0 (0x00) 11 (0x0b) 131 (0x83) 10 (0x0a)  CRC: 0x318C910A
	1631655172,	 // (0x61411504) // 97 (0x61) 65 (0x41) 21 (0x15) 4 (0x04)  CRC: 0x17D1DC9E
	-1711274236,	 // (0x9a000704) // 154 (0x9a) 0 (0x00) 7 (0x07) 4 (0x04)  CRC: 0x1BB4E50F
	-1493171197,	 // (0xa7000403) // 167 (0xa7) 0 (0x00) 4 (0x04) 3 (0x03)  CRC: 0x67447788
	906239543,	 // (0x36041e37) // 54 (0x36) 4 (0x04) 30 (0x1e) 55 (0x37)  CRC: 0xC23DDAAE
	84489991,	 // (0x5093707) // 5 (0x05) 9 (0x09) 55 (0x37) 7 (0x07)  CRC: 0xA10DABB7
	53872917,	 // (0x3360915) // 3 (0x03) 54 (0x36) 9 (0x09) 21 (0x15)  CRC: 0xE11EB358
	152060066,	 // (0x91040a2) // 9 (0x09) 16 (0x10) 64 (0x40) 162 (0xa2)  CRC: 0x7C41437C
	6823991,	 // (0x682037) // 0 (0x00) 104 (0x68) 32 (0x20) 55 (0x37)  CRC: 0x09D00BB2
	169215368,	 // (0xa160588) // 10 (0x0a) 22 (0x16) 5 (0x05) 136 (0x88)  CRC: 0x6DD44BF3
	285278078,	 // (0x1100ff7e) // 17 (0x11) 0 (0x00) 255 (0xff) 126 (0x7e)  CRC: 0xD514F346
	906756918,	 // (0x360c0336) // 54 (0x36) 12 (0x0c) 3 (0x03) 54 (0x36)  CRC: 0x4BE1EF1C
	219483408,	 // (0xd150d10) // 13 (0x0d) 21 (0x15) 13 (0x0d) 16 (0x10)  CRC: 0x8607B16D
	1084358721,	 // (0x40a20041) // 64 (0x40) 162 (0xa2) 0 (0x00) 65 (0x41)  CRC: 0xA528E045
	369788945,	 // (0x160a8811) // 22 (0x16) 10 (0x0a) 136 (0x88) 17 (0x11)  CRC: 0xACAA1B5B
	16743990,	 // (0xff7e36) // 0 (0x00) 255 (0xff) 126 (0x7e) 54 (0x36)  CRC: 0x61067B7C
	235484943,	 // (0xe09370f) // 14 (0x0e) 9 (0x09) 55 (0x37) 15 (0x0f)  CRC: 0x1DC8A79A
	352916749,	 // (0x1509150d) // 21 (0x15) 9 (0x09) 21 (0x15) 13 (0x0d)  CRC: 0xE46EB229
	1611677858,	 // (0x601040a2) // 96 (0x60) 16 (0x10) 64 (0x40) 162 (0xa2)  CRC: 0x346D1B8A
	1245973,	 // (0x130315) // 0 (0x00) 19 (0x13) 3 (0x03) 21 (0x15)  CRC: 0xBD629726
	202706536,	 // (0xc150e68) // 12 (0x0c) 21 (0x15) 14 (0x0e) 104 (0x68)  CRC: 0xF13717FC
	352916749,	 // (0x1509150d) // 21 (0x15) 9 (0x09) 21 (0x15) 13 (0x0d)  CRC: 0x4F1C6A6A
	1622671374,	 // (0x60b8000e) // 96 (0x60) 184 (0xb8) 0 (0x00) 14 (0x0e)  CRC: 0x45B073A8
	923735559,	 // (0x370f1607) // 55 (0x37) 15 (0x0f) 22 (0x16) 7 (0x07)  CRC: 0x1D13A55F
	370106679,	 // (0x160f6137) // 22 (0x16) 15 (0x0f) 97 (0x61) 55 (0x37)  CRC: 0x62C665E7
	118884880,	 // (0x7160a10) // 7 (0x07) 22 (0x16) 10 (0x0a) 16 (0x10)  CRC: 0x25D8DF69
	142423818,	 // (0x87d370a) // 8 (0x08) 125 (0x7d) 55 (0x37) 10 (0x0a)  CRC: 0x0F9E5A0C
	353177608,	 // (0x150d1008) // 21 (0x15) 13 (0x0d) 16 (0x10) 8 (0x08)  CRC: 0xF2C2909B
	1614155175,	 // (0x60360da7) // 96 (0x60) 54 (0x36) 13 (0x0d) 167 (0xa7)  CRC: 0xF2264DD9
	-4319739,	 // (0xffbe1605) // 255 (0xff) 190 (0xbe) 22 (0x16) 5 (0x05)  CRC: 0x5363DD81
	268991799,	 // (0x10087d37) // 16 (0x10) 8 (0x08) 125 (0x7d) 55 (0x37)  CRC: 0x35E93460
	85264656,	 // (0x5150910) // 5 (0x05) 21 (0x15) 9 (0x09) 16 (0x10)  CRC: 0xA2C338E5
	140523017,	 // (0x8603609) // 8 (0x08) 96 (0x60) 54 (0x36) 9 (0x09)  CRC: 0x40F16164
	-1476421867,	 // (0xa7ff9715) // 167 (0xa7) 255 (0xff) 151 (0x97) 21 (0x15)  CRC: 0x62F83849
	77201421,	 // (0x49a000d) // 4 (0x04) 154 (0x9a) 0 (0x00) 13 (0x0d)  CRC: 0x6B236838
	369562624,	 // (0x16071400) // 22 (0x16) 7 (0x07) 20 (0x14) 0 (0x00)  CRC: 0xF93C926D
	193137249,	 // (0xb830a61) // 11 (0x0b) 131 (0x83) 10 (0x0a) 97 (0x61)  CRC: 0xFE3FEADC
	923211271,	 // (0x37071607) // 55 (0x37) 7 (0x07) 22 (0x16) 7 (0x07)  CRC: 0x6B795035
	-1392508928,	 // (0xad000000) // 173 (0xad)  CRC: 0xAFCC6C56
	-1345557418,	// CRC do Jardel: 0xAFCC6C56
	0,	//	synchronized?, exception table length
//	1777: f_fmul(II)I
	438024192,	 // (0x1a1bb800) // 26 (0x1a) 27 (0x1b) 184 (0xb8) 0 (0x00)  CRC: 0x4F65F51C
	262930432,	 // (0xfac0000) // 15 (0x0f) 172 (0xac)  CRC: 0x37EBD1F7
	938201591,	// CRC do Jardel: 0x37EBD1F7
	0,	//	synchronized?, exception table length
//	1781: f_dmul()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1784: f_idiv(II)I
	463077386,	 // (0x1b9a000a) // 27 (0x1b) 154 (0x9a) 0 (0x00) 10 (0x0a)  CRC: 0x9ACD3E14
	268963972,	 // (0x10081084) // 16 (0x10) 8 (0x08) 16 (0x10) 132 (0x84)  CRC: 0x87B965A9
	-737956837,	 // (0xd403ac1b) // 212 (0xd4) 3 (0x03) 172 (0xac) 27 (0x1b)  CRC: 0x9A976CA2
	303079424,	 // (0x1210a000) // 18 (0x12) 16 (0x10) 160 (0xa0) 0 (0x00)  CRC: 0x34709194
	219812368,	 // (0xd1a1210) // 13 (0x0d) 26 (0x1a) 18 (0x12) 16 (0x10)  CRC: 0xA568ED52
	-1610611452,	 // (0xa0000504) // 160 (0xa0) 0 (0x00) 5 (0x05) 4 (0x04)  CRC: 0xAB05CD6A
	-1409045501,	 // (0xac03ac03) // 172 (0xac) 3 (0x03) 172 (0xac) 3 (0x03)  CRC: 0x86E36D32
	1025154048,	 // (0x3d1a9c00) // 61 (0x3d) 26 (0x1a) 156 (0x9c) 0 (0x00)  CRC: 0x43470182
	134495514,	 // (0x8043d1a) // 8 (0x08) 4 (0x04) 61 (0x3d) 26 (0x1a)  CRC: 0x8FFB2D60
	1950030748,	 // (0x743b1b9c) // 116 (0x74) 59 (0x3b) 27 (0x1b) 156 (0x9c)  CRC: 0x9C99E474
	1055898,	 // (0x101c9a) // 0 (0x00) 16 (0x10) 28 (0x1c) 154 (0x9a)  CRC: 0x6FAF6AB4
	459943,	 // (0x704a7) // 0 (0x00) 7 (0x07) 4 (0x04) 167 (0xa7)  CRC: 0x875A757C
	262973,	 // (0x4033d) // 0 (0x00) 4 (0x04) 3 (0x03) 61 (0x3d)  CRC: 0xEC4241B5
	460602371,	 // (0x1b743c03) // 27 (0x1b) 116 (0x74) 60 (0x3c) 3 (0x03)  CRC: 0x48B8C0E6
	1040397828,	 // (0x3e033604) // 62 (0x3e) 3 (0x03) 54 (0x36) 4 (0x04)  CRC: 0x34FEC5A6
	53871893,	 // (0x3360515) // 3 (0x03) 54 (0x36) 5 (0x05) 21 (0x15)  CRC: 0xE1F30C70
	84943010,	 // (0x51020a2) // 5 (0x05) 16 (0x10) 32 (0x20) 162 (0xa2)  CRC: 0x1CB6F2E6
	3415300,	 // (0x341d04) // 0 (0x00) 52 (0x34) 29 (0x1d) 4 (0x04)  CRC: 0x2C2297C1
	2017334532,	 // (0x783e1504) // 120 (0x78) 62 (0x3e) 21 (0x15) 4 (0x04)  CRC: 0x551ED0BF
	74987012,	 // (0x4783604) // 4 (0x04) 120 (0x78) 54 (0x36) 4 (0x04)  CRC: 0x71A8386A
	446431241,	 // (0x1a9c0009) // 26 (0x1a) 156 (0x9c) 0 (0x00) 9 (0x09)  CRC: 0xEB3D06A5
	352584832,	 // (0x15040480) // 21 (0x15) 4 (0x04) 4 (0x04) 128 (0x80)  CRC: 0x96297F9E
	906238468,	 // (0x36041a04) // 54 (0x36) 4 (0x04) 26 (0x1a) 4 (0x04)  CRC: 0x972EF330
	2017137924,	 // (0x783b1504) // 120 (0x78) 59 (0x3b) 21 (0x15) 4 (0x04)  CRC: 0x40BA01B8
	463536141,	 // (0x1ba1000d) // 27 (0x1b) 161 (0xa1) 0 (0x00) 13 (0x0d)  CRC: 0x119F66A2
	352590692,	 // (0x15041b64) // 21 (0x15) 4 (0x04) 27 (0x1b) 100 (0x64)  CRC: 0xE52CC537
	906239236,	 // (0x36041d04) // 54 (0x36) 4 (0x04) 29 (0x1d) 4 (0x04)  CRC: 0x7324EDA6
	-2143415035,	 // (0x803e1505) // 128 (0x80) 62 (0x3e) 21 (0x15) 5 (0x05)  CRC: 0x0893E08A
	73414149,	 // (0x4603605) // 4 (0x04) 96 (0x60) 54 (0x36) 5 (0x05)  CRC: 0x5F851B3F
	-1476408548,	 // (0xa7ffcb1c) // 167 (0xa7) 255 (0xff) 203 (0xcb) 28 (0x1c)  CRC: 0x6801F9AC
	-1728051683,	 // (0x9900061d) // 153 (0x99) 0 (0x00) 6 (0x06) 29 (0x1d)  CRC: 0x01E3F7B4
	1950227884,	 // (0x743e1dac) // 116 (0x74) 62 (0x3e) 29 (0x1d) 172 (0xac)  CRC: 0x6598266D
	1704470125,	// CRC do Jardel: 0x6598266D
	0,	//	synchronized?, exception table length
//	1818: f_ldiv(JJ)J
	537498778,	 // (0x2009949a) // 32 (0x20) 9 (0x09) 148 (0x94) 154 (0x9a)  CRC: 0x22CEADEF
	659464,	 // (0xa1008) // 0 (0x00) 10 (0x0a) 16 (0x10) 8 (0x08)  CRC: 0x4AFED838
	277140489,	 // (0x1084d409) // 16 (0x10) 132 (0x84) 212 (0xd4) 9 (0x09)  CRC: 0xA7554111
	-1390406656,	 // (0xad201400) // 173 (0xad) 32 (0x20) 20 (0x14) 0 (0x00)  CRC: 0x1CB0856C
	294951424,	 // (0x11949a00) // 17 (0x11) 148 (0x94) 154 (0x9a) 0 (0x00)  CRC: 0x575B9581
	253629440,	 // (0xf1e1400) // 15 (0x0f) 30 (0x1e) 20 (0x14) 0 (0x00)  CRC: 0x68CDC50D
	294951424,	 // (0x11949a00) // 17 (0x11) 148 (0x94) 154 (0x9a) 0 (0x00)  CRC: 0x56A9961C
	84585737,	 // (0x50aad09) // 5 (0x05) 10 (0x0a) 173 (0xad) 9 (0x09)  CRC: 0xF7646384
	-1392298492,	 // (0xad033604) // 173 (0xad) 3 (0x03) 54 (0x36) 4 (0x04)  CRC: 0xB960D84F
	503944348,	 // (0x1e09949c) // 30 (0x1e) 9 (0x09) 148 (0x94) 156 (0x9c)  CRC: 0x8C254024
	590902,	 // (0x90436) // 0 (0x00) 9 (0x09) 4 (0x04) 54 (0x36)  CRC: 0x5616F405
	69104959,	 // (0x41e753f) // 4 (0x04) 30 (0x1e) 117 (0x75) 63 (0x3f)  CRC: 0x9C38D2A8
	537498780,	 // (0x2009949c) // 32 (0x20) 9 (0x09) 148 (0x94) 156 (0x9c)  CRC: 0xBAD83B54
	1185028,	 // (0x121504) // 0 (0x00) 18 (0x12) 21 (0x15) 4 (0x04)  CRC: 0x037DDB09
	-1711274236,	 // (0x9a000704) // 154 (0x9a) 0 (0x00) 7 (0x07) 4 (0x04)  CRC: 0x4224940C
	-1493171197,	 // (0xa7000403) // 167 (0xa7) 0 (0x00) 4 (0x04) 3 (0x03)  CRC: 0x3BF6654F
	906240117,	 // (0x36042075) // 54 (0x36) 4 (0x04) 32 (0x20) 117 (0x75)  CRC: 0x1AB35BFF
	1091122949,	 // (0x41093705) // 65 (0x41) 9 (0x09) 55 (0x37) 5 (0x05)  CRC: 0x891DFE7A
	154601219,	 // (0x9370703) // 9 (0x09) 55 (0x37) 7 (0x07) 3 (0x03)  CRC: 0x858475EC
	906564873,	 // (0x36091509) // 54 (0x36) 9 (0x09) 21 (0x15) 9 (0x09)  CRC: 0x5334F0D8
	272671232,	 // (0x1040a200) // 16 (0x10) 64 (0x40) 162 (0xa2) 0 (0x00)  CRC: 0x7A8367F6
	1058407684,	 // (0x3f160504) // 63 (0x3f) 22 (0x16) 5 (0x05) 4 (0x04)  CRC: 0xC180CF70
	2033648918,	 // (0x79370516) // 121 (0x79) 55 (0x37) 5 (0x05) 22 (0x16)  CRC: 0x2D368927
	117733687,	 // (0x7047937) // 7 (0x07) 4 (0x04) 121 (0x79) 55 (0x37)  CRC: 0xC8DB5242
	119409044,	 // (0x71e0994) // 7 (0x07) 30 (0x1e) 9 (0x09) 148 (0x94)  CRC: 0x8A378F6C
	-1677719274,	 // (0x9c000916) // 156 (0x9c) 0 (0x00) 9 (0x09) 22 (0x16)  CRC: 0x4ED70BB2
	118128951,	 // (0x70a8137) // 7 (0x07) 10 (0x0a) 129 (0x81) 55 (0x37)  CRC: 0xFEF9DCD1
	119407737,	 // (0x71e0479) // 7 (0x07) 30 (0x1e) 4 (0x04) 121 (0x79)  CRC: 0x66DCAF85
	1058408202,	 // (0x3f16070a) // 63 (0x3f) 22 (0x16) 7 (0x07) 10 (0x0a)  CRC: 0x4D2595A1
	1696598629,	 // (0x65200a65) // 101 (0x65) 32 (0x20) 10 (0x0a) 101 (0x65)  CRC: 0x48151E2B
	-1801781233,	 // (0x949b000f) // 148 (0x94) 155 (0x9b) 0 (0x00) 15 (0x0f)  CRC: 0x4661B0FB
	369565797,	 // (0x16072065) // 22 (0x16) 7 (0x07) 32 (0x20) 101 (0x65)  CRC: 0x8CB8D2A5
	923211269,	 // (0x37071605) // 55 (0x37) 7 (0x07) 22 (0x16) 5 (0x05)  CRC: 0x360DACA8
	176240389,	 // (0xa813705) // 10 (0x0a) 129 (0x81) 55 (0x37) 5 (0x05)  CRC: 0x931A44FB
	352912480,	 // (0x15090460) // 21 (0x15) 9 (0x09) 4 (0x04) 96 (0x60)  CRC: 0xB8F77A36
	906602495,	 // (0x3609a7ff) // 54 (0x36) 9 (0x09) 167 (0xa7) 255 (0xff)  CRC: 0xA56F1924
	-1072364391,	 // (0xc0150499) // 192 (0xc0) 21 (0x15) 4 (0x04) 153 (0x99)  CRC: 0xC0B1AD92
	529925,	 // (0x81605) // 0 (0x00) 8 (0x08) 22 (0x16) 5 (0x05)  CRC: 0x1CA8E134
	1966540054,	 // (0x75370516) // 117 (0x75) 55 (0x37) 5 (0x05) 22 (0x16)  CRC: 0x9CC6E4B1
	95223808,	 // (0x5ad0000) // 5 (0x05) 173 (0xad)  CRC: 0xFD6E5883
	-43100029,	// CRC do Jardel: 0xFD6E5883
	0,	//	synchronized?, exception table length
//	1860: f_fdiv(II)I
	438024192,	 // (0x1a1bb800) // 26 (0x1a) 27 (0x1b) 184 (0xb8) 0 (0x00)  CRC: 0x4F65F51C
	330039296,	 // (0x13ac0000) // 19 (0x13) 172 (0xac)  CRC: 0x4EF691E3
	1324782051,	// CRC do Jardel: 0x4EF691E3
	0,	//	synchronized?, exception table length
//	1864: f_ddiv()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1867: f_irem(II)I
	463077386,	 // (0x1b9a000a) // 27 (0x1b) 154 (0x9a) 0 (0x00) 10 (0x0a)  CRC: 0x9ACD3E14
	268963972,	 // (0x10081084) // 16 (0x10) 8 (0x08) 16 (0x10) 132 (0x84)  CRC: 0x87B965A9
	-737956837,	 // (0xd403ac1b) // 212 (0xd4) 3 (0x03) 172 (0xac) 27 (0x1b)  CRC: 0x9A976CA2
	303079424,	 // (0x1210a000) // 18 (0x12) 16 (0x10) 160 (0xa0) 0 (0x00)  CRC: 0x34709194
	219812368,	 // (0xd1a1210) // 13 (0x0d) 26 (0x1a) 18 (0x12) 16 (0x10)  CRC: 0xA568ED52
	-1610611453,	 // (0xa0000503) // 160 (0xa0) 0 (0x00) 5 (0x05) 3 (0x03)  CRC: 0xB7873301
	-1407538173,	 // (0xac1aac03) // 172 (0xac) 26 (0x1a) 172 (0xac) 3 (0x03)  CRC: 0x48477F6E
	1025154048,	 // (0x3d1a9c00) // 61 (0x3d) 26 (0x1a) 156 (0x9c) 0 (0x00)  CRC: 0x20AE041F
	134495514,	 // (0x8043d1a) // 8 (0x08) 4 (0x04) 61 (0x3d) 26 (0x1a)  CRC: 0xF9EE2E8D
	1950030748,	 // (0x743b1b9c) // 116 (0x74) 59 (0x3b) 27 (0x1b) 156 (0x9c)  CRC: 0x0D27523D
	400244,	 // (0x61b74) // 0 (0x00) 6 (0x06) 27 (0x1b) 116 (0x74)  CRC: 0x379D4ABB
	1006845443,	 // (0x3c033e03) // 60 (0x3c) 3 (0x03) 62 (0x3e) 3 (0x03)  CRC: 0xDA7E5F97
	906237188,	 // (0x36041504) // 54 (0x36) 4 (0x04) 21 (0x15) 4 (0x04)  CRC: 0xA42CFCCB
	270574080,	 // (0x1020a200) // 16 (0x10) 32 (0x20) 162 (0xa2) 0 (0x00)  CRC: 0xF09D36F7
	622658680,	 // (0x251d0478) // 37 (0x25) 29 (0x1d) 4 (0x04) 120 (0x78)  CRC: 0x61D4BC78
	1041931264,	 // (0x3e1a9c00) // 62 (0x3e) 26 (0x1a) 156 (0x9c) 0 (0x00)  CRC: 0xF6806536
	119342208,	 // (0x71d0480) // 7 (0x07) 29 (0x1d) 4 (0x04) 128 (0x80)  CRC: 0xCC3A9C4B
	1041892472,	 // (0x3e1a0478) // 62 (0x3e) 26 (0x1a) 4 (0x04) 120 (0x78)  CRC: 0x7B4CDC42
	991763361,	 // (0x3b1d1ba1) // 59 (0x3b) 29 (0x1d) 27 (0x1b) 161 (0xa1)  CRC: 0x781506FD
	466203,	 // (0x71d1b) // 0 (0x00) 7 (0x07) 29 (0x1d) 27 (0x1b)  CRC: 0x3F24BAF4
	1681790212,	 // (0x643e1504) // 100 (0x64) 62 (0x3e) 21 (0x15) 4 (0x04)  CRC: 0x4192778E
	73414148,	 // (0x4603604) // 4 (0x04) 96 (0x60) 54 (0x36) 4 (0x04)  CRC: 0xC0B2F4CA
	-1476404708,	 // (0xa7ffda1c) // 167 (0xa7) 255 (0xff) 218 (0xda) 28 (0x1c)  CRC: 0x23CEDD39
	-1728051683,	 // (0x9900061d) // 153 (0x99) 0 (0x00) 6 (0x06) 29 (0x1d)  CRC: 0x8F814B12
	1950227884,	 // (0x743e1dac) // 116 (0x74) 62 (0x3e) 29 (0x1d) 172 (0xac)  CRC: 0x224F0362
	575603554,	// CRC do Jardel: 0x224F0362
	0,	//	synchronized?, exception table length
//	1894: f_lrem(JJ)J
	537498778,	 // (0x2009949a) // 32 (0x20) 9 (0x09) 148 (0x94) 154 (0x9a)  CRC: 0x22CEADEF
	659464,	 // (0xa1008) // 0 (0x00) 10 (0x0a) 16 (0x10) 8 (0x08)  CRC: 0x4AFED838
	277140489,	 // (0x1084d409) // 16 (0x10) 132 (0x84) 212 (0xd4) 9 (0x09)  CRC: 0xA7554111
	-1390406656,	 // (0xad201400) // 173 (0xad) 32 (0x20) 20 (0x14) 0 (0x00)  CRC: 0x1CB0856C
	294951424,	 // (0x11949a00) // 17 (0x11) 148 (0x94) 154 (0x9a) 0 (0x00)  CRC: 0x575B9581
	253629440,	 // (0xf1e1400) // 15 (0x0f) 30 (0x1e) 20 (0x14) 0 (0x00)  CRC: 0x68CDC50D
	294951424,	 // (0x11949a00) // 17 (0x11) 148 (0x94) 154 (0x9a) 0 (0x00)  CRC: 0x56A9961C
	84520222,	 // (0x509ad1e) // 5 (0x05) 9 (0x09) 173 (0xad) 30 (0x1e)  CRC: 0x6E19EF9F
	-1392298492,	 // (0xad033604) // 173 (0xad) 3 (0x03) 54 (0x36) 4 (0x04)  CRC: 0xBF6463CD
	503944348,	 // (0x1e09949c) // 30 (0x1e) 9 (0x09) 148 (0x94) 156 (0x9c)  CRC: 0x61FB2448
	590902,	 // (0x90436) // 0 (0x00) 9 (0x09) 4 (0x04) 54 (0x36)  CRC: 0xA2F1522E
	69104959,	 // (0x41e753f) // 4 (0x04) 30 (0x1e) 117 (0x75) 63 (0x3f)  CRC: 0xDA37C11B
	537498780,	 // (0x2009949c) // 32 (0x20) 9 (0x09) 148 (0x94) 156 (0x9c)  CRC: 0x722D8317
	401525,	 // (0x62075) // 0 (0x00) 6 (0x06) 32 (0x20) 117 (0x75)  CRC: 0x531A3750
	1091122949,	 // (0x41093705) // 65 (0x41) 9 (0x09) 55 (0x37) 5 (0x05)  CRC: 0xC23EA46F
	53872405,	 // (0x3360715) // 3 (0x03) 54 (0x36) 7 (0x07) 21 (0x15)  CRC: 0x1E676ED8
	118505634,	 // (0x71040a2) // 7 (0x07) 16 (0x10) 64 (0x40) 162 (0xa2)  CRC: 0x37E49EEC
	3085829,	 // (0x2f1605) // 0 (0x00) 47 (0x2f) 22 (0x16) 5 (0x05)  CRC: 0x8E762939
	75052805,	 // (0x4793705) // 4 (0x04) 121 (0x79) 55 (0x37) 5 (0x05)  CRC: 0xFC608622
	503944348,	 // (0x1e09949c) // 30 (0x1e) 9 (0x09) 148 (0x94) 156 (0x9c)  CRC: 0x5E4F4D2C
	595461,	 // (0x91605) // 0 (0x00) 9 (0x09) 22 (0x16) 5 (0x05)  CRC: 0x726BD6FC
	176240389,	 // (0xa813705) // 10 (0x0a) 129 (0x81) 55 (0x37) 5 (0x05)  CRC: 0x478C0366
	503609663,	 // (0x1e04793f) // 30 (0x1e) 4 (0x04) 121 (0x79) 63 (0x3f)  CRC: 0x7E2FC963
	369434772,	 // (0x16052094) // 22 (0x16) 5 (0x05) 32 (0x20) 148 (0x94)  CRC: 0x28F5D864
	-1694496490,	 // (0x9b000916) // 155 (0x9b) 0 (0x00) 9 (0x09) 22 (0x16)  CRC: 0x79995751
	86009143,	 // (0x5206537) // 5 (0x05) 32 (0x20) 101 (0x65) 55 (0x37)  CRC: 0x70BBE2AF
	85264132,	 // (0x5150704) // 5 (0x05) 21 (0x15) 7 (0x07) 4 (0x04)  CRC: 0x69279D75
	1614153639,	 // (0x603607a7) // 96 (0x60) 54 (0x36) 7 (0x07) 167 (0xa7)  CRC: 0x74BD835A
	-3140348,	 // (0xffd01504) // 255 (0xff) 208 (0xd0) 21 (0x15) 4 (0x04)  CRC: 0xD07ED9B6
	-1728051178,	 // (0x99000816) // 153 (0x99) 0 (0x00) 8 (0x08) 22 (0x16)  CRC: 0xC8DBFDC2
	91567877,	 // (0x5753705) // 5 (0x05) 117 (0x75) 55 (0x37) 5 (0x05)  CRC: 0xCD419C22
	369470720,	 // (0x1605ad00) // 22 (0x16) 5 (0x05) 173 (0xad)  CRC: 0x8BF21D3D
	-1947067075,	// CRC do Jardel: 0x8BF21D3D
	0,	//	synchronized?, exception table length
//	1928: f_frem(II)I
	438024192,	 // (0x1a1bb800) // 26 (0x1a) 27 (0x1b) 184 (0xb8) 0 (0x00)  CRC: 0x4F65F51C
	346816512,	 // (0x14ac0000) // 20 (0x14) 172 (0xac)  CRC: 0x50B1C1E6
	1353826790,	// CRC do Jardel: 0x50B1C1E6
	0,	//	synchronized?, exception table length
//	1932: f_drem()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1935: f_ineg()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1938: f_lneg(J)J
	504627211,	 // (0x1e14000b) // 30 (0x1e) 20 (0x14) 0 (0x00) 11 (0x0b)  CRC: 0xBC77EBA4
	-2096471635,	 // (0x830a61ad) // 131 (0x83) 10 (0x0a) 97 (0x61) 173 (0xad)  CRC: 0x853431BD
	-2060176963,	// CRC do Jardel: 0x853431BD
	0,	//	synchronized?, exception table length
//	1942: f_fneg(I)I
	437391490,	 // (0x1a121082) // 26 (0x1a) 18 (0x12) 16 (0x10) 130 (0x82)  CRC: 0xD44ED50E
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x3C22C0D6
	1008910550,	// CRC do Jardel: 0x3C22C0D6
	0,	//	synchronized?, exception table length
//	1946: f_dneg()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1949: f_ishl()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1952: f_lshl(III)J
	470826878,	 // (0x1c103f7e) // 28 (0x1c) 16 (0x10) 63 (0x3f) 126 (0x7e)  CRC: 0xB1F6A7EB
	1025284608,	 // (0x3d1c9a00) // 61 (0x3d) 28 (0x1c) 154 (0x9a) 0 (0x00)  CRC: 0x622FC48B
	119151581,	 // (0x71a1bdd) // 7 (0x07) 26 (0x1a) 27 (0x1b) 221 (0xdd)  CRC: 0x9F8B721B
	-1390669793,	 // (0xad1c101f) // 173 (0xad) 28 (0x1c) 16 (0x10) 31 (0x1f)  CRC: 0xF255410E
	-1543500005,	 // (0xa4000f1b) // 164 (0xa4) 0 (0x00) 15 (0x0f) 27 (0x1b)  CRC: 0x93B410CA
	470818916,	 // (0x1c102064) // 28 (0x1c) 16 (0x10) 32 (0x20) 100 (0x64)  CRC: 0x8B2907C6
	2017133372,	 // (0x783b033c) // 120 (0x78) 59 (0x3b) 3 (0x03) 60 (0x3c)  CRC: 0xEFD6E748
	-1493167078,	 // (0xa700141a) // 167 (0xa7) 0 (0x00) 20 (0x14) 26 (0x1a)  CRC: 0x7A1C4CAA
	477641498,	 // (0x1c783b1a) // 28 (0x1c) 120 (0x78) 59 (0x3b) 26 (0x1a)  CRC: 0xD78A4D81
	454041628,	 // (0x1b10201c) // 27 (0x1b) 16 (0x10) 32 (0x20) 28 (0x1c)  CRC: 0x72AAD04A
	1685872699,	 // (0x647c603b) // 100 (0x64) 124 (0x7c) 96 (0x60) 59 (0x3b)  CRC: 0xAA735731
	454850620,	 // (0x1b1c783c) // 27 (0x1b) 28 (0x1c) 120 (0x78) 60 (0x3c)  CRC: 0x93FDF528
	438033837,	 // (0x1a1bddad) // 26 (0x1a) 27 (0x1b) 221 (0xdd) 173 (0xad)  CRC: 0x4EAA2F9C
	1319776156,	// CRC do Jardel: 0x4EAA2F9C
	0,	//	synchronized?, exception table length
//	1967: f_ishr()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1970: f_lshr(III)J
	470826878,	 // (0x1c103f7e) // 28 (0x1c) 16 (0x10) 63 (0x3f) 126 (0x7e)  CRC: 0xB1F6A7EB
	1025284608,	 // (0x3d1c9a00) // 61 (0x3d) 28 (0x1c) 154 (0x9a) 0 (0x00)  CRC: 0x622FC48B
	119151581,	 // (0x71a1bdd) // 7 (0x07) 26 (0x1a) 27 (0x1b) 221 (0xdd)  CRC: 0x9F8B721B
	-1390669793,	 // (0xad1c101f) // 173 (0xad) 28 (0x1c) 16 (0x10) 31 (0x1f)  CRC: 0xF255410E
	-1543497702,	 // (0xa400181a) // 164 (0xa4) 0 (0x00) 24 (0x18) 26 (0x1a)  CRC: 0x57580598
	470818916,	 // (0x1c102064) // 28 (0x1c) 16 (0x10) 32 (0x20) 100 (0x64)  CRC: 0xDE9F2900
	2050759324,	 // (0x7a3c1a9c) // 122 (0x7a) 60 (0x3c) 26 (0x1a) 156 (0x9c)  CRC: 0xCFB755C0
	524859,	 // (0x8023b) // 0 (0x00) 8 (0x08) 2 (0x02) 59 (0x3b)  CRC: 0xCB664B75
	-1493165821,	 // (0xa7001903) // 167 (0xa7) 0 (0x00) 25 (0x19) 3 (0x03)  CRC: 0x74996FF5
	1000800276,	 // (0x3ba70014) // 59 (0x3b) 167 (0xa7) 0 (0x00) 20 (0x14)  CRC: 0xEDBD52FE
	454851644,	 // (0x1b1c7c3c) // 27 (0x1b) 28 (0x1c) 124 (0x7c) 60 (0x3c)  CRC: 0x3B9D0931
	454692896,	 // (0x1b1a1020) // 27 (0x1b) 26 (0x1a) 16 (0x10) 32 (0x20)  CRC: 0x5FB39A12
	476346464,	 // (0x1c647860) // 28 (0x1c) 100 (0x64) 120 (0x78) 96 (0x60)  CRC: 0xCE6CBBDD
	1008344186,	 // (0x3c1a1c7a) // 60 (0x3c) 26 (0x1a) 28 (0x1c) 122 (0x7a)  CRC: 0x260477B6
	991566813,	 // (0x3b1a1bdd) // 59 (0x3b) 26 (0x1a) 27 (0x1b) 221 (0xdd)  CRC: 0xC18098D3
	-1392508928,	 // (0xad000000) // 173 (0xad)  CRC: 0x8361C94B
	-2090743477,	// CRC do Jardel: 0x8361C94B
	0,	//	synchronized?, exception table length
//	1988: f_iushr()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	1991: f_lushr(III)J
	470826878,	 // (0x1c103f7e) // 28 (0x1c) 16 (0x10) 63 (0x3f) 126 (0x7e)  CRC: 0xB1F6A7EB
	1025284608,	 // (0x3d1c9a00) // 61 (0x3d) 28 (0x1c) 154 (0x9a) 0 (0x00)  CRC: 0x622FC48B
	119151581,	 // (0x71a1bdd) // 7 (0x07) 26 (0x1a) 27 (0x1b) 221 (0xdd)  CRC: 0x9F8B721B
	-1390669793,	 // (0xad1c101f) // 173 (0xad) 28 (0x1c) 16 (0x10) 31 (0x1f)  CRC: 0xF255410E
	-1543500006,	 // (0xa4000f1a) // 164 (0xa4) 0 (0x00) 15 (0x0f) 26 (0x1a)  CRC: 0x4FD98A7D
	470818916,	 // (0x1c102064) // 28 (0x1c) 16 (0x10) 32 (0x20) 100 (0x64)  CRC: 0xD088DB0C
	2084307771,	 // (0x7c3c033b) // 124 (0x7c) 60 (0x3c) 3 (0x03) 59 (0x3b)  CRC: 0xD069F283
	-1493167077,	 // (0xa700141b) // 167 (0xa7) 0 (0x00) 20 (0x14) 27 (0x1b)  CRC: 0x6E4EC30D
	477903899,	 // (0x1c7c3c1b) // 28 (0x1c) 124 (0x7c) 60 (0x3c) 27 (0x1b)  CRC: 0x785A83A9
	437264412,	 // (0x1a10201c) // 26 (0x1a) 16 (0x10) 32 (0x20) 28 (0x1c)  CRC: 0x4A846938
	1685610556,	 // (0x6478603c) // 100 (0x64) 120 (0x78) 96 (0x60) 60 (0x3c)  CRC: 0x25D8B5CB
	438074427,	 // (0x1a1c7c3b) // 26 (0x1a) 28 (0x1c) 124 (0x7c) 59 (0x3b)  CRC: 0xF1148A67
	438033837,	 // (0x1a1bddad) // 26 (0x1a) 27 (0x1b) 221 (0xdd) 173 (0xad)  CRC: 0xA7C5DA65
	-1480205723,	// CRC do Jardel: 0xA7C5DA65
	0,	//	synchronized?, exception table length
//	2006: f_iand()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2009: f_land(IIII)J
	438074939,	 // (0x1a1c7e3b) // 26 (0x1a) 28 (0x1c) 126 (0x7e) 59 (0x3b)  CRC: 0x62644302
	454917692,	 // (0x1b1d7e3c) // 27 (0x1b) 29 (0x1d) 126 (0x7e) 60 (0x3c)  CRC: 0x5FAD94B2
	438033837,	 // (0x1a1bddad) // 26 (0x1a) 27 (0x1b) 221 (0xdd) 173 (0xad)  CRC: 0x6E8AC995
	1854589333,	// CRC do Jardel: 0x6E8AC995
	0,	//	synchronized?, exception table length
//	2014: f_ior()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2017: f_lor(IIII)J
	438075451,	 // (0x1a1c803b) // 26 (0x1a) 28 (0x1c) 128 (0x80) 59 (0x3b)  CRC: 0xD490F6F8
	454918204,	 // (0x1b1d803c) // 27 (0x1b) 29 (0x1d) 128 (0x80) 60 (0x3c)  CRC: 0xAA5C2510
	438033837,	 // (0x1a1bddad) // 26 (0x1a) 27 (0x1b) 221 (0xdd) 173 (0xad)  CRC: 0x81EA967B
	-2115332485,	// CRC do Jardel: 0x81EA967B
	0,	//	synchronized?, exception table length
//	2022: f_ixor()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2025: f_lxor(IIII)J
	438075963,	 // (0x1a1c823b) // 26 (0x1a) 28 (0x1c) 130 (0x82) 59 (0x3b)  CRC: 0xD721AFF6
	454918716,	 // (0x1b1d823c) // 27 (0x1b) 29 (0x1d) 130 (0x82) 60 (0x3c)  CRC: 0x3743AC3C
	438033837,	 // (0x1a1bddad) // 26 (0x1a) 27 (0x1b) 221 (0xdd) 173 (0xad)  CRC: 0xE8DC5432
	-388213710,	// CRC do Jardel: 0xE8DC5432
	0,	//	synchronized?, exception table length
//	2030: f_iinc()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2033: f_i2l(I)J
	437264250,	 // (0x1a101f7a) // 26 (0x1a) 16 (0x10) 31 (0x1f) 122 (0x7a)  CRC: 0xEC9036BC
	450735360,	 // (0x1addad00) // 26 (0x1a) 221 (0xdd) 173 (0xad)  CRC: 0xC680984A
	-964650934,	// CRC do Jardel: 0xC680984A
	0,	//	synchronized?, exception table length
//	2037: f_i2f(I)I
	448266261,	 // (0x1ab80015) // 26 (0x1a) 184 (0xb8) 0 (0x00) 21 (0x15)  CRC: 0x0C21C048
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0xAAB50C19
	-1430975463,	// CRC do Jardel: 0xAAB50C19
	0,	//	synchronized?, exception table length
//	2041: f_i2d()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2044: f_l2i()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2047: f_l2f()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2050: f_l2d()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2053: f_f2i(I)I
	448266262,	 // (0x1ab80016) // 26 (0x1a) 184 (0xb8) 0 (0x00) 22 (0x16)  CRC: 0x6C567226
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x46576947
	1180133703,	// CRC do Jardel: 0x46576947
	0,	//	synchronized?, exception table length
//	2057: f_f2l()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2060: f_f2d()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2063: f_d2i()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2066: f_d2l()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2069: f_d2f()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2072: f_i2b(I)I
	437321983,	 // (0x1a1100ff) // 26 (0x1a) 17 (0x11) 0 (0x00) 255 (0xff)  CRC: 0x2EB3F712
	2117802513,	 // (0x7e3b1a11) // 126 (0x7e) 59 (0x3b) 26 (0x1a) 17 (0x11)  CRC: 0xB5C49D30
	8421017,	 // (0x807e99) // 0 (0x00) 128 (0x80) 126 (0x7e) 153 (0x99)  CRC: 0x715DE17C
	596497,	 // (0x91a11) // 0 (0x00) 9 (0x09) 26 (0x1a) 17 (0x11)  CRC: 0xF443F7D2
	-16744389,	 // (0xff00803b) // 255 (0xff) 0 (0x00) 128 (0x80) 59 (0x3b)  CRC: 0x67900B48
	447479808,	 // (0x1aac0000) // 26 (0x1a) 172 (0xac)  CRC: 0x3251A392
	844211090,	// CRC do Jardel: 0x3251A392
	0,	//	synchronized?, exception table length
//	2080: f_i2c()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2083: f_i2s(I)I
	437393278,	 // (0x1a12177e) // 26 (0x1a) 18 (0x12) 23 (0x17) 126 (0x7e)  CRC: 0x3E52808E
	991564312,	 // (0x3b1a1218) // 59 (0x3b) 26 (0x1a) 18 (0x12) 24 (0x18)  CRC: 0x4EB17B2E
	2123956232,	 // (0x7e990008) // 126 (0x7e) 153 (0x99) 0 (0x00) 8 (0x08)  CRC: 0xE1E1F4E4
	437393792,	 // (0x1a121980) // 26 (0x1a) 18 (0x12) 25 (0x19) 128 (0x80)  CRC: 0xE63972AC
	991603712,	 // (0x3b1aac00) // 59 (0x3b) 26 (0x1a) 172 (0xac)  CRC: 0x7A6268AD
	2053269677,	// CRC do Jardel: 0x7A6268AD
	0,	//	synchronized?, exception table length
//	2090: f_lcmp(JJ)I
	504373373,	 // (0x1e10207d) // 30 (0x1e) 16 (0x10) 32 (0x20) 125 (0x7d)  CRC: 0xCE47C536
	-2009725920,	 // (0x88360420) // 136 (0x88) 54 (0x36) 4 (0x04) 32 (0x20)  CRC: 0xD038A860
	270564744,	 // (0x10207d88) // 16 (0x10) 32 (0x20) 125 (0x7d) 136 (0x88)  CRC: 0x470C9C8A
	906302724,	 // (0x36051504) // 54 (0x36) 5 (0x05) 21 (0x15) 4 (0x04)  CRC: 0xE14DF5EB
	-1694496235,	 // (0x9b000a15) // 155 (0x9b) 0 (0x00) 10 (0x0a) 21 (0x15)  CRC: 0xE16C0839
	94109701,	 // (0x59c0005) // 5 (0x05) 156 (0x9c) 0 (0x00) 5 (0x05)  CRC: 0x93B7546E
	78386436,	 // (0x4ac1504) // 4 (0x04) 172 (0xac) 21 (0x15) 4 (0x04)  CRC: 0x63DD2E49
	-1677719019,	 // (0x9c000a15) // 156 (0x9c) 0 (0x00) 10 (0x0a) 21 (0x15)  CRC: 0xC79E982E
	94044165,	 // (0x59b0005) // 5 (0x05) 155 (0x9b) 0 (0x00) 5 (0x05)  CRC: 0xF1A6A319
	44834336,	 // (0x2ac1e20) // 2 (0x02) 172 (0xac) 30 (0x1e) 32 (0x20)  CRC: 0x425D484D
	1698635400,	 // (0x653f1e88) // 101 (0x65) 63 (0x3f) 30 (0x1e) 136 (0x88)  CRC: 0xBE172D89
	906370576,	 // (0x36061e10) // 54 (0x36) 6 (0x06) 30 (0x1e) 16 (0x10)  CRC: 0x276655E1
	545097782,	 // (0x207d8836) // 32 (0x20) 125 (0x7d) 136 (0x88) 54 (0x36)  CRC: 0x73A732C4
	68486165,	 // (0x4150415) // 4 (0x04) 21 (0x15) 4 (0x04) 21 (0x15)  CRC: 0x64D94C54
	109091328,	 // (0x6809a00) // 6 (0x06) 128 (0x80) 154 (0x9a) 0 (0x00)  CRC: 0x4EFE08AE
	84126741,	 // (0x503ac15) // 5 (0x05) 3 (0x03) 172 (0xac) 21 (0x15)  CRC: 0xF54DA6C2
	77266949,	 // (0x49b0005) // 4 (0x04) 155 (0x9b) 0 (0x00) 5 (0x05)  CRC: 0x7ED74E40
	78381740,	 // (0x4ac02ac) // 4 (0x04) 172 (0xac) 2 (0x02) 172 (0xac)  CRC: 0xD9AF06CF
	-642840881,	// CRC do Jardel: 0xD9AF06CF
	0,	//	synchronized?, exception table length
//	2110: f_fcmpl(II)I
	438024192,	 // (0x1a1bb800) // 26 (0x1a) 27 (0x1b) 184 (0xb8) 0 (0x00)  CRC: 0x4F65F51C
	447479808,	 // (0x1aac0000) // 26 (0x1a) 172 (0xac)  CRC: 0x6C3F61EC
	1816093164,	// CRC do Jardel: 0x6C3F61EC
	0,	//	synchronized?, exception table length
//	2114: f_fcmpg(II)I
	438024192,	 // (0x1a1bb800) // 26 (0x1a) 27 (0x1b) 184 (0xb8) 0 (0x00)  CRC: 0x4F65F51C
	464257024,	 // (0x1bac0000) // 27 (0x1b) 172 (0xac)  CRC: 0x68FE7C5B
	1761508443,	// CRC do Jardel: 0x68FE7C5B
	0,	//	synchronized?, exception table length
//	2118: f_dcmpl()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2121: f_dcmpg()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2124: f_ifeq()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2127: f_ifne()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2130: f_iflt()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2133: f_ifge()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2136: f_ifgt()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2139: f_ifle()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2142: f_if_icmpeq()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2145: f_if_icmpne()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2148: f_if_icmplt()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2151: f_if_icmpge()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2154: f_if_icmpgt()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2157: f_if_icmple()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2160: f_if_acmpeq()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2163: f_if_acmpne()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2166: f_goto()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2169: f_jsr()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2172: f_ret()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2175: f_tableswitch(I)V
	-683860986,	 // (0xd73d1c06) // 215 (0xd7) 61 (0x3d) 28 (0x1c) 6 (0x06)  CRC: 0xF6996F76
	1691681892,	 // (0x64d50464) // 100 (0x64) 213 (0xd5) 4 (0x04) 100 (0x64)  CRC: 0xC91C81DA
	1042076988,	 // (0x3e1cd53c) // 62 (0x3e) 28 (0x1c) 213 (0xd5) 60 (0x3c)  CRC: 0x06F50A5E
	466817034,	 // (0x1bd3100a) // 27 (0x1b) 211 (0xd3) 16 (0x10) 10 (0x0a)  CRC: 0x8A448E61
	2083914781,	 // (0x7c36041d) // 124 (0x7c) 54 (0x36) 4 (0x04) 29 (0x1d)  CRC: 0x7EB1A449
	92013664,	 // (0x57c0460) // 5 (0x05) 124 (0x7c) 4 (0x04) 96 (0x60)  CRC: 0x5A3B5378
	352608316,	 // (0x1504603c) // 21 (0x15) 4 (0x04) 96 (0x60) 60 (0x3c)  CRC: 0x67A80318
	453271763,	 // (0x1b0460d3) // 27 (0x1b) 4 (0x04) 96 (0x60) 211 (0xd3)  CRC: 0x69DA4491
	906304021,	 // (0x36051a15) // 54 (0x36) 5 (0x05) 26 (0x1a) 21 (0x15)  CRC: 0xAFBBE6D3
	94437387,	 // (0x5a1000b) // 5 (0x05) 161 (0xa1) 0 (0x00) 11 (0x0b)  CRC: 0x8B0BA925
	437978464,	 // (0x1a1b0560) // 26 (0x1a) 27 (0x1b) 5 (0x05) 96 (0x60)  CRC: 0xF0667578
	-744226805,	 // (0xd3a4000b) // 211 (0xd3) 164 (0xa4) 0 (0x00) 11 (0x0b)  CRC: 0x619EC538
	488362848,	 // (0x1d1bd360) // 29 (0x1d) 27 (0x1b) 211 (0xd3) 96 (0x60)  CRC: 0x91DACF6C
	1051131919,	 // (0x3ea7000f) // 62 (0x3e) 167 (0xa7) 0 (0x00) 15 (0x0f)  CRC: 0x78CCF23F
	488310368,	 // (0x1d1b0660) // 29 (0x1d) 27 (0x1b) 6 (0x06) 96 (0x60)  CRC: 0xB36E672D
	442504453,	 // (0x1a601505) // 26 (0x1a) 96 (0x60) 21 (0x15) 5 (0x05)  CRC: 0xDA56999D
	1691574334,	 // (0x64d3603e) // 100 (0x64) 211 (0xd3) 96 (0x60) 62 (0x3e)  CRC: 0x0328A829
	488375908,	 // (0x1d1c0664) // 29 (0x1d) 28 (0x1c) 6 (0x06) 100 (0x64)  CRC: 0x2617784D
	-693043200,	 // (0xd6b10000) // 214 (0xd6) 177 (0xb1)  CRC: 0xA74A6B6D
	-1488295059,	// CRC do Jardel: 0xA74A6B6D
	0,	//	synchronized?, exception table length
//	2196: f_lookupswitch(I)V
	-683795194,	 // (0xd73e1d06) // 215 (0xd7) 62 (0x3e) 29 (0x1d) 6 (0x06)  CRC: 0x85AA9C22
	1691681892,	 // (0x64d50464) // 100 (0x64) 213 (0xd5) 4 (0x04) 100 (0x64)  CRC: 0xAB33FE43
	906239445,	 // (0x36041dd5) // 54 (0x36) 4 (0x04) 29 (0x1d) 213 (0xd5)  CRC: 0xEA1BAA2B
	1008456464,	 // (0x3c1bd310) // 60 (0x3c) 27 (0x1b) 211 (0xd3) 16 (0x10)  CRC: 0x89714FB5
	175912453,	 // (0xa7c3605) // 10 (0x0a) 124 (0x7c) 54 (0x36) 5 (0x05)  CRC: 0x97B14D62
	352585084,	 // (0x1504057c) // 21 (0x15) 4 (0x04) 5 (0x05) 124 (0x7c)  CRC: 0x2ECECBF1
	73405701,	 // (0x4601505) // 4 (0x04) 96 (0x60) 21 (0x15) 5 (0x05)  CRC: 0x3CDE3349
	1614552019,	 // (0x603c1bd3) // 96 (0x60) 60 (0x3c) 27 (0x1b) 211 (0xd3)  CRC: 0xE3DE8AC4
	906369796,	 // (0x36061b04) // 54 (0x36) 6 (0x06) 27 (0x1b) 4 (0x04)  CRC: 0xD083150D
	1624454663,	 // (0x60d33607) // 96 (0x60) 211 (0xd3) 54 (0x36) 7 (0x07)  CRC: 0xEB64303D
	453337148,	 // (0x1b05603c) // 27 (0x1b) 5 (0x05) 96 (0x60) 60 (0x3c)  CRC: 0xBE6B7A8E
	54336533,	 // (0x33d1c15) // 3 (0x03) 61 (0x3d) 28 (0x1c) 21 (0x15)  CRC: 0xAE651B46
	128057377,	 // (0x7a20021) // 7 (0x07) 162 (0xa2) 0 (0x00) 33 (0x21)  CRC: 0xD2626E24
	454820984,	 // (0x1b1c0478) // 27 (0x1b) 28 (0x1c) 4 (0x04) 120 (0x78)  CRC: 0x7D291E56
	1624447648,	 // (0x60d31aa0) // 96 (0x60) 211 (0xd3) 26 (0x1a) 160 (0xa0)  CRC: 0xED6E549B
	1055516,	 // (0x101b1c) // 0 (0x00) 16 (0x10) 27 (0x1b) 28 (0x1c)  CRC: 0xEA5F867C
	74997764,	 // (0x4786004) // 4 (0x04) 120 (0x78) 96 (0x60) 4 (0x04)  CRC: 0xD3527918
	1624454662,	 // (0x60d33606) // 96 (0x60) 211 (0xd3) 54 (0x36) 6 (0x06)  CRC: 0x240C96D9
	-1493169636,	 // (0xa7000a1c) // 167 (0xa7) 0 (0x00) 10 (0x0a) 28 (0x1c)  CRC: 0x4BF5598A
	73416103,	 // (0x4603da7) // 4 (0x04) 96 (0x60) 61 (0x3d) 167 (0xa7)  CRC: 0xB19A5691
	-2157308,	 // (0xffdf1504) // 255 (0xff) 223 (0xdf) 21 (0x15) 4 (0x04)  CRC: 0xB6EDDC5B
	352739357,	 // (0x1506601d) // 21 (0x15) 6 (0x06) 96 (0x60) 29 (0x1d)  CRC: 0xC0924A4C
	107271857,	 // (0x664d6b1) // 6 (0x06) 100 (0x64) 214 (0xd6) 177 (0xb1)  CRC: 0x35FB9E1F
	905682463,	// CRC do Jardel: 0x35FB9E1F
	0,	//	synchronized?, exception table length
//	2221: f_ireturn()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2224: f_lreturn()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2227: f_freturn()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2230: f_dreturn()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2233: f_areturn()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2236: f_return()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2239: f_getstatic()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2242: f_putstatic()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2245: f_getfield()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2248: f_putfield()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2251: f_invokevirtual()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2254: f_invokespecial()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2257: f_invokestatic()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2260: f_invokeinterface()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2263: f_unused_ba()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2266: f_new(I)I
	448266271,	 // (0x1ab8001f) // 26 (0x1a) 184 (0xb8) 0 (0x00) 31 (0x1f)  CRC: 0x49D1709B
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0xC97A68B3
	-914724685,	// CRC do Jardel: 0xC97A68B3
	0,	//	synchronized?, exception table length
//	2270: f_newarray(II)I
	438024192,	 // (0x1a1bb800) // 26 (0x1a) 27 (0x1b) 184 (0xb8) 0 (0x00)  CRC: 0x4F65F51C
	548143104,	 // (0x20ac0000) // 32 (0x20) 172 (0xac)  CRC: 0x9787DAAA
	-1752704342,	// CRC do Jardel: 0x9787DAAA
	0,	//	synchronized?, exception table length
//	2274: f_anewarray(II)I
	436516864,	 // (0x1a04b800) // 26 (0x1a) 4 (0x04) 184 (0xb8) 0 (0x00)  CRC: 0xE2B35327
	548143104,	 // (0x20ac0000) // 32 (0x20) 172 (0xac)  CRC: 0xB95E5935
	-1184999115,	// CRC do Jardel: 0xB95E5935
	0,	//	synchronized?, exception table length
//	2278: f_arraylength()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2281: f_athrow(Ljava/lang/Throwable;)Ljava/lang/Throwable;
	-687381442,	 // (0xd707643e) // 215 (0xd7) 7 (0x07) 100 (0x64) 62 (0x3e)  CRC: 0x56B7F12E
	487605668,	 // (0x1d1045a4) // 29 (0x1d) 16 (0x10) 69 (0x45) 164 (0xa4)  CRC: 0x8140857A
	15015172,	 // (0xe51d04) // 0 (0x00) 229 (0xe5) 29 (0x1d) 4 (0x04)  CRC: 0xCB7BE9E7
	1624573028,	 // (0x60d50464) // 96 (0x60) 213 (0xd5) 4 (0x04) 100 (0x64)  CRC: 0x7AC83855
	906239237,	 // (0x36041d05) // 54 (0x36) 4 (0x04) 29 (0x1d) 5 (0x05)  CRC: 0xF6B3064D
	1624585733,	 // (0x60d53605) // 96 (0x60) 213 (0xd5) 54 (0x36) 5 (0x05)  CRC: 0xE80D6948
	486957269,	 // (0x1d0660d5) // 29 (0x1d) 6 (0x06) 96 (0x60) 213 (0xd5)  CRC: 0xB2FE4947
	906370311,	 // (0x36061d07) // 54 (0x36) 6 (0x06) 29 (0x1d) 7 (0x07)  CRC: 0xA036D6E0
	1624585735,	 // (0x60d53607) // 96 (0x60) 213 (0xd5) 54 (0x36) 7 (0x07)  CRC: 0x4B6A3ABA
	352834364,	 // (0x1507d33c) // 21 (0x15) 7 (0x07) 211 (0xd3) 60 (0x3c)  CRC: 0xF15F3362
	454036092,	 // (0x1b100a7c) // 27 (0x1b) 16 (0x10) 10 (0x0a) 124 (0x7c)  CRC: 0x02BA0093
	454099967,	 // (0x1b1103ff) // 27 (0x1b) 17 (0x11) 3 (0x03) 255 (0xff)  CRC: 0x7BE20C94
	2120234504,	 // (0x7e603608) // 126 (0x7e) 96 (0x60) 54 (0x36) 8 (0x08)  CRC: 0x68A6997B
	352899900,	 // (0x1508d33c) // 21 (0x15) 8 (0x08) 211 (0xd3) 60 (0x3c)  CRC: 0xDC1372F2
	454170494,	 // (0x1b12177e) // 27 (0x1b) 18 (0x12) 23 (0x17) 126 (0x7e)  CRC: 0x71F26D35
	906566418,	 // (0x36091b12) // 54 (0x36) 9 (0x09) 27 (0x1b) 18 (0x12)  CRC: 0xDC7A03CF
	561919498,	 // (0x217e360a) // 33 (0x21) 126 (0x7e) 54 (0x36) 10 (0x0a)  CRC: 0xAA64F7FE
	352846944,	 // (0x15080460) // 21 (0x15) 8 (0x08) 4 (0x04) 96 (0x60)  CRC: 0xDF66656A
	1025250568,	 // (0x3d1c1508) // 61 (0x3d) 28 (0x1c) 21 (0x15) 8 (0x08)  CRC: 0x818B4AAC
	73401621,	 // (0x4600515) // 4 (0x04) 96 (0x60) 5 (0x05) 21 (0x15)  CRC: 0x1679C0DC
	157835426,	 // (0x96860a2) // 9 (0x09) 104 (0x68) 96 (0x60) 162 (0xa2)  CRC: 0xFB4097EB
	7675091,	 // (0x751cd3) // 0 (0x00) 117 (0x75) 28 (0x1c) 211 (0xd3)  CRC: 0xDC7C108A
	1008406544,	 // (0x3c1b1010) // 60 (0x3c) 27 (0x1b) 16 (0x10) 16 (0x10)  CRC: 0xE968C20E
	2050362139,	 // (0x7a360b1b) // 122 (0x7a) 54 (0x36) 11 (0x0b) 27 (0x1b)  CRC: 0xDCE9F919
	303529526,	 // (0x12177e36) // 18 (0x12) 23 (0x17) 126 (0x7e) 54 (0x36)  CRC: 0x8B872268
	203162720,	 // (0xc1c0460) // 12 (0x0c) 28 (0x1c) 4 (0x04) 96 (0x60)  CRC: 0x0A73965E
	-751035632,	 // (0xd33c1b10) // 211 (0xd3) 60 (0x3c) 27 (0x1b) 16 (0x10)  CRC: 0x214B1DB6
	276444685,	 // (0x107a360d) // 16 (0x10) 122 (0x7a) 54 (0x36) 13 (0x0d)  CRC: 0x8ABEAEA1
	454170494,	 // (0x1b12177e) // 27 (0x1b) 18 (0x12) 23 (0x17) 126 (0x7e)  CRC: 0x2105DD3E
	906892548,	 // (0x360e1504) // 54 (0x36) 14 (0x0e) 21 (0x15) 4 (0x04)  CRC: 0xD083C59F
	353083648,	 // (0x150ba100) // 21 (0x15) 11 (0x0b) 161 (0xa1) 0 (0x00)  CRC: 0x5297371D
	1192559637,	 // (0x47150415) // 71 (0x47) 21 (0x15) 4 (0x04) 21 (0x15)  CRC: 0xE968C5BF
	211943488,	 // (0xca20040) // 12 (0x0c) 162 (0xa2) 0 (0x00) 64 (0x40)  CRC: 0xCC2423FE
	353278208,	 // (0x150e9900) // 21 (0x15) 14 (0x0e) 153 (0x99) 0 (0x00)  CRC: 0xE36860ED
	288021781,	 // (0x112add15) // 17 (0x11) 42 (0x2a) 221 (0xdd) 21 (0x15)  CRC: 0xB1DC7031
	102043232,	 // (0x6150e60) // 6 (0x06) 21 (0x15) 14 (0x0e) 96 (0x60)  CRC: 0xE4676EE8
	-742916061,	 // (0xd3b80023) // 211 (0xd3) 184 (0xb8) 0 (0x00) 35 (0x23)  CRC: 0xEA769306
	-1728041707,	 // (0x99002d15) // 153 (0x99) 0 (0x00) 45 (0x2d) 21 (0x15)  CRC: 0x15094201
	117727443,	 // (0x70460d3) // 7 (0x07) 4 (0x04) 96 (0x60) 211 (0xd3)  CRC: 0x4B2F2E53
	1008010523,	 // (0x3c15051b) // 60 (0x3c) 21 (0x15) 5 (0x05) 27 (0x1b)  CRC: 0x4CDDDABE
	270499424,	 // (0x101f7e60) // 16 (0x10) 31 (0x1f) 126 (0x7e) 96 (0x60)  CRC: 0x238A16B2
	453540880,	 // (0x1b087c10) // 27 (0x1b) 8 (0x08) 124 (0x7c) 16 (0x10)  CRC: 0x6992C918
	528375815,	 // (0x1f7e6007) // 31 (0x1f) 126 (0x7e) 96 (0x60) 7 (0x07)  CRC: 0x265A127E
	1614155541,	 // (0x60360f15) // 96 (0x60) 54 (0x36) 15 (0x0f) 21 (0x15)  CRC: 0x058942E2
	253559648,	 // (0xf1d0360) // 15 (0x0f) 29 (0x1d) 3 (0x03) 96 (0x60)  CRC: 0x62B4147D
	-703263459,	 // (0xd6150d1d) // 214 (0xd6) 21 (0x15) 13 (0x0d) 29 (0x1d)  CRC: 0xE42F127A
	73455133,	 // (0x460d61d) // 4 (0x04) 96 (0x60) 214 (0xd6) 29 (0x1d)  CRC: 0xF10CD453
	123787306,	 // (0x760d82a) // 7 (0x07) 96 (0x60) 216 (0xd8) 42 (0x2a)  CRC: 0x05203B7C
	-1340340896,	 // (0xb01c0560) // 176 (0xb0) 28 (0x1c) 5 (0x05) 96 (0x60)  CRC: 0xD927CDCC
	1034420100,	 // (0x3da7ff84) // 61 (0x3d) 167 (0xa7) 255 (0xff) 132 (0x84)  CRC: 0x30615ACF
	353016064,	 // (0x150a9900) // 21 (0x15) 10 (0x0a) 153 (0x99) 0 (0x00)  CRC: 0xC0DC5FDA
	169674848,	 // (0xa1d0860) // 10 (0x0a) 29 (0x1d) 8 (0x08) 96 (0x60)  CRC: 0x3CB5DA6A
	-717481021,	 // (0xd53c1bc3) // 213 (0xd5) 60 (0x3c) 27 (0x1b) 195 (0xc3)  CRC: 0xD1FBF1A6
	352781408,	 // (0x15070460) // 21 (0x15) 7 (0x07) 4 (0x04) 96 (0x60)  CRC: 0x76C9D865
	-751037179,	 // (0xd33c1505) // 211 (0xd3) 60 (0x3c) 21 (0x15) 5 (0x05)  CRC: 0x233C56EA
	454041470,	 // (0x1b101f7e) // 27 (0x1b) 16 (0x10) 31 (0x1f) 126 (0x7e)  CRC: 0x6FE0A573
	1612384380,	 // (0x601b087c) // 96 (0x60) 27 (0x1b) 8 (0x08) 124 (0x7c)  CRC: 0xA47C7DA5
	270499424,	 // (0x101f7e60) // 16 (0x10) 31 (0x1f) 126 (0x7e) 96 (0x60)  CRC: 0x635D9A33
	1051197211,	 // (0x3ea7ff1b) // 62 (0x3e) 167 (0xa7) 255 (0xff) 27 (0x1b)  CRC: 0xFDBC61A2
	304527360,	 // (0x1226b800) // 18 (0x12) 38 (0x26) 184 (0xb8) 0 (0x00)  CRC: 0xFFAFA5F6
	657110528,	 // (0x272ab600) // 39 (0x27) 42 (0x2a) 182 (0xb6) 0 (0x00)  CRC: 0xB7A6135A
	674890777,	 // (0x283a0419) // 40 (0x28) 58 (0x3a) 4 (0x04) 25 (0x19)  CRC: 0x303C9F75
	80085000,	 // (0x4c60008) // 4 (0x04) 198 (0xc6) 0 (0x00) 8 (0x08)  CRC: 0x261C086D
	419739648,	 // (0x1904b800) // 25 (0x19) 4 (0x04) 184 (0xb8) 0 (0x00)  CRC: 0xC6FB4A91
	655501752,	 // (0x271229b8) // 39 (0x27) 18 (0x12) 41 (0x29) 184 (0xb8)  CRC: 0x0D4A802E
	2611128,	 // (0x27d7b8) // 0 (0x00) 39 (0x27) 215 (0xd7) 184 (0xb8)  CRC: 0xD36DF780
	2753720,	 // (0x2a04b8) // 0 (0x00) 42 (0x2a) 4 (0x04) 184 (0xb8)  CRC: 0x47A6E951
	2828976,	 // (0x2b2ab0) // 0 (0x00) 43 (0x2b) 42 (0x2a) 176 (0xb0)  CRC: 0x8C1531BE
	-1944768066,	// CRC do Jardel: 0x8C1531BE
	0,	//	synchronized?, exception table length
//	2351: f_checkcast(II)I
	446300165,	 // (0x1a9a0005) // 26 (0x1a) 154 (0x9a) 0 (0x00) 5 (0x05)  CRC: 0x7B6445C2
	447486468,	 // (0x1aac1a04) // 26 (0x1a) 172 (0xac) 26 (0x1a) 4 (0x04)  CRC: 0xFF8FCD31
	1624456476,	 // (0x60d33d1c) // 96 (0x60) 211 (0xd3) 61 (0x3d) 28 (0x1c)  CRC: 0x378ACA9E
	284909629,	 // (0x10fb603d) // 16 (0x10) 251 (0xfb) 96 (0x60) 61 (0x3d)  CRC: 0x5E855348
	453402835,	 // (0x1b0660d3) // 27 (0x1b) 6 (0x06) 96 (0x60) 211 (0xd3)  CRC: 0xEBB8056A
	1042127872,	 // (0x3e1d9c00) // 62 (0x3e) 29 (0x1d) 156 (0x9c) 0 (0x00)  CRC: 0xC97CE6BB
	857474912,	 // (0x331c0760) // 51 (0x33) 28 (0x1c) 7 (0x07) 96 (0x60)  CRC: 0xA316585A
	-751434731,	 // (0xd3360415) // 211 (0xd3) 54 (0x36) 4 (0x04) 21 (0x15)  CRC: 0x20711592
	77201415,	 // (0x49a0007) // 4 (0x04) 154 (0x9a) 0 (0x00) 7 (0x07)  CRC: 0xA797FED1
	-536827969,	 // (0xe000a7bf) // 224 (0xe0) 0 (0x00) 167 (0xa7) 191 (0xbf)  CRC: 0x6434780B
	352591120,	 // (0x15041d10) // 21 (0x15) 4 (0x04) 29 (0x1d) 16 (0x10)  CRC: 0x4A5437A5
	526651424,	 // (0x1f641020) // 31 (0x1f) 100 (0x64) 16 (0x10) 32 (0x20)  CRC: 0xBE0B068F
	1818284854,	 // (0x6c60d336) // 108 (0x6c) 96 (0x60) 211 (0xd3) 54 (0x36)  CRC: 0x9AE78E73
	85263645,	 // (0x515051d) // 5 (0x05) 21 (0x15) 5 (0x05) 29 (0x1d)  CRC: 0x88F16787
	42078239,	 // (0x282101f) // 2 (0x02) 130 (0x82) 16 (0x10) 31 (0x1f)  CRC: 0xE75D59F0
	2122056830,	 // (0x7e7c047e) // 126 (0x7e) 124 (0x7c) 4 (0x04) 126 (0x7e)  CRC: 0xF2D5A5BB
	-1728051942,	 // (0x9900051a) // 153 (0x99) 0 (0x00) 5 (0x05) 26 (0x1a)  CRC: 0x47B25AC6
	-1394605913,	 // (0xace000a7) // 172 (0xac) 224 (0xe0) 0 (0x00) 167 (0xa7)  CRC: 0x4F8F1116
	-1088676960,	 // (0xbf1c1ba0) // 191 (0xbf) 28 (0x1c) 27 (0x1b) 160 (0xa0)  CRC: 0x4059B112
	334508,	 // (0x51aac) // 0 (0x00) 5 (0x05) 26 (0x1a) 172 (0xac)  CRC: 0xDE885FE5
	470180051,	 // (0x1c0660d3) // 28 (0x1c) 6 (0x06) 96 (0x60) 211 (0xd3)  CRC: 0x54E8A0F7
	1025284863,	 // (0x3d1c9aff) // 61 (0x3d) 28 (0x1c) 154 (0x9a) 255 (0xff)  CRC: 0x898520CF
	-203423577,	 // (0xf3e000a7) // 243 (0xf3) 224 (0xe0) 0 (0x00) 167 (0xa7)  CRC: 0x1BF4A51C
	-1090519040,	 // (0xbf000000) // 191 (0xbf)  CRC: 0x1C77F117
	477622551,	// CRC do Jardel: 0x1C77F117
	0,	//	synchronized?, exception table length
//	2377: f_instanceof(II)I
	446300165,	 // (0x1a9a0005) // 26 (0x1a) 154 (0x9a) 0 (0x00) 5 (0x05)  CRC: 0x7B6445C2
	61610500,	 // (0x3ac1a04) // 3 (0x03) 172 (0xac) 26 (0x1a) 4 (0x04)  CRC: 0x9157E64E
	1624456476,	 // (0x60d33d1c) // 96 (0x60) 211 (0xd3) 61 (0x3d) 28 (0x1c)  CRC: 0xBCBCA419
	284909629,	 // (0x10fb603d) // 16 (0x10) 251 (0xfb) 96 (0x60) 61 (0x3d)  CRC: 0x3A82E1C6
	453402835,	 // (0x1b0660d3) // 27 (0x1b) 6 (0x06) 96 (0x60) 211 (0xd3)  CRC: 0xEEB27318
	1042127872,	 // (0x3e1d9c00) // 62 (0x3e) 29 (0x1d) 156 (0x9c) 0 (0x00)  CRC: 0x19C45569
	689702752,	 // (0x291c0760) // 41 (0x29) 28 (0x1c) 7 (0x07) 96 (0x60)  CRC: 0x5CECF0C6
	-751434731,	 // (0xd3360415) // 211 (0xd3) 54 (0x36) 4 (0x04) 21 (0x15)  CRC: 0x26F1BF19
	77201413,	 // (0x49a0005) // 4 (0x04) 154 (0x9a) 0 (0x00) 5 (0x05)  CRC: 0xFDE6E938
	61609220,	 // (0x3ac1504) // 3 (0x03) 172 (0xac) 21 (0x15) 4 (0x04)  CRC: 0xD8062136
	487595876,	 // (0x1d101f64) // 29 (0x1d) 16 (0x10) 31 (0x1f) 100 (0x64)  CRC: 0x7D1093E7
	270560352,	 // (0x10206c60) // 16 (0x10) 32 (0x20) 108 (0x6c) 96 (0x60)  CRC: 0xA01F4B1D
	-751434475,	 // (0xd3360515) // 211 (0xd3) 54 (0x36) 5 (0x05) 21 (0x15)  CRC: 0x06B82776
	85787266,	 // (0x51d0282) // 5 (0x05) 29 (0x1d) 2 (0x02) 130 (0x82)  CRC: 0xEA111C68
	270499452,	 // (0x101f7e7c) // 16 (0x10) 31 (0x1f) 126 (0x7e) 124 (0x7c)  CRC: 0x63BA4963
	75410460,	 // (0x47eac1c) // 4 (0x04) 126 (0x7e) 172 (0xac) 28 (0x1c)  CRC: 0x8500FBD9
	463470597,	 // (0x1ba00005) // 27 (0x1b) 160 (0xa0) 0 (0x00) 5 (0x05)  CRC: 0x5B5A7D34
	78388230,	 // (0x4ac1c06) // 4 (0x04) 172 (0xac) 28 (0x1c) 6 (0x06)  CRC: 0xD83DBA17
	1624456476,	 // (0x60d33d1c) // 96 (0x60) 211 (0xd3) 61 (0x3d) 28 (0x1c)  CRC: 0xCC47744B
	-1694502141,	 // (0x9afff303) // 154 (0x9a) 255 (0xff) 243 (0xf3) 3 (0x03)  CRC: 0x3043F062
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0xFB839669
	-75262359,	// CRC do Jardel: 0xFB839669
	0,	//	synchronized?, exception table length
//	2400: f_monitorenter(I)V
	51413202,	 // (0x31080d2) // 3 (0x03) 16 (0x10) 128 (0x80) 210 (0xd2)  CRC: 0xCDBF5678
	-1308612092,	 // (0xb2002a04) // 178 (0xb2) 0 (0x00) 42 (0x2a) 4 (0x04)  CRC: 0x63D53428
	1622343722,	 // (0x60b3002a) // 96 (0x60) 179 (0xb3) 0 (0x00) 42 (0x2a)  CRC: 0xD2141D6E
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x02E31C3E
	48438334,	// CRC do Jardel: 0x02E31C3E
	0,	//	synchronized?, exception table length
//	2406: f_monitorexit(I)V
	-1308612092,	 // (0xb2002a04) // 178 (0xb2) 0 (0x00) 42 (0x2a) 4 (0x04)  CRC: 0xFE2857C3
	1689452586,	 // (0x64b3002a) // 100 (0x64) 179 (0xb3) 0 (0x00) 42 (0x2a)  CRC: 0x80E19D66
	-1308611940,	 // (0xb2002a9c) // 178 (0xb2) 0 (0x00) 42 (0x2a) 156 (0x9c)  CRC: 0x69EDD7C4
	725086,	 // (0xb105e) // 0 (0x00) 11 (0x0b) 16 (0x10) 94 (0x5e)  CRC: 0xE79B7E33
	-1207947865,	 // (0xb8002da7) // 184 (0xb8) 0 (0x00) 45 (0x2d) 167 (0xa7)  CRC: 0x43647655
	45568,	 // (0xb200) // 0 (0x00) 0 (0x00) 178 (0xb2) 0 (0x00)  CRC: 0xC970DDAA
	714735623,	 // (0x2a9a0007) // 42 (0x2a) 154 (0x9a) 0 (0x00) 7 (0x07)  CRC: 0x01C1DA16
	68190418,	 // (0x41080d2) // 4 (0x04) 16 (0x10) 128 (0x80) 210 (0xd2)  CRC: 0x3B863655
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x6F6CAB92
	1869392786,	// CRC do Jardel: 0x6F6CAB92
	0,	//	synchronized?, exception table length
//	2417: f_wide()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2420: f_multianewarray()I
	305051648,	 // (0x122eb800) // 18 (0x12) 46 (0x2e) 184 (0xb8) 0 (0x00)  CRC: 0xCEA255E4
	655503288,	 // (0x27122fb8) // 39 (0x27) 18 (0x12) 47 (0x2f) 184 (0xb8)  CRC: 0xCE68028E
	2556731,	 // (0x27033b) // 0 (0x00) 39 (0x27) 3 (0x03) 59 (0x3b)  CRC: 0x691EA68E
	-683795193,	 // (0xd73e1d07) // 215 (0xd7) 62 (0x3e) 29 (0x1d) 7 (0x07)  CRC: 0x425D842A
	1681261589,	 // (0x64360415) // 100 (0x64) 54 (0x36) 4 (0x04) 21 (0x15)  CRC: 0x44BD594D
	67395797,	 // (0x40460d5) // 4 (0x04) 4 (0x04) 96 (0x60) 213 (0xd5)  CRC: 0x583A8E9A
	906302725,	 // (0x36051505) // 54 (0x36) 5 (0x05) 21 (0x15) 5 (0x05)  CRC: 0xF1A24970
	90191365,	 // (0x5603605) // 5 (0x05) 96 (0x60) 54 (0x36) 5 (0x05)  CRC: 0x6FC071D7
	352585568,	 // (0x15040760) // 21 (0x15) 4 (0x04) 7 (0x07) 96 (0x60)  CRC: 0xC89FC94F
	-717879787,	 // (0xd5360615) // 213 (0xd5) 54 (0x36) 6 (0x06) 21 (0x15)  CRC: 0x637A449D
	114495498,	 // (0x6d3100a) // 6 (0x06) 211 (0xd3) 16 (0x10) 10 (0x0a)  CRC: 0xF5739501
	2083915541,	 // (0x7c360715) // 124 (0x7c) 54 (0x36) 7 (0x07) 21 (0x15)  CRC: 0xCB770AAC
	118818053,	 // (0x7150505) // 7 (0x07) 21 (0x15) 5 (0x05) 5 (0x05)  CRC: 0x6A474A94
	2053165878,	 // (0x7a60d336) // 122 (0x7a) 96 (0x60) 211 (0xd3) 54 (0x36)  CRC: 0xA6983D1D
	135595270,	 // (0x8150506) // 8 (0x08) 21 (0x15) 5 (0x05) 6 (0x06)  CRC: 0x44934FD0
	2117868294,	 // (0x7e3c1b06) // 126 (0x7e) 60 (0x3c) 27 (0x1b) 6 (0x06)  CRC: 0x4164F79A
	-1577053931,	 // (0xa2001115) // 162 (0xa2) 0 (0x00) 17 (0x11) 21 (0x15)  CRC: 0x3A31718B
	135268474,	 // (0x810087a) // 8 (0x08) 16 (0x10) 8 (0x08) 122 (0x7a)  CRC: 0x2F225DFB
	906500868,	 // (0x36081b04) // 54 (0x36) 8 (0x08) 27 (0x1b) 4 (0x04)  CRC: 0xF09BFDDA
	1614587903,	 // (0x603ca7ff) // 96 (0x60) 60 (0x3c) 167 (0xa7) 255 (0xff)  CRC: 0x4937C675
	-267057135,	 // (0xf0150811) // 240 (0xf0) 21 (0x15) 8 (0x08) 17 (0x11)  CRC: 0x2D05A550
	16743990,	 // (0xff7e36) // 0 (0x00) 255 (0xff) 126 (0x7e) 54 (0x36)  CRC: 0x31AB6E23
	135595268,	 // (0x8150504) // 8 (0x08) 21 (0x15) 5 (0x05) 4 (0x04)  CRC: 0x5A4F41D3
	1611990020,	 // (0x60150404) // 96 (0x60) 21 (0x15) 4 (0x04) 4 (0x04)  CRC: 0xC1CB8C00
	1624642820,	 // (0x60d61504) // 96 (0x60) 214 (0xd6) 21 (0x15) 4 (0x04)  CRC: 0x8D84B275
	-717349611,	 // (0xd53e1d15) // 213 (0xd5) 62 (0x3e) 29 (0x1d) 21 (0x15)  CRC: 0xEA162796
	140787229,	 // (0x8643e1d) // 8 (0x08) 100 (0x64) 62 (0x3e) 29 (0x1d)  CRC: 0x696464A2
	352638485,	 // (0x1504d615) // 21 (0x15) 4 (0x04) 214 (0xd6) 21 (0x15)  CRC: 0x4215EA07
	134586112,	 // (0x8059f00) // 8 (0x08) 5 (0x05) 159 (0x9f) 0 (0x00)  CRC: 0xEA8AC45D
	383778964,	 // (0x16e00094) // 22 (0x16) 224 (0xe0) 0 (0x00) 148 (0x94)  CRC: 0x6E83D5FE
	352892416,	 // (0x1508b600) // 21 (0x15) 8 (0x08) 182 (0xb6) 0 (0x00)  CRC: 0x02D60D81
	819986580,	 // (0x30e00094) // 48 (0x30) 224 (0xe0) 0 (0x00) 148 (0x94)  CRC: 0x55DA845C
	305247744,	 // (0x1231b600) // 18 (0x12) 49 (0x31) 182 (0xb6) 0 (0x00)  CRC: 0xEF4D49E5
	850919426,	 // (0x32b80002) // 50 (0x32) 184 (0xb8) 0 (0x00) 2 (0x02)  CRC: 0x94C73DB3
	486826197,	 // (0x1d0460d5) // 29 (0x1d) 4 (0x04) 96 (0x60) 213 (0xd5)  CRC: 0x7A3447A8
	906566917,	 // (0x36091d05) // 54 (0x36) 9 (0x09) 29 (0x1d) 5 (0x05)  CRC: 0x2AC5CE15
	1624585738,	 // (0x60d5360a) // 96 (0x60) 213 (0xd5) 54 (0x36) 10 (0x0a)  CRC: 0x4BE178B6
	352912312,	 // (0x150903b8) // 21 (0x15) 9 (0x09) 3 (0x03) 184 (0xb8)  CRC: 0xF767AFA8
	3357466,	 // (0x333b1a) // 0 (0x00) 51 (0x33) 59 (0x3b) 26 (0x1a)  CRC: 0x2CFE0053
	-751432957,	 // (0xd3360b03) // 211 (0xd3) 54 (0x36) 11 (0x0b) 3 (0x03)  CRC: 0x09F1F6A6
	1008407817,	 // (0x3c1b1509) // 60 (0x3c) 27 (0x1b) 21 (0x15) 9 (0x09)  CRC: 0x52818C21
	-1577052651,	 // (0xa2001615) // 162 (0xa2) 0 (0x00) 22 (0x16) 21 (0x15)  CRC: 0x10E9DE0F
	168823480,	 // (0xa100ab8) // 10 (0x0a) 16 (0x10) 10 (0x0a) 184 (0xb8)  CRC: 0xAD75C784
	3413259,	 // (0x34150b) // 0 (0x00) 52 (0x34) 21 (0x15) 11 (0x0b)  CRC: 0x3A057E10
	459330587,	 // (0x1b60d41b) // 27 (0x1b) 96 (0x60) 212 (0xd4) 27 (0x1b)  CRC: 0xE42F7677
	73415847,	 // (0x4603ca7) // 4 (0x04) 96 (0x60) 60 (0x3c) 167 (0xa7)  CRC: 0xB6F70049
	-1434964,	 // (0xffea1aac) // 255 (0xff) 234 (0xea) 26 (0x1a) 172 (0xac)  CRC: 0x75988A10
	1972931088,	// CRC do Jardel: 0x75988A10
	0,	//	synchronized?, exception table length
//	2469: f_ifnull()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2472: f_ifnonnull()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2475: f_goto_w()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2478: f_jsr_w()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2481: f_breakpoint()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2484: f_resCB()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2487: f_resCC()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2490: f_resCD()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2493: f_resCE()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2496: f_resCF()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2499: f_jopsys_null()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2502: f_jopsys_rd()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2505: f_jopsys_wr()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2508: f_jopsys_rdmem()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2511: f_jopsys_wrmem()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2514: f_jopsys_rdint()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2517: f_jopsys_wrint()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2520: f_jopsys_getsp()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2523: f_jopsys_setsp()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2526: f_jopsys_getvp()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2529: f_jopsys_setvp()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2532: f_resDB()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2535: f_resDC()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2538: f_resDD()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2541: f_resDE()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2544: f_resDF()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2547: f_resE0()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2550: f_putstatic_ref(II)V
	-536831399,	 // (0xe0009a59) // 224 (0xe0) 0 (0x00) 154 (0x9a) 89 (0x59)  CRC: 0x3A812FF4
	1304566739,	 // (0x4dc21bd3) // 77 (0x4d) 194 (0xc2) 27 (0x1b) 211 (0xd3)  CRC: 0x25D80366
	1042127104,	 // (0x3e1d9900) // 62 (0x3e) 29 (0x1d) 153 (0x99) 0 (0x00)  CRC: 0x1CD23C5C
	538775558,	 // (0x201d1006) // 32 (0x20) 29 (0x1d) 16 (0x10) 6 (0x06)  CRC: 0x0C2AD747
	1624486400,	 // (0x60d3b200) // 96 (0x60) 211 (0xd3) 178 (0xb2) 0 (0x00)  CRC: 0xB946FC8B
	1201602581,	 // (0x479f0015) // 71 (0x47) 159 (0x9f) 0 (0x00) 21 (0x15)  CRC: 0xC0606B75
	487088339,	 // (0x1d0860d3) // 29 (0x1d) 8 (0x08) 96 (0x60) 211 (0xd3)  CRC: 0x0EC0B15B
	-1711272270,	 // (0x9a000eb2) // 154 (0x9a) 0 (0x00) 14 (0x0e) 178 (0xb2)  CRC: 0x97435675
	4988168,	 // (0x4c1d08) // 0 (0x00) 76 (0x4c) 29 (0x1d) 8 (0x08)  CRC: 0x18B72087
	1624513971,	 // (0x60d41db3) // 96 (0x60) 212 (0xd4) 29 (0x1d) 179 (0xb3)  CRC: 0x6257F1EA
	4987419,	 // (0x4c1a1b) // 0 (0x00) 76 (0x4c) 26 (0x1a) 27 (0x1b)  CRC: 0xD21584FC
	-735263833,	 // (0xd42cc3a7) // 212 (0xd4) 44 (0x2c) 195 (0xc3) 167 (0xa7)  CRC: 0x791E9A23
	670212,	 // (0xa3a04) // 0 (0x00) 10 (0x0a) 58 (0x3a) 4 (0x04)  CRC: 0xAE5644F1
	750983428,	 // (0x2cc31904) // 44 (0x2c) 195 (0xc3) 25 (0x19) 4 (0x04)  CRC: 0xE10FA28A
	-1078919168,	 // (0xbfb10000) // 191 (0xbf) 177 (0xb1)  CRC: 0xEBF29098
	-336424808,	// CRC do Jardel: 0xEBF29098
	2,	//	synchronized?, exception table length
	393263,	// start: 6	end: 47
	3276800,	// target: 50	type: 0
	3276854,	// start: 50	end: 54
	3276800,	// target: 50	type: 0
//	2571: f_resE2()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2574: f_putfield_ref(III)V
	-536831399,	 // (0xe0009a59) // 224 (0xe0) 0 (0x00) 154 (0x9a) 89 (0x59)  CRC: 0x3A812FF4
	1321343516,	 // (0x4ec21a1c) // 78 (0x4e) 194 (0xc2) 26 (0x1a) 28 (0x1c)  CRC: 0xBBDE4211
	-382335979,	 // (0xe9360415) // 233 (0xe9) 54 (0x36) 4 (0x04) 21 (0x15)  CRC: 0x64A9E05D
	77135908,	 // (0x4990024) // 4 (0x04) 153 (0x99) 0 (0x00) 36 (0x24)  CRC: 0x7AF69375
	352587782,	 // (0x15041006) // 21 (0x15) 4 (0x04) 16 (0x10) 6 (0x06)  CRC: 0xE5FDCDDC
	1624486400,	 // (0x60d3b200) // 96 (0x60) 211 (0xd3) 178 (0xb2) 0 (0x00)  CRC: 0xB79C4E9B
	1201602584,	 // (0x479f0018) // 71 (0x47) 159 (0x9f) 0 (0x00) 24 (0x18)  CRC: 0x74097ECF
	352585824,	 // (0x15040860) // 21 (0x15) 4 (0x04) 8 (0x08) 96 (0x60)  CRC: 0xEF264C3A
	-744882160,	 // (0xd39a0010) // 211 (0xd3) 154 (0x9a) 0 (0x00) 16 (0x10)  CRC: 0x618B9D9E
	-1308603371,	 // (0xb2004c15) // 178 (0xb2) 0 (0x00) 76 (0x4c) 21 (0x15)  CRC: 0x0DEA5FFF
	67657940,	 // (0x40860d4) // 4 (0x04) 8 (0x08) 96 (0x60) 212 (0xd4)  CRC: 0x806F43AD
	352629504,	 // (0x1504b300) // 21 (0x15) 4 (0x04) 179 (0xb3) 0 (0x00)  CRC: 0xC50933F9
	1276779547,	 // (0x4c1a1c1b) // 76 (0x4c) 26 (0x1a) 28 (0x1c) 27 (0x1b)  CRC: 0x70DDF86B
	-366099545,	 // (0xea2dc3a7) // 234 (0xea) 45 (0x2d) 195 (0xc3) 167 (0xa7)  CRC: 0xA2940B31
	670213,	 // (0xa3a05) // 0 (0x00) 10 (0x0a) 58 (0x3a) 5 (0x05)  CRC: 0x8F326836
	767760645,	 // (0x2dc31905) // 45 (0x2d) 195 (0xc3) 25 (0x19) 5 (0x05)  CRC: 0xE9796EB1
	-1078919168,	 // (0xbfb10000) // 191 (0xbf) 177 (0xb1)  CRC: 0xB5A0EA0E
	-1247745522,	// CRC do Jardel: 0xB5A0EA0E
	2,	//	synchronized?, exception table length
	393271,	// start: 6	end: 55
	3801088,	// target: 58	type: 0
	3801150,	// start: 58	end: 62
	3801088,	// target: 58	type: 0
//	2597: f_resE4()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2600: f_resE5()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2603: f_resE6()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2606: f_resE7()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2609: f_jopsys_memcpy()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2612: f_jopsys_getfield()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2615: f_jopsys_putfield()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2618: f_resEB()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2621: f_invokesuper()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2624: f_resED()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2627: f_resEE()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2630: f_resEF()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2633: f_resF0()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2636: f_resF1()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2639: f_resF2()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2642: f_resF3()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2645: f_resF4()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2648: f_resF5()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2651: f_resF6()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2654: f_resF7()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2657: f_resF8()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2660: f_resF9()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2663: f_resFA()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2666: f_resFB()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2669: f_resFC()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2672: f_resFD()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2675: f_sys_noim()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	2678: f_sys_init()V
	-1207958863,	 // (0xb80002b1) // 184 (0xb8) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xFFF1F530
	-920272,	// CRC do Jardel: 0xFFF1F530
	0,	//	synchronized?, exception table length
//	java.lang.Runnable
//	2681: run()V
//	abstract
//	java.lang.StringBuilder
//	2681: <init>()V
	705695927,	 // (0x2a1010b7) // 42 (0x2a) 16 (0x10) 16 (0x10) 183 (0xb7)  CRC: 0x1DEB9B71
	110848,	 // (0x1b100) // 0 (0x00) 1 (0x01) 177 (0xb1)  CRC: 0x94A1291B
	-1801377509,	// CRC do Jardel: 0x94A1291B
	0,	//	synchronized?, exception table length
//	2685: <init>(I)V
	716636162,	 // (0x2ab70002) // 42 (0x2a) 183 (0xb7) 0 (0x00) 2 (0x02)  CRC: 0x8E024338
	706460677,	 // (0x2a1bbc05) // 42 (0x2a) 27 (0x1b) 188 (0xbc) 5 (0x05)  CRC: 0x6168D750
	-486538831,	 // (0xe30001b1) // 227 (0xe3) 0 (0x00) 1 (0x01) 177 (0xb1)  CRC: 0x96EB036E
	-1762983058,	// CRC do Jardel: 0x96EB036E
	0,	//	synchronized?, exception table length
//	2690: <init>(Ljava/lang/String;)V
	716636162,	 // (0x2ab70002) // 42 (0x2a) 183 (0xb7) 0 (0x00) 2 (0x02)  CRC: 0x8E024338
	707507712,	 // (0x2a2bb600) // 42 (0x2a) 43 (0x2b) 182 (0xb6) 0 (0x00)  CRC: 0xFC7691E1
	62193664,	 // (0x3b50000) // 3 (0x03) 181 (0xb5) 0 (0x00) 0 (0x00)  CRC: 0x12DC8ACF
	707441664,	 // (0x2a2ab400) // 42 (0x2a) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x78B673CE
	1052768,	 // (0x101060) // 0 (0x00) 16 (0x10) 16 (0x10) 96 (0x60)  CRC: 0xAF64B8F1
	-1140464896,	 // (0xbc05e300) // 188 (0xbc) 5 (0x05) 227 (0xe3) 0 (0x00)  CRC: 0xEA7A39B6
	19596074,	 // (0x12b032a) // 1 (0x01) 43 (0x2b) 3 (0x03) 42 (0x2a)  CRC: 0x3B86C4C0
	-1275068374,	 // (0xb400002a) // 180 (0xb4) 0 (0x00) 0 (0x00) 42 (0x2a)  CRC: 0xB6A2E1C0
	-503316221,	 // (0xe2000103) // 226 (0xe2) 0 (0x00) 1 (0x01) 3 (0x03)  CRC: 0x6E7868B4
	-1241512783,	 // (0xb60004b1) // 182 (0xb6) 0 (0x00) 4 (0x04) 177 (0xb1)  CRC: 0xDEB56BA8
	-558535768,	// CRC do Jardel: 0xDEB56BA8
	0,	//	synchronized?, exception table length
//	2702: <init>(Ljava/lang/CharSequence;)V
	716636162,	 // (0x2ab70002) // 42 (0x2a) 183 (0xb7) 0 (0x00) 2 (0x02)  CRC: 0x8E024338
	733544453,	 // (0x2bb90005) // 43 (0x2b) 185 (0xb9) 0 (0x00) 5 (0x05)  CRC: 0xA41A7762
	16792874,	 // (0x1003d2a) // 1 (0x01) 0 (0x00) 61 (0x3d) 42 (0x2a)  CRC: 0x466049F3
	480051207,	 // (0x1c9d0007) // 28 (0x1c) 157 (0x9d) 0 (0x00) 7 (0x07)  CRC: 0x2B192E68
	61276164,	 // (0x3a70004) // 3 (0x03) 167 (0xa7) 0 (0x00) 4 (0x04)  CRC: 0x402577BF
	481624064,	 // (0x1cb50000) // 28 (0x1c) 181 (0xb5) 0 (0x00) 0 (0x00)  CRC: 0x73E84422
	707441664,	 // (0x2a2ab400) // 42 (0x2a) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0xE6EC3DDB
	1052768,	 // (0x101060) // 0 (0x00) 16 (0x10) 16 (0x10) 96 (0x60)  CRC: 0xD44AA0BC
	-1140464896,	 // (0xbc05e300) // 188 (0xbc) 5 (0x05) 227 (0xe3) 0 (0x00)  CRC: 0x1158D9FA
	16989725,	 // (0x1033e1d) // 1 (0x01) 3 (0x03) 62 (0x3e) 29 (0x1d)  CRC: 0x97204ACF
	480378903,	 // (0x1ca20017) // 28 (0x1c) 162 (0xa2) 0 (0x00) 23 (0x17)  CRC: 0xE80A016D
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x0EAC2961
	489364921,	 // (0x1d2b1db9) // 29 (0x1d) 43 (0x2b) 29 (0x1d) 185 (0xb9)  CRC: 0x19C2073F
	393728,	 // (0x60200) // 0 (0x00) 6 (0x06) 2 (0x02) 0 (0x00)  CRC: 0x768A5CAF
	1427965024,	 // (0x551d0460) // 85 (0x55) 29 (0x1d) 4 (0x04) 96 (0x60)  CRC: 0xE4D6039A
	1051197418,	 // (0x3ea7ffea) // 62 (0x3e) 167 (0xa7) 255 (0xff) 234 (0xea)  CRC: 0x082D4B4C
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xCB10795E
	-888112802,	// CRC do Jardel: 0xCB10795E
	0,	//	synchronized?, exception table length
//	2721: length()I
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x03DD4804
	64833540,	// CRC do Jardel: 0x03DD4804
	0,	//	synchronized?, exception table length
//	2725: capacity()I
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x285FE67C
	-1096024064,	 // (0xbeac0000) // 190 (0xbe) 172 (0xac)  CRC: 0x4C980E00
	1285033472,	// CRC do Jardel: 0x4C980E00
	0,	//	synchronized?, exception table length
//	2729: ensureCapacity(I)V
	455795200,	 // (0x1b2ae200) // 27 (0x1b) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xCF9A50C4
	29271040,	 // (0x1bea400) // 1 (0x01) 190 (0xbe) 164 (0xa4) 0 (0x00)  CRC: 0x78AC9967
	791339520,	 // (0x2f2ae200) // 47 (0x2f) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x9B227A56
	29230440,	 // (0x1be0568) // 1 (0x01) 190 (0xbe) 5 (0x05) 104 (0x68)  CRC: 0xD45FCD7E
	90193179,	 // (0x5603d1b) // 5 (0x05) 96 (0x60) 61 (0x3d) 27 (0x1b)  CRC: 0xA8B7B818
	480378887,	 // (0x1ca20007) // 28 (0x1c) 162 (0xa2) 0 (0x00) 7 (0x07)  CRC: 0x4F4A719A
	480706564,	 // (0x1ca70004) // 28 (0x1c) 167 (0xa7) 0 (0x00) 4 (0x04)  CRC: 0x76169BFA
	456924092,	 // (0x1b3c1bbc) // 27 (0x1b) 60 (0x3c) 27 (0x1b) 188 (0xbc)  CRC: 0x6EF2CC32
	89008866,	 // (0x54e2ae2) // 5 (0x05) 78 (0x4e) 42 (0x2a) 226 (0xe2)  CRC: 0x42C05C18
	66349,	 // (0x1032d) // 0 (0x00) 1 (0x01) 3 (0x03) 45 (0x2d)  CRC: 0x60FD45BC
	53130240,	 // (0x32ab400) // 3 (0x03) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x1BDF685A
	12058631,	 // (0xb80007) // 0 (0x00) 184 (0xb8) 0 (0x00) 7 (0x07)  CRC: 0x7AB42227
	707650304,	 // (0x2a2de300) // 42 (0x2a) 45 (0x2d) 227 (0xe3) 0 (0x00)  CRC: 0x6BFE5E0A
	28377088,	 // (0x1b10000) // 1 (0x01) 177 (0xb1)  CRC: 0x61363D81
	1630944641,	// CRC do Jardel: 0x61363D81
	0,	//	synchronized?, exception table length
//	2745: setLength(I)V
	463208460,	 // (0x1b9c000c) // 27 (0x1b) 156 (0x9c) 0 (0x00) 12 (0x0c)  CRC: 0xBFF4E56E
	-1157625767,	 // (0xbb000859) // 187 (0xbb) 0 (0x00) 8 (0x08) 89 (0x59)  CRC: 0x9ABC2194
	464977929,	 // (0x1bb70009) // 27 (0x1b) 183 (0xb7) 0 (0x00) 9 (0x09)  CRC: 0xD4A3CE9A
	-1087708672,	 // (0xbf2ae200) // 191 (0xbf) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xA24C3F79
	29244714,	 // (0x1be3d2a) // 1 (0x01) 190 (0xbe) 61 (0x3d) 42 (0x2a)  CRC: 0x984999DB
	464912394,	 // (0x1bb6000a) // 27 (0x1b) 182 (0xb6) 0 (0x00) 10 (0x0a)  CRC: 0x54704A8F
	454861312,	 // (0x1b1ca200) // 27 (0x1b) 28 (0x1c) 162 (0xa2) 0 (0x00)  CRC: 0x5C6C0776
	187308981,	 // (0xb2a1bb5) // 11 (0x0b) 42 (0x2a) 27 (0x1b) 181 (0xb5)  CRC: 0x018BD9F4
	42752,	 // (0xa700) // 0 (0x00) 0 (0x00) 167 (0xa7) 0 (0x00)  CRC: 0xFFA9FAEF
	522892288,	 // (0x1f2ab400) // 31 (0x1f) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0xC0B6C066
	1810944,	 // (0x1ba200) // 0 (0x00) 27 (0x1b) 162 (0xa2) 0 (0x00)  CRC: 0xF0066F47
	388686336,	 // (0x172ae200) // 23 (0x17) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x62EEA198
	19552692,	 // (0x12a59b4) // 1 (0x01) 42 (0x2a) 89 (0x59) 180 (0xb4)  CRC: 0xF237B73A
	23044,	 // (0x5a04) // 0 (0x00) 0 (0x00) 90 (0x5a) 4 (0x04)  CRC: 0x91AFD9D4
	1622474752,	 // (0x60b50000) // 96 (0x60) 181 (0xb5) 0 (0x00) 0 (0x00)  CRC: 0x51A1B9F7
	55945215,	 // (0x355a7ff) // 3 (0x03) 85 (0x55) 167 (0xa7) 255 (0xff)  CRC: 0xC76007F4
	-407830528,	 // (0xe7b10000) // 231 (0xe7) 177 (0xb1)  CRC: 0x30B3D5A1
	817092001,	// CRC do Jardel: 0x30B3D5A1
	0,	//	synchronized?, exception table length
//	2764: charAt(I)C
	463142923,	 // (0x1b9b000b) // 27 (0x1b) 155 (0x9b) 0 (0x00) 11 (0x0b)  CRC: 0x94B9657F
	455783424,	 // (0x1b2ab400) // 27 (0x1b) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x6618C737
	10551308,	 // (0xa1000c) // 0 (0x00) 161 (0xa1) 0 (0x00) 12 (0x0c)  CRC: 0x23031266
	-1157625767,	 // (0xbb000859) // 187 (0xbb) 0 (0x00) 8 (0x08) 89 (0x59)  CRC: 0x15471243
	464977929,	 // (0x1bb70009) // 27 (0x1b) 183 (0xb7) 0 (0x00) 9 (0x09)  CRC: 0x6AA6D78D
	-1087708672,	 // (0xbf2ae200) // 191 (0xbf) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x3CBE1993
	18560172,	 // (0x11b34ac) // 1 (0x01) 27 (0x1b) 52 (0x34) 172 (0xac)  CRC: 0x3CBDF0F7
	1019080951,	// CRC do Jardel: 0x3CBDF0F7
	0,	//	synchronized?, exception table length
//	2773: getChars(II[CI)V
	463142928,	 // (0x1b9b0010) // 27 (0x1b) 155 (0x9b) 0 (0x00) 16 (0x10)  CRC: 0xFA3062B8
	472560640,	 // (0x1c2ab400) // 28 (0x1c) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0xEDE98899
	10682376,	 // (0xa30008) // 0 (0x00) 163 (0xa3) 0 (0x00) 8 (0x08)  CRC: 0x4C25E622
	471572992,	 // (0x1c1ba200) // 28 (0x1c) 27 (0x1b) 162 (0xa2) 0 (0x00)  CRC: 0xBBA03713
	196804616,	 // (0xbbb0008) // 11 (0x0b) 187 (0xbb) 0 (0x00) 8 (0x08)  CRC: 0x2BD6BBEA
	1505165323,	 // (0x59b7000b) // 89 (0x59) 183 (0xb7) 0 (0x00) 11 (0x0b)  CRC: 0x16DCCE8F
	-1087708672,	 // (0xbf2ae200) // 191 (0xbf) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x690D500E
	18558229,	 // (0x11b2d15) // 1 (0x01) 27 (0x1b) 45 (0x2d) 21 (0x15)  CRC: 0xF34E7298
	68950884,	 // (0x41c1b64) // 4 (0x04) 28 (0x1c) 27 (0x1b) 100 (0x64)  CRC: 0x3E011F9A
	-1207957583,	 // (0xb80007b1) // 184 (0xb8) 0 (0x00) 7 (0x07) 177 (0xb1)  CRC: 0x7B2A9BDB
	2066389979,	// CRC do Jardel: 0x7B2A9BDB
	0,	//	synchronized?, exception table length
//	2785: setCharAt(IC)V
	463142923,	 // (0x1b9b000b) // 27 (0x1b) 155 (0x9b) 0 (0x00) 11 (0x0b)  CRC: 0x94B9657F
	455783424,	 // (0x1b2ab400) // 27 (0x1b) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x6618C737
	10551308,	 // (0xa1000c) // 0 (0x00) 161 (0xa1) 0 (0x00) 12 (0x0c)  CRC: 0x23031266
	-1157625767,	 // (0xbb000859) // 187 (0xbb) 0 (0x00) 8 (0x08) 89 (0x59)  CRC: 0x15471243
	464977929,	 // (0x1bb70009) // 27 (0x1b) 183 (0xb7) 0 (0x00) 9 (0x09)  CRC: 0x6AA6D78D
	-1087755596,	 // (0xbf2a2ab4) // 191 (0xbf) 42 (0x2a) 42 (0x2a) 180 (0xb4)  CRC: 0x6FE805A1
	46592,	 // (0xb600) // 0 (0x00) 0 (0x00) 182 (0xb6) 0 (0x00)  CRC: 0xDDF67D93
	170582528,	 // (0xa2ae200) // 10 (0x0a) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xA277F68B
	18553941,	 // (0x11b1c55) // 1 (0x01) 27 (0x1b) 28 (0x1c) 85 (0x55)  CRC: 0x8F820F0D
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x99DC6AC0
	-1713608000,	// CRC do Jardel: 0x99DC6AC0
	0,	//	synchronized?, exception table length
//	2797: append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
	707512064,	 // (0x2a2bc700) // 42 (0x2a) 43 (0x2b) 199 (0xc7) 0 (0x00)  CRC: 0xF0DF6F44
	135400615,	 // (0x8120ca7) // 8 (0x08) 18 (0x12) 12 (0x0c) 167 (0xa7)  CRC: 0xD2509569
	469942,	 // (0x72bb6) // 0 (0x00) 7 (0x07) 43 (0x2b) 182 (0xb6)  CRC: 0xA754995C
	898560,	 // (0xdb600) // 0 (0x00) 13 (0x0d) 182 (0xb6) 0 (0x00)  CRC: 0x68367C68
	246415360,	 // (0xeb00000) // 14 (0x0e) 176 (0xb0)  CRC: 0x5AD9A026
	1524211750,	// CRC do Jardel: 0x5AD9A026
	0,	//	synchronized?, exception table length
//	2804: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
	734461958,	 // (0x2bc70006) // 43 (0x2b) 199 (0xc7) 0 (0x00) 6 (0x06)  CRC: 0x8782D3F3
	302795819,	 // (0x120c4c2b) // 18 (0x12) 12 (0x0c) 76 (0x4c) 43 (0x2b)  CRC: 0xF60F6BA8
	-1241513155,	 // (0xb600033d) // 182 (0xb6) 0 (0x00) 3 (0x03) 61 (0x3d)  CRC: 0x0E166C99
	707441664,	 // (0x2a2ab400) // 42 (0x2a) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0xF91A0EF5
	1859766,	 // (0x1c60b6) // 0 (0x00) 28 (0x1c) 96 (0x60) 182 (0xb6)  CRC: 0x4765212C
	666371,	 // (0xa2b03) // 0 (0x00) 10 (0x0a) 43 (0x2b) 3 (0x03)  CRC: 0xA4F47599
	472572416,	 // (0x1c2ae200) // 28 (0x1c) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xBBFA5579
	19575808,	 // (0x12ab400) // 1 (0x01) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x5434DECF
	11927556,	 // (0xb60004) // 0 (0x00) 182 (0xb6) 0 (0x00) 4 (0x04)  CRC: 0x89926366
	710521856,	 // (0x2a59b400) // 42 (0x2a) 89 (0x59) 180 (0xb4) 0 (0x00)  CRC: 0xA765DF29
	1859765,	 // (0x1c60b5) // 0 (0x00) 28 (0x1c) 96 (0x60) 181 (0xb5)  CRC: 0x467FB609
	10928,	 // (0x2ab0) // 0 (0x00) 0 (0x00) 42 (0x2a) 176 (0xb0)  CRC: 0xB29D6FE9
	-1298305047,	// CRC do Jardel: 0xB29D6FE9
	0,	//	synchronized?, exception table length
//	2818: append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;
	734461962,	 // (0x2bc7000a) // 43 (0x2b) 199 (0xc7) 0 (0x00) 10 (0x0a)  CRC: 0x029D07FC
	705825974,	 // (0x2a120cb6) // 42 (0x2a) 18 (0x12) 12 (0x0c) 182 (0xb6)  CRC: 0xBB9B4000
	962603,	 // (0xeb02b) // 0 (0x00) 14 (0x0e) 176 (0xb0) 43 (0x2b)  CRC: 0x48938157
	1498268203,	 // (0x594dc22b) // 89 (0x59) 77 (0x4d) 194 (0xc2) 43 (0x2b)  CRC: 0x01DC57D8
	-1275068354,	 // (0xb400003e) // 180 (0xb4) 0 (0x00) 0 (0x00) 62 (0x3e)  CRC: 0x89B4A5F1
	707441664,	 // (0x2a2ab400) // 42 (0x2a) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x86BA5A98
	1925302,	 // (0x1d60b6) // 0 (0x00) 29 (0x1d) 96 (0x60) 182 (0xb6)  CRC: 0xE2E23844
	666594,	 // (0xa2be2) // 0 (0x00) 10 (0x0a) 43 (0x2b) 226 (0xe2)  CRC: 0x22E29F6E
	66346,	 // (0x1032a) // 0 (0x00) 1 (0x01) 3 (0x03) 42 (0x2a)  CRC: 0x34321FCF
	-503316182,	 // (0xe200012a) // 226 (0xe2) 0 (0x00) 1 (0x01) 42 (0x2a)  CRC: 0xEEDFEA64
	-1275068387,	 // (0xb400001d) // 180 (0xb4) 0 (0x00) 0 (0x00) 29 (0x1d)  CRC: 0x5E0EE9AF
	-1207957718,	 // (0xb800072a) // 184 (0xb8) 0 (0x00) 7 (0x07) 42 (0x2a)  CRC: 0x5668F4B4
	1504968704,	 // (0x59b40000) // 89 (0x59) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x1031C0D4
	492877056,	 // (0x1d60b500) // 29 (0x1d) 96 (0x60) 181 (0xb5) 0 (0x00)  CRC: 0xC14C5217
	2933671,	 // (0x2cc3a7) // 0 (0x00) 44 (0x2c) 195 (0xc3) 167 (0xa7)  CRC: 0x50F164AD
	670212,	 // (0xa3a04) // 0 (0x00) 10 (0x0a) 58 (0x3a) 4 (0x04)  CRC: 0x02BA7441
	750983428,	 // (0x2cc31904) // 44 (0x2c) 195 (0xc3) 25 (0x19) 4 (0x04)  CRC: 0x0D1C09A6
	-1087721472,	 // (0xbf2ab000) // 191 (0xbf) 42 (0x2a) 176 (0xb0)  CRC: 0xBB060976
	-1157232266,	// CRC do Jardel: 0xBB060976
	2,	//	synchronized?, exception table length
	983099,	// start: 15	end: 59
	4063232,	// target: 62	type: 0
	4063298,	// start: 62	end: 66
	4063232,	// target: 62	type: 0
//	2842: append([C)Ljava/lang/StringBuilder;
	707461931,	 // (0x2a2b032b) // 42 (0x2a) 43 (0x2b) 3 (0x03) 43 (0x2b)  CRC: 0x1EB4D38D
	-1095368689,	 // (0xbeb6000f) // 190 (0xbe) 182 (0xb6) 0 (0x00) 15 (0x0f)  CRC: 0xC97BEF4E
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0xE5B2A5CD
	-441276979,	// CRC do Jardel: 0xE5B2A5CD
	0,	//	synchronized?, exception table length
//	2847: append([CII)Ljava/lang/StringBuilder;
	479920143,	 // (0x1c9b000f) // 28 (0x1c) 155 (0x9b) 0 (0x00) 15 (0x0f)  CRC: 0xF60B797F
	496697355,	 // (0x1d9b000b) // 29 (0x1d) 155 (0x9b) 0 (0x00) 11 (0x0b)  CRC: 0xD96AF817
	472628765,	 // (0x1c2bbe1d) // 28 (0x1c) 43 (0x2b) 190 (0xbe) 29 (0x1d)  CRC: 0x01AE4214
	1688469515,	 // (0x64a4000b) // 100 (0x64) 164 (0xa4) 0 (0x00) 11 (0x0b)  CRC: 0x7EAECC2A
	-1157625767,	 // (0xbb000859) // 187 (0xbb) 0 (0x00) 8 (0x08) 89 (0x59)  CRC: 0x088170EE
	-1224733761,	 // (0xb7000bbf) // 183 (0xb7) 0 (0x00) 11 (0x0b) 191 (0xbf)  CRC: 0x6D514CE3
	707441664,	 // (0x2a2ab400) // 42 (0x2a) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x3E2AF17D
	1925302,	 // (0x1d60b6) // 0 (0x00) 29 (0x1d) 96 (0x60) 182 (0xb6)  CRC: 0xD92FC2DC
	666396,	 // (0xa2b1c) // 0 (0x00) 10 (0x0a) 43 (0x2b) 28 (0x1c)  CRC: 0xBD1AEEED
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0xA25BD561
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x3B290B94
	498597895,	 // (0x1db80007) // 29 (0x1d) 184 (0xb8) 0 (0x00) 7 (0x07)  CRC: 0x27BADD9D
	710521856,	 // (0x2a59b400) // 42 (0x2a) 89 (0x59) 180 (0xb4) 0 (0x00)  CRC: 0x98AC13FA
	1925301,	 // (0x1d60b5) // 0 (0x00) 29 (0x1d) 96 (0x60) 181 (0xb5)  CRC: 0xE9ED6B06
	10928,	 // (0x2ab0) // 0 (0x00) 0 (0x00) 42 (0x2a) 176 (0xb0)  CRC: 0x1F3691C7
	523669959,	// CRC do Jardel: 0x1F3691C7
	0,	//	synchronized?, exception table length
//	2864: append(Z)Ljava/lang/StringBuilder;
	706451712,	 // (0x2a1b9900) // 42 (0x2a) 27 (0x1b) 153 (0x99) 0 (0x00)  CRC: 0xA19AA4EB
	135401639,	 // (0x81210a7) // 8 (0x08) 18 (0x12) 16 (0x10) 167 (0xa7)  CRC: 0xBE8FD0C1
	332305,	 // (0x51211) // 0 (0x00) 5 (0x05) 18 (0x12) 17 (0x11)  CRC: 0x4D29AE42
	-1241510224,	 // (0xb6000eb0) // 182 (0xb6) 0 (0x00) 14 (0x0e) 176 (0xb0)  CRC: 0x5A69C648
	1516881480,	// CRC do Jardel: 0x5A69C648
	0,	//	synchronized?, exception table length
//	2870: append(C)Ljava/lang/StringBuilder;
	707441664,	 // (0x2a2ab400) // 42 (0x2a) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x701B2241
	286902,	 // (0x460b6) // 0 (0x00) 4 (0x04) 96 (0x60) 182 (0xb6)  CRC: 0x1E30C535
	666338,	 // (0xa2ae2) // 0 (0x00) 10 (0x0a) 42 (0x2a) 226 (0xe2)  CRC: 0x42536854
	76377,	 // (0x12a59) // 0 (0x00) 1 (0x01) 42 (0x2a) 89 (0x59)  CRC: 0x6307B317
	-1275068326,	 // (0xb400005a) // 180 (0xb4) 0 (0x00) 0 (0x00) 90 (0x5a)  CRC: 0x018874D3
	73446656,	 // (0x460b500) // 4 (0x04) 96 (0x60) 181 (0xb5) 0 (0x00)  CRC: 0xA82419D2
	1791274,	 // (0x1b552a) // 0 (0x00) 27 (0x1b) 85 (0x55) 42 (0x2a)  CRC: 0xF37B2E9B
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0xAA322BC6
	-1439552570,	// CRC do Jardel: 0xAA322BC6
	0,	//	synchronized?, exception table length
//	2880: append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
	707461931,	 // (0x2a2b032b) // 42 (0x2a) 43 (0x2b) 3 (0x03) 43 (0x2b)  CRC: 0x1EB4D38D
	-1191181055,	 // (0xb9000501) // 185 (0xb9) 0 (0x00) 5 (0x05) 1 (0x01)  CRC: 0xBF2B970D
	11927570,	 // (0xb60012) // 0 (0x00) 182 (0xb6) 0 (0x00) 18 (0x12)  CRC: 0xE1B3452C
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0x4FBBB354
	1337701204,	// CRC do Jardel: 0x4FBBB354
	0,	//	synchronized?, exception table length
//	2886: append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
	734461962,	 // (0x2bc7000a) // 43 (0x2b) 199 (0xc7) 0 (0x00) 10 (0x0a)  CRC: 0x029D07FC
	705825974,	 // (0x2a120cb6) // 42 (0x2a) 18 (0x12) 12 (0x0c) 182 (0xb6)  CRC: 0xBB9B4000
	962589,	 // (0xeb01d) // 0 (0x00) 14 (0x0e) 176 (0xb0) 29 (0x1d)  CRC: 0x95818ED9
	476356096,	 // (0x1c649e00) // 28 (0x1c) 100 (0x64) 158 (0x9e) 0 (0x00)  CRC: 0x64B2898C
	841624244,	 // (0x322a2ab4) // 50 (0x32) 42 (0x2a) 42 (0x2a) 180 (0xb4)  CRC: 0x2E8CF33A
	7520,	 // (0x1d60) // 0 (0x00) 0 (0x00) 29 (0x1d) 96 (0x60)  CRC: 0x6279B680
	476362240,	 // (0x1c64b600) // 28 (0x1c) 100 (0x64) 182 (0xb6) 0 (0x00)  CRC: 0x752BAEA2
	169614754,	 // (0xa1c1da2) // 10 (0x0a) 28 (0x1c) 29 (0x1d) 162 (0xa2)  CRC: 0x7B849D16
	2173666,	 // (0x212ae2) // 0 (0x00) 33 (0x21) 42 (0x2a) 226 (0xe2)  CRC: 0x82A5CFDD
	76377,	 // (0x12a59) // 0 (0x00) 1 (0x01) 42 (0x2a) 89 (0x59)  CRC: 0x72E64FB8
	-1275068326,	 // (0xb400005a) // 180 (0xb4) 0 (0x00) 0 (0x00) 90 (0x5a)  CRC: 0x7F750D49
	73446656,	 // (0x460b500) // 4 (0x04) 96 (0x60) 181 (0xb5) 0 (0x00)  CRC: 0xCA20F0CF
	2825401,	 // (0x2b1cb9) // 0 (0x00) 43 (0x2b) 28 (0x1c) 185 (0xb9)  CRC: 0xCD5CD9BF
	393728,	 // (0x60200) // 0 (0x00) 6 (0x06) 2 (0x02) 0 (0x00)  CRC: 0xA45DA746
	1427899488,	 // (0x551c0460) // 85 (0x55) 28 (0x1c) 4 (0x04) 96 (0x60)  CRC: 0x643354C7
	1034420192,	 // (0x3da7ffe0) // 61 (0x3d) 167 (0xa7) 255 (0xff) 224 (0xe0)  CRC: 0x6E28A891
	716177408,	 // (0x2ab00000) // 42 (0x2a) 176 (0xb0)  CRC: 0x3B4340F4
	994263284,	// CRC do Jardel: 0x3B4340F4
	0,	//	synchronized?, exception table length
//	2905: append(I)Ljava/lang/StringBuilder;
	706459648,	 // (0x2a1bb800) // 42 (0x2a) 27 (0x1b) 184 (0xb8) 0 (0x00)  CRC: 0x9B57988C
	330694670,	 // (0x13b6000e) // 19 (0x13) 182 (0xb6) 0 (0x00) 14 (0x0e)  CRC: 0xCDAF24D8
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0x1D202F9D
	488648605,	// CRC do Jardel: 0x1D202F9D
	0,	//	synchronized?, exception table length
//	2910: append(J)Ljava/lang/StringBuilder;
	706678794,	 // (0x2a1f100a) // 42 (0x2a) 31 (0x1f) 16 (0x10) 10 (0x0a)  CRC: 0x4205BEAE
	-1207954250,	 // (0xb80014b6) // 184 (0xb8) 0 (0x00) 20 (0x14) 182 (0xb6)  CRC: 0x81D8F173
	962560,	 // (0xeb000) // 0 (0x00) 14 (0x0e) 176 (0xb0)  CRC: 0x9A386D45
	-1707578043,	// CRC do Jardel: 0x9A386D45
	0,	//	synchronized?, exception table length
//	2915: append(F)Ljava/lang/StringBuilder;
	706983936,	 // (0x2a23b800) // 42 (0x2a) 35 (0x23) 184 (0xb8) 0 (0x00)  CRC: 0x21ED76EB
	364249102,	 // (0x15b6000e) // 21 (0x15) 182 (0xb6) 0 (0x00) 14 (0x0e)  CRC: 0xD06A4144
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0xC9482AB8
	-918017352,	// CRC do Jardel: 0xC9482AB8
	0,	//	synchronized?, exception table length
//	2920: delete(II)Ljava/lang/StringBuilder;
	463142928,	 // (0x1b9b0010) // 27 (0x1b) 155 (0x9b) 0 (0x00) 16 (0x10)  CRC: 0xFA3062B8
	455783424,	 // (0x1b2ab400) // 27 (0x1b) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0xF3AED89C
	10682376,	 // (0xa30008) // 0 (0x00) 163 (0xa3) 0 (0x00) 8 (0x08)  CRC: 0xB7C6CD36
	454861824,	 // (0x1b1ca400) // 27 (0x1b) 28 (0x1c) 164 (0xa4) 0 (0x00)  CRC: 0x417A9E22
	213581832,	 // (0xcbb0008) // 12 (0x0c) 187 (0xbb) 0 (0x00) 8 (0x08)  CRC: 0xBA671637
	1494988544,	 // (0x591bb700) // 89 (0x59) 27 (0x1b) 183 (0xb7) 0 (0x00)  CRC: 0xF4428916
	163519530,	 // (0x9bf1c2a) // 9 (0x09) 191 (0xbf) 28 (0x1c) 42 (0x2a)  CRC: 0x79296EF9
	-1275068252,	 // (0xb40000a4) // 180 (0xb4) 0 (0x00) 0 (0x00) 164 (0xa4)  CRC: 0xE6ABC636
	535220,	 // (0x82ab4) // 0 (0x00) 8 (0x08) 42 (0x2a) 180 (0xb4)  CRC: 0x1573122A
	15658,	 // (0x3d2a) // 0 (0x00) 0 (0x00) 61 (0x3d) 42 (0x2a)  CRC: 0x83A2C6F3
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0xF077E18D
	-1241511382,	 // (0xb6000a2a) // 182 (0xb6) 0 (0x00) 10 (0x0a) 42 (0x2a)  CRC: 0x53D3D614
	-1275068388,	 // (0xb400001c) // 180 (0xb4) 0 (0x00) 0 (0x00) 28 (0x1c)  CRC: 0x76876FE2
	1687748630,	 // (0x64990016) // 100 (0x64) 153 (0x99) 0 (0x00) 22 (0x16)  CRC: 0xB7C3D9AA
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x42BDF400
	472572416,	 // (0x1c2ae200) // 28 (0x1c) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xC87EE1B6
	18557620,	 // (0x11b2ab4) // 1 (0x01) 27 (0x1b) 42 (0x2a) 180 (0xb4)  CRC: 0x5FC96D63
	7268,	 // (0x1c64) // 0 (0x00) 0 (0x00) 28 (0x1c) 100 (0x64)  CRC: 0xD85BEC9E
	-1207957718,	 // (0xb800072a) // 184 (0xb8) 0 (0x00) 7 (0x07) 42 (0x2a)  CRC: 0x1AB4CA0C
	1504968704,	 // (0x59b40000) // 89 (0x59) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x0E37C99D
	471557220,	 // (0x1c1b6464) // 28 (0x1c) 27 (0x1b) 100 (0x64) 100 (0x64)  CRC: 0x096636DF
	-1258291158,	 // (0xb500002a) // 181 (0xb5) 0 (0x00) 0 (0x00) 42 (0x2a)  CRC: 0x9578AC7F
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0xA79D7A05
	-1482851835,	// CRC do Jardel: 0xA79D7A05
	0,	//	synchronized?, exception table length
//	2945: deleteCharAt(I)Ljava/lang/StringBuilder;
	706419460,	 // (0x2a1b1b04) // 42 (0x2a) 27 (0x1b) 27 (0x1b) 4 (0x04)  CRC: 0x3288F260
	1622540310,	 // (0x60b60016) // 96 (0x60) 182 (0xb6) 0 (0x00) 22 (0x16)  CRC: 0x70ED60A9
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0x6AC40211
	1791230481,	// CRC do Jardel: 0x6AC40211
	0,	//	synchronized?, exception table length
//	2950: replace(IILjava/lang/String;)Ljava/lang/StringBuilder;
	463142928,	 // (0x1b9b0010) // 27 (0x1b) 155 (0x9b) 0 (0x00) 16 (0x10)  CRC: 0xFA3062B8
	455783424,	 // (0x1b2ab400) // 27 (0x1b) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0xF3AED89C
	10682376,	 // (0xa30008) // 0 (0x00) 163 (0xa3) 0 (0x00) 8 (0x08)  CRC: 0xB7C6CD36
	454861824,	 // (0x1b1ca400) // 27 (0x1b) 28 (0x1c) 164 (0xa4) 0 (0x00)  CRC: 0x417A9E22
	213581832,	 // (0xcbb0008) // 12 (0x0c) 187 (0xbb) 0 (0x00) 8 (0x08)  CRC: 0xBA671637
	1494988544,	 // (0x591bb700) // 89 (0x59) 27 (0x1b) 183 (0xb7) 0 (0x00)  CRC: 0xF4428916
	163524022,	 // (0x9bf2db6) // 9 (0x09) 191 (0xbf) 45 (0x2d) 182 (0xb6)  CRC: 0x8A835E5F
	210436,	 // (0x33604) // 0 (0x00) 3 (0x03) 54 (0x36) 4 (0x04)  CRC: 0x5F2A8682
	352590890,	 // (0x15041c2a) // 21 (0x15) 4 (0x04) 28 (0x1c) 42 (0x2a)  CRC: 0x571EB33B
	-1275068252,	 // (0xb40000a4) // 180 (0xb4) 0 (0x00) 0 (0x00) 164 (0xa4)  CRC: 0x8C354403
	666292,	 // (0xa2ab4) // 0 (0x00) 10 (0x0a) 42 (0x2a) 180 (0xb4)  CRC: 0xD1C8AEE4
	42752,	 // (0xa700) // 0 (0x00) 0 (0x00) 167 (0xa7) 0 (0x00)  CRC: 0x0160CA3E
	68969499,	 // (0x41c641b) // 4 (0x04) 28 (0x1c) 100 (0x64) 27 (0x1b)  CRC: 0x7873044B
	1614153002,	 // (0x6036052a) // 96 (0x60) 54 (0x36) 5 (0x05) 42 (0x2a)  CRC: 0xED1249D6
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x88ACE8D4
	352673974,	 // (0x150560b6) // 21 (0x15) 5 (0x05) 96 (0x60) 182 (0xb6)  CRC: 0x10758F1B
	660741,	 // (0xa1505) // 0 (0x00) 10 (0x0a) 21 (0x15) 5 (0x05)  CRC: 0x685962CD
	-1728044772,	 // (0x9900211c) // 153 (0x99) 0 (0x00) 33 (0x21) 28 (0x1c)  CRC: 0x44EEB3D4
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x846182A3
	-1577051862,	 // (0xa200192a) // 162 (0xa2) 0 (0x00) 25 (0x19) 42 (0x2a)  CRC: 0x0DC4C172
	-503316196,	 // (0xe200011c) // 226 (0xe2) 0 (0x00) 1 (0x01) 28 (0x1c)  CRC: 0x83708559
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0xF19573BA
	471139680,	 // (0x1c150560) // 28 (0x1c) 21 (0x15) 5 (0x05) 96 (0x60)  CRC: 0x13D9FF89
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x5A00FD58
	476362752,	 // (0x1c64b800) // 28 (0x1c) 100 (0x64) 184 (0xb8) 0 (0x00)  CRC: 0x4AF5B5A3
	120390421,	 // (0x72d0315) // 7 (0x07) 45 (0x2d) 3 (0x03) 21 (0x15)  CRC: 0x81E02A5E
	69919232,	 // (0x42ae200) // 4 (0x04) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x2E278375
	18593280,	 // (0x11bb600) // 1 (0x01) 27 (0x1b) 182 (0xb6) 0 (0x00)  CRC: 0xC8CDF6B2
	69884340,	 // (0x42a59b4) // 4 (0x04) 42 (0x2a) 89 (0x59) 180 (0xb4)  CRC: 0x04009B14
	5381,	 // (0x1505) // 0 (0x00) 0 (0x00) 21 (0x15) 5 (0x05)  CRC: 0xF236BEFA
	1622474752,	 // (0x60b50000) // 96 (0x60) 181 (0xb5) 0 (0x00) 0 (0x00)  CRC: 0x066AAC88
	716177408,	 // (0x2ab00000) // 42 (0x2a) 176 (0xb0)  CRC: 0xA7357C42
	-1489667006,	// CRC do Jardel: 0xA7357C42
	0,	//	synchronized?, exception table length
//	2984: substring(I)Ljava/lang/String;
	706423476,	 // (0x2a1b2ab4) // 42 (0x2a) 27 (0x1b) 42 (0x2a) 180 (0xb4)  CRC: 0xAED45038
	46592,	 // (0xb600) // 0 (0x00) 0 (0x00) 182 (0xb6) 0 (0x00)  CRC: 0x98A81863
	397410304,	 // (0x17b00000) // 23 (0x17) 176 (0xb0)  CRC: 0xAA49F93B
	-1437992645,	// CRC do Jardel: 0xAA49F93B
	0,	//	synchronized?, exception table length
//	2989: subSequence(II)Ljava/lang/CharSequence;
	706419894,	 // (0x2a1b1cb6) // 42 (0x2a) 27 (0x1b) 28 (0x1c) 182 (0xb6)  CRC: 0x3082CB63
	1552384,	 // (0x17b000) // 0 (0x00) 23 (0x17) 176 (0xb0)  CRC: 0x85C2C7BE
	-2050832450,	// CRC do Jardel: 0x85C2C7BE
	0,	//	synchronized?, exception table length
//	2993: substring(II)Ljava/lang/String;
	471557182,	 // (0x1c1b643e) // 28 (0x1c) 27 (0x1b) 100 (0x64) 62 (0x3e)  CRC: 0xFF4B533E
	463142928,	 // (0x1b9b0010) // 27 (0x1b) 155 (0x9b) 0 (0x00) 16 (0x10)  CRC: 0xC49717A4
	472560640,	 // (0x1c2ab400) // 28 (0x1c) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x84CDEAF0
	10682376,	 // (0xa30008) // 0 (0x00) 163 (0xa3) 0 (0x00) 8 (0x08)  CRC: 0x2154E23A
	471572992,	 // (0x1c1ba200) // 28 (0x1c) 27 (0x1b) 162 (0xa2) 0 (0x00)  CRC: 0xA7796DB9
	196804616,	 // (0xbbb0008) // 11 (0x0b) 187 (0xbb) 0 (0x00) 8 (0x08)  CRC: 0x743F8A13
	1505165323,	 // (0x59b7000b) // 89 (0x59) 183 (0xb7) 0 (0x00) 11 (0x0b)  CRC: 0x325C4EE8
	-1088579072,	 // (0xbf1d9a00) // 191 (0xbf) 29 (0x1d) 154 (0x9a) 0 (0x00)  CRC: 0x7A659957
	101849264,	 // (0x61218b0) // 6 (0x06) 18 (0x12) 24 (0x18) 176 (0xb0)  CRC: 0x6CB76CC1
	-1157621415,	 // (0xbb001959) // 187 (0xbb) 0 (0x00) 25 (0x19) 89 (0x59)  CRC: 0x0187120A
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x8246AB14
	454932224,	 // (0x1b1db700) // 27 (0x1b) 29 (0x1d) 183 (0xb7) 0 (0x00)  CRC: 0xC821F425
	447741952,	 // (0x1ab00000) // 26 (0x1a) 176 (0xb0)  CRC: 0x5CCD94ED
	1556976877,	// CRC do Jardel: 0x5CCD94ED
	0,	//	synchronized?, exception table length
//	3008: insert(I[CII)Ljava/lang/StringBuilder;
	463142941,	 // (0x1b9b001d) // 27 (0x1b) 155 (0x9b) 0 (0x00) 29 (0x1d)  CRC: 0xA3422C00
	455783424,	 // (0x1b2ab400) // 27 (0x1b) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x16C5B7F7
	10682389,	 // (0xa30015) // 0 (0x00) 163 (0xa3) 0 (0x00) 21 (0x15)  CRC: 0x3E3AD903
	352623360,	 // (0x15049b00) // 21 (0x15) 4 (0x04) 155 (0x9b) 0 (0x00)  CRC: 0x6A1AF241
	270375680,	 // (0x101d9b00) // 16 (0x10) 29 (0x1d) 155 (0x9b) 0 (0x00)  CRC: 0xB13C801A
	203238590,	 // (0xc1d2cbe) // 12 (0x0c) 29 (0x1d) 44 (0x2c) 190 (0xbe)  CRC: 0x21DDD87F
	352609444,	 // (0x150464a4) // 21 (0x15) 4 (0x04) 100 (0x64) 164 (0xa4)  CRC: 0x5C72657D
	768768,	 // (0xbbb00) // 0 (0x00) 11 (0x0b) 187 (0xbb) 0 (0x00)  CRC: 0xE97AFEAC
	140097280,	 // (0x859b700) // 8 (0x08) 89 (0x59) 183 (0xb7) 0 (0x00)  CRC: 0x5D5241F1
	197077546,	 // (0xbbf2a2a) // 11 (0x0b) 191 (0xbf) 42 (0x2a) 42 (0x2a)  CRC: 0xB489D6CE
	-1275068395,	 // (0xb4000015) // 180 (0xb4) 0 (0x00) 0 (0x00) 21 (0x15)  CRC: 0x8A5A3134
	73446912,	 // (0x460b600) // 4 (0x04) 96 (0x60) 182 (0xb6) 0 (0x00)  CRC: 0x1CE5F259
	170582528,	 // (0xa2ae200) // 10 (0x0a) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x5B075F72
	18557666,	 // (0x11b2ae2) // 1 (0x01) 27 (0x1b) 42 (0x2a) 226 (0xe2)  CRC: 0x4463C86A
	72469,	 // (0x11b15) // 0 (0x00) 1 (0x01) 27 (0x1b) 21 (0x15)  CRC: 0xBCAF1C32
	73411252,	 // (0x4602ab4) // 4 (0x04) 96 (0x60) 42 (0x2a) 180 (0xb4)  CRC: 0x636A46B1
	7012,	 // (0x1b64) // 0 (0x00) 0 (0x00) 27 (0x1b) 100 (0x64)  CRC: 0x5081689F
	-1207957716,	 // (0xb800072c) // 184 (0xb8) 0 (0x00) 7 (0x07) 44 (0x2c)  CRC: 0xCCBD7847
	489349632,	 // (0x1d2ae200) // 29 (0x1d) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x347DA7DB
	18552068,	 // (0x11b1504) // 1 (0x01) 27 (0x1b) 21 (0x15) 4 (0x04)  CRC: 0x1D053423
	-1207957718,	 // (0xb800072a) // 184 (0xb8) 0 (0x00) 7 (0x07) 42 (0x2a)  CRC: 0x794EB054
	1504968704,	 // (0x59b40000) // 89 (0x59) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0xE1BDF02A
	352608437,	 // (0x150460b5) // 21 (0x15) 4 (0x04) 96 (0x60) 181 (0xb5)  CRC: 0x8F1BC905
	10928,	 // (0x2ab0) // 0 (0x00) 0 (0x00) 42 (0x2a) 176 (0xb0)  CRC: 0x538CA415
	1401725973,	// CRC do Jardel: 0x538CA415
	0,	//	synchronized?, exception table length
//	3034: insert(ILjava/lang/Object;)Ljava/lang/StringBuilder;
	706424007,	 // (0x2a1b2cc7) // 42 (0x2a) 27 (0x1b) 44 (0x2c) 199 (0xc7)  CRC: 0x069EF243
	528908,	 // (0x8120c) // 0 (0x00) 8 (0x08) 18 (0x12) 12 (0x0c)  CRC: 0x4046B765
	-1493170388,	 // (0xa700072c) // 167 (0xa7) 0 (0x00) 7 (0x07) 44 (0x2c)  CRC: 0x18AF2FCC
	-1241510474,	 // (0xb6000db6) // 182 (0xb6) 0 (0x00) 13 (0x0d) 182 (0xb6)  CRC: 0xF3E2CD6B
	1814528,	 // (0x1bb000) // 0 (0x00) 27 (0x1b) 176 (0xb0)  CRC: 0xD3CC595D
	-741582499,	// CRC do Jardel: 0xD3CC595D
	0,	//	synchronized?, exception table length
//	3041: insert(ILjava/lang/String;)Ljava/lang/StringBuilder;
	463142923,	 // (0x1b9b000b) // 27 (0x1b) 155 (0x9b) 0 (0x00) 11 (0x0b)  CRC: 0x94B9657F
	455783424,	 // (0x1b2ab400) // 27 (0x1b) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x6618C737
	10747916,	 // (0xa4000c) // 0 (0x00) 164 (0xa4) 0 (0x00) 12 (0x0c)  CRC: 0xB43EF213
	-1157625767,	 // (0xbb000859) // 187 (0xbb) 0 (0x00) 8 (0x08) 89 (0x59)  CRC: 0x62CF2ADB
	464977929,	 // (0x1bb70009) // 27 (0x1b) 183 (0xb7) 0 (0x00) 9 (0x09)  CRC: 0xE1F6CD18
	-1087584512,	 // (0xbf2cc700) // 191 (0xbf) 44 (0x2c) 199 (0xc7) 0 (0x00)  CRC: 0xB82EC03C
	101846093,	 // (0x6120c4d) // 6 (0x06) 18 (0x12) 12 (0x0c) 77 (0x4d)  CRC: 0x7AE5D3C8
	750125059,	 // (0x2cb60003) // 44 (0x2c) 182 (0xb6) 0 (0x00) 3 (0x03)  CRC: 0x6ECEFF3B
	1042950836,	 // (0x3e2a2ab4) // 62 (0x3e) 42 (0x2a) 42 (0x2a) 180 (0xb4)  CRC: 0x3078D45D
	7520,	 // (0x1d60) // 0 (0x00) 0 (0x00) 29 (0x1d) 96 (0x60)  CRC: 0xB26631F7
	-1241511382,	 // (0xb6000a2a) // 182 (0xb6) 0 (0x00) 10 (0x0a) 42 (0x2a)  CRC: 0x3E2DEE99
	-503316197,	 // (0xe200011b) // 226 (0xe2) 0 (0x00) 1 (0x01) 27 (0x1b)  CRC: 0x3FCB7E07
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x46767536
	454909994,	 // (0x1b1d602a) // 27 (0x1b) 29 (0x1d) 96 (0x60) 42 (0x2a)  CRC: 0xE5FF08C2
	-1275068389,	 // (0xb400001b) // 180 (0xb4) 0 (0x00) 0 (0x00) 27 (0x1b)  CRC: 0x945B30B6
	1689780231,	 // (0x64b80007) // 100 (0x64) 184 (0xb8) 0 (0x00) 7 (0x07)  CRC: 0x4655319C
	738401578,	 // (0x2c031d2a) // 44 (0x2c) 3 (0x03) 29 (0x1d) 42 (0x2a)  CRC: 0xEB35F917
	-503316197,	 // (0xe200011b) // 226 (0xe2) 0 (0x00) 1 (0x01) 27 (0x1b)  CRC: 0x7EE1219B
	-1241512918,	 // (0xb600042a) // 182 (0xb6) 0 (0x00) 4 (0x04) 42 (0x2a)  CRC: 0xA674DA01
	1504968704,	 // (0x59b40000) // 89 (0x59) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x8BD2345D
	492877056,	 // (0x1d60b500) // 29 (0x1d) 96 (0x60) 181 (0xb5) 0 (0x00)  CRC: 0x57FB474D
	2797568,	 // (0x2ab000) // 0 (0x00) 42 (0x2a) 176 (0xb0)  CRC: 0x39D9FC05
	970587141,	// CRC do Jardel: 0x39D9FC05
	0,	//	synchronized?, exception table length
//	3065: insert(I[C)Ljava/lang/StringBuilder;
	706423811,	 // (0x2a1b2c03) // 42 (0x2a) 27 (0x1b) 44 (0x2c) 3 (0x03)  CRC: 0x0D9E130E
	750695936,	 // (0x2cbeb600) // 44 (0x2c) 190 (0xbe) 182 (0xb6) 0 (0x00)  CRC: 0x42597A77
	481296384,	 // (0x1cb00000) // 28 (0x1c) 176 (0xb0)  CRC: 0x672BFDFC
	1730936316,	// CRC do Jardel: 0x672BFDFC
	0,	//	synchronized?, exception table length
//	3070: insert(IZ)Ljava/lang/StringBuilder;
	706419865,	 // (0x2a1b1c99) // 42 (0x2a) 27 (0x1b) 28 (0x1c) 153 (0x99)  CRC: 0x3F03EBF3
	528912,	 // (0x81210) // 0 (0x00) 8 (0x08) 18 (0x12) 16 (0x10)  CRC: 0x06AA4296
	-1493170926,	 // (0xa7000512) // 167 (0xa7) 0 (0x00) 5 (0x05) 18 (0x12)  CRC: 0x662B130F
	297140251,	 // (0x11b6001b) // 17 (0x11) 182 (0xb6) 0 (0x00) 27 (0x1b)  CRC: 0xE7A8C15F
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0xB42D4C46
	-1272099770,	// CRC do Jardel: 0xB42D4C46
	0,	//	synchronized?, exception table length
//	3077: insert(IC)Ljava/lang/StringBuilder;
	463142923,	 // (0x1b9b000b) // 27 (0x1b) 155 (0x9b) 0 (0x00) 11 (0x0b)  CRC: 0x94B9657F
	455783424,	 // (0x1b2ab400) // 27 (0x1b) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x6618C737
	10747916,	 // (0xa4000c) // 0 (0x00) 164 (0xa4) 0 (0x00) 12 (0x0c)  CRC: 0xB43EF213
	-1157625767,	 // (0xbb000859) // 187 (0xbb) 0 (0x00) 8 (0x08) 89 (0x59)  CRC: 0x62CF2ADB
	464977929,	 // (0x1bb70009) // 27 (0x1b) 183 (0xb7) 0 (0x00) 9 (0x09)  CRC: 0xE1F6CD18
	-1087755596,	 // (0xbf2a2ab4) // 191 (0xbf) 42 (0x2a) 42 (0x2a) 180 (0xb4)  CRC: 0x3301EDD3
	1120,	 // (0x0460) // 0 (0x00) 0 (0x00) 4 (0x04) 96 (0x60)  CRC: 0xA20E5DE6
	-1241511382,	 // (0xb6000a2a) // 182 (0xb6) 0 (0x00) 10 (0x0a) 42 (0x2a)  CRC: 0x6C9BE874
	-503316197,	 // (0xe200011b) // 226 (0xe2) 0 (0x00) 1 (0x01) 27 (0x1b)  CRC: 0x7A7E0426
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x3C628129
	453271594,	 // (0x1b04602a) // 27 (0x1b) 4 (0x04) 96 (0x60) 42 (0x2a)  CRC: 0xFC4B7E62
	-1275068389,	 // (0xb400001b) // 180 (0xb4) 0 (0x00) 0 (0x00) 27 (0x1b)  CRC: 0xEE2E9E75
	1689780231,	 // (0x64b80007) // 100 (0x64) 184 (0xb8) 0 (0x00) 7 (0x07)  CRC: 0x043DB989
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0xDBA06F88
	454841642,	 // (0x1b1c552a) // 27 (0x1b) 28 (0x1c) 85 (0x55) 42 (0x2a)  CRC: 0x273CFB0B
	1504968704,	 // (0x59b40000) // 89 (0x59) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x5487F723
	73446656,	 // (0x460b500) // 4 (0x04) 96 (0x60) 181 (0xb5) 0 (0x00)  CRC: 0x5CAA2B79
	2797568,	 // (0x2ab000) // 0 (0x00) 42 (0x2a) 176 (0xb0)  CRC: 0xA382B08B
	-1551716213,	// CRC do Jardel: 0xA382B08B
	0,	//	synchronized?, exception table length
//	3097: insert(II)Ljava/lang/StringBuilder;
	706419896,	 // (0x2a1b1cb8) // 42 (0x2a) 27 (0x1b) 28 (0x1c) 184 (0xb8)  CRC: 0x098737B5
	1291776,	 // (0x13b600) // 0 (0x00) 19 (0x13) 182 (0xb6) 0 (0x00)  CRC: 0xCDBC0730
	464519168,	 // (0x1bb00000) // 27 (0x1b) 176 (0xb0)  CRC: 0xDB305892
	-617588590,	// CRC do Jardel: 0xDB305892
	0,	//	synchronized?, exception table length
//	3102: insert(IJ)Ljava/lang/StringBuilder;
	706420752,	 // (0x2a1b2010) // 42 (0x2a) 27 (0x1b) 32 (0x20) 16 (0x10)  CRC: 0x935A5AE7
	179830804,	 // (0xab80014) // 10 (0x0a) 184 (0xb8) 0 (0x00) 20 (0x14)  CRC: 0x6B4EABA7
	-1241506896,	 // (0xb6001bb0) // 182 (0xb6) 0 (0x00) 27 (0x1b) 176 (0xb0)  CRC: 0x663B695C
	1715169628,	// CRC do Jardel: 0x663B695C
	0,	//	synchronized?, exception table length
//	3107: insert(IF)Ljava/lang/StringBuilder;
	706421944,	 // (0x2a1b24b8) // 42 (0x2a) 27 (0x1b) 36 (0x24) 184 (0xb8)  CRC: 0x21DD0B1D
	1422848,	 // (0x15b600) // 0 (0x00) 21 (0x15) 182 (0xb6) 0 (0x00)  CRC: 0x7505C693
	464519168,	 // (0x1bb00000) // 27 (0x1b) 176 (0xb0)  CRC: 0xB1AA40A7
	-1314242393,	// CRC do Jardel: 0xB1AA40A7
	0,	//	synchronized?, exception table length
//	3112: indexOf(Ljava/lang/String;)I
	707462070,	 // (0x2a2b03b6) // 42 (0x2a) 43 (0x2b) 3 (0x03) 182 (0xb6)  CRC: 0x16348D8B
	1944576,	 // (0x1dac00) // 0 (0x00) 29 (0x1d) 172 (0xac)  CRC: 0x1878CEB3
	410570419,	// CRC do Jardel: 0x1878CEB3
	0,	//	synchronized?, exception table length
//	3116: indexOf(Ljava/lang/String;I)I
	479985669,	 // (0x1c9c0005) // 28 (0x1c) 156 (0x9c) 0 (0x00) 5 (0x05)  CRC: 0x8434B7D6
	54340276,	 // (0x33d2ab4) // 3 (0x03) 61 (0x3d) 42 (0x2a) 180 (0xb4)  CRC: 0xA409094F
	11190,	 // (0x2bb6) // 0 (0x00) 0 (0x00) 43 (0x2b) 182 (0xb6)  CRC: 0x273283D0
	222270,	 // (0x3643e) // 0 (0x00) 3 (0x03) 100 (0x64) 62 (0x3e)  CRC: 0x2EF6BECD
	471704320,	 // (0x1c1da300) // 28 (0x1c) 29 (0x1d) 163 (0xa3) 0 (0x00)  CRC: 0x7B69AA3F
	355081259,	 // (0x152a1c2b) // 21 (0x15) 42 (0x2a) 28 (0x1c) 43 (0x2b)  CRC: 0x452C6293
	-1224728935,	 // (0xb7001e99) // 183 (0xb7) 0 (0x00) 30 (0x1e) 153 (0x99)  CRC: 0x6AE05123
	335020,	 // (0x51cac) // 0 (0x00) 5 (0x05) 28 (0x1c) 172 (0xac)  CRC: 0x830C63AF
	470048829,	 // (0x1c04603d) // 28 (0x1c) 4 (0x04) 96 (0x60) 61 (0x3d)  CRC: 0x20D0422A
	-1476400126,	 // (0xa7ffec02) // 167 (0xa7) 255 (0xff) 236 (0xec) 2 (0x02)  CRC: 0x8E01502B
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0xB8672AF8
	-1201198344,	// CRC do Jardel: 0xB8672AF8
	0,	//	synchronized?, exception table length
//	3129: lastIndexOf(Ljava/lang/String;)I
	707472052,	 // (0x2a2b2ab4) // 42 (0x2a) 43 (0x2b) 42 (0x2a) 180 (0xb4)  CRC: 0x9E26FD0D
	11190,	 // (0x2bb6) // 0 (0x00) 0 (0x00) 43 (0x2b) 182 (0xb6)  CRC: 0xC4FC984D
	222390,	 // (0x364b6) // 0 (0x00) 3 (0x03) 100 (0x64) 182 (0xb6)  CRC: 0xE0D895B8
	2075648,	 // (0x1fac00) // 0 (0x00) 31 (0x1f) 172 (0xac)  CRC: 0xF9CA45F6
	-104184330,	// CRC do Jardel: 0xF9CA45F6
	0,	//	synchronized?, exception table length
//	3135: lastIndexOf(Ljava/lang/String;I)I
	472560640,	 // (0x1c2ab400) // 28 (0x1c) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0xBEAF0263
	2864640,	 // (0x2bb600) // 0 (0x00) 43 (0x2b) 182 (0xb6) 0 (0x00)  CRC: 0x499DFEB0
	56932352,	 // (0x364b800) // 3 (0x03) 100 (0x64) 184 (0xb8) 0 (0x00)  CRC: 0xC12129E2
	540875931,	 // (0x203d1c9b) // 32 (0x20) 61 (0x3d) 28 (0x1c) 155 (0x9b)  CRC: 0x4C6A3E5B
	1387036,	 // (0x152a1c) // 0 (0x00) 21 (0x15) 42 (0x2a) 28 (0x1c)  CRC: 0xDBF0D6F7
	733413406,	 // (0x2bb7001e) // 43 (0x2b) 183 (0xb7) 0 (0x00) 30 (0x1e)  CRC: 0xFCE40A11
	-1728051940,	 // (0x9900051c) // 153 (0x99) 0 (0x00) 5 (0x05) 28 (0x1c)  CRC: 0x58126595
	-1407450528,	 // (0xac1c0260) // 172 (0xac) 28 (0x1c) 2 (0x02) 96 (0x60)  CRC: 0x2683E540
	1034420205,	 // (0x3da7ffed) // 61 (0x3d) 167 (0xa7) 255 (0xff) 237 (0xed)  CRC: 0x87B6412F
	44826624,	 // (0x2ac0000) // 2 (0x02) 172 (0xac)  CRC: 0x238C2292
	596386450,	// CRC do Jardel: 0x238C2292
	0,	//	synchronized?, exception table length
//	3147: reverse()Ljava/lang/StringBuilder;
	707441664,	 // (0x2a2ab400) // 42 (0x2a) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x701B2241
	11927562,	 // (0xb6000a) // 0 (0x00) 182 (0xb6) 0 (0x00) 10 (0x0a)  CRC: 0x7F861DF7
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x1B2B94FE
	75119658,	 // (0x47a3c2a) // 4 (0x04) 122 (0x7a) 60 (0x3c) 42 (0x2a)  CRC: 0xF3D42BD9
	-1275068389,	 // (0xb400001b) // 180 (0xb4) 0 (0x00) 0 (0x00) 27 (0x1b)  CRC: 0xA10B017C
	1681726210,	 // (0x643d1b02) // 100 (0x64) 61 (0x3d) 27 (0x1b) 2 (0x02)  CRC: 0xA475F8F4
	1614551963,	 // (0x603c1b9b) // 96 (0x60) 60 (0x3c) 27 (0x1b) 155 (0x9b)  CRC: 0x0F4AEB06
	2370274,	 // (0x242ae2) // 0 (0x00) 36 (0x24) 42 (0x2a) 226 (0xe2)  CRC: 0xED9BD06F
	72500,	 // (0x11b34) // 0 (0x00) 1 (0x01) 27 (0x1b) 52 (0x34)  CRC: 0xDC5854E7
	1042997760,	 // (0x3e2ae200) // 62 (0x3e) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xEF3BF4A9
	18557666,	 // (0x11b2ae2) // 1 (0x01) 27 (0x1b) 42 (0x2a) 226 (0xe2)  CRC: 0xCCE92E23
	72756,	 // (0x11c34) // 0 (0x00) 1 (0x01) 28 (0x1c) 52 (0x34)  CRC: 0x21FEE16C
	1428873728,	 // (0x552ae200) // 85 (0x55) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xEF3BF7D8
	18619733,	 // (0x11c1d55) // 1 (0x01) 28 (0x1c) 29 (0x1d) 85 (0x55)  CRC: 0xE9B5B8FB
	470048829,	 // (0x1c04603d) // 28 (0x1c) 4 (0x04) 96 (0x60) 61 (0x3d)  CRC: 0xDBA5196F
	-1476404694,	 // (0xa7ffda2a) // 167 (0xa7) 255 (0xff) 218 (0xda) 42 (0x2a)  CRC: 0x90224625
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0xFF1E5A4F
	-14788017,	// CRC do Jardel: 0xFF1E5A4F
	0,	//	synchronized?, exception table length
//	3166: toString()Ljava/lang/String;
	-1157621415,	 // (0xbb001959) // 187 (0xbb) 0 (0x00) 25 (0x19) 89 (0x59)  CRC: 0x8762F99B
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x798BA6B4
	53130240,	 // (0x32ab400) // 3 (0x03) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x2AA1E59F
	11993114,	 // (0xb7001a) // 0 (0x00) 183 (0xb7) 0 (0x00) 26 (0x1a)  CRC: 0x27D1FBC6
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0x81EDEB18
	-2115114216,	// CRC do Jardel: 0x81EDEB18
	0,	//	synchronized?, exception table length
//	3173: regionMatches(ILjava/lang/String;)Z
	750125059,	 // (0x2cb60003) // 44 (0x2c) 182 (0xb6) 0 (0x00) 3 (0x03)  CRC: 0x9AF055E1
	1040397828,	 // (0x3e033604) // 62 (0x3e) 3 (0x03) 54 (0x36) 4 (0x04)  CRC: 0x6B4CDB97
	486694974,	 // (0x1d02603e) // 29 (0x1d) 2 (0x02) 96 (0x60) 62 (0x3e)  CRC: 0x7961B6F1
	496697374,	 // (0x1d9b001e) // 29 (0x1d) 155 (0x9b) 0 (0x00) 30 (0x1e)  CRC: 0xA6ED1D74
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0xF33C2240
	454755424,	 // (0x1b1b0460) // 27 (0x1b) 27 (0x1b) 4 (0x04) 96 (0x60)  CRC: 0x22A0D1A5
	1010052117,	 // (0x3c342c15) // 60 (0x3c) 52 (0x34) 44 (0x2c) 21 (0x15)  CRC: 0x970EA98B
	68486148,	 // (0x4150404) // 4 (0x04) 21 (0x15) 4 (0x04) 4 (0x04)  CRC: 0x10A0D5E3
	1614152886,	 // (0x603604b6) // 96 (0x60) 54 (0x36) 4 (0x04) 182 (0xb6)  CRC: 0xA90C655A
	2203647,	 // (0x219fff) // 0 (0x00) 33 (0x21) 159 (0x9f) 255 (0xff)  CRC: 0x46229767
	-503075836,	 // (0xe203ac04) // 226 (0xe2) 3 (0x03) 172 (0xac) 4 (0x04)  CRC: 0x22799D81
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x2F1C0F58
	790368088,	// CRC do Jardel: 0x2F1C0F58
	0,	//	synchronized?, exception table length
//	3187: trimToSize()V
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0xEFA16312
	-1096679395,	 // (0xbea2001d) // 190 (0xbe) 162 (0xa2) 0 (0x00) 29 (0x1d)  CRC: 0xD5792946
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x69D15AE9
	-1140503510,	 // (0xbc054c2a) // 188 (0xbc) 5 (0x05) 76 (0x4c) 42 (0x2a)  CRC: 0xCB05D973
	-503316221,	 // (0xe2000103) // 226 (0xe2) 0 (0x00) 1 (0x01) 3 (0x03)  CRC: 0x236B0C3E
	721627828,	 // (0x2b032ab4) // 43 (0x2b) 3 (0x03) 42 (0x2a) 180 (0xb4)  CRC: 0xDCD0EEA1
	47104,	 // (0xb800) // 0 (0x00) 0 (0x00) 184 (0xb8) 0 (0x00)  CRC: 0x3F1CB443
	120204259,	 // (0x72a2be3) // 7 (0x07) 42 (0x2a) 43 (0x2b) 227 (0xe3)  CRC: 0xFCABF235
	110848,	 // (0x1b100) // 0 (0x00) 1 (0x01) 177 (0xb1)  CRC: 0xBDCDA79A
	-1110595686,	// CRC do Jardel: 0xBDCDA79A
	0,	//	synchronized?, exception table length
//	java.lang.Error
//	3199: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	3203: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	3207: <init>(Ljava/lang/String;Ljava/lang/Throwable;)V
	707472567,	 // (0x2a2b2cb7) // 42 (0x2a) 43 (0x2b) 44 (0x2c) 183 (0xb7)  CRC: 0xFA82A471
	241920,	 // (0x3b100) // 0 (0x00) 3 (0x03) 177 (0xb1)  CRC: 0x7A9B4B44
	2056997700,	// CRC do Jardel: 0x7A9B4B44
	0,	//	synchronized?, exception table length
//	3211: <init>(Ljava/lang/Throwable;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	78708736,	 // (0x4b10000) // 4 (0x04) 177 (0xb1)  CRC: 0xD46C10C9
	-731115319,	// CRC do Jardel: 0xD46C10C9
	0,	//	synchronized?, exception table length
//	joprt.RtThread
//	3215: initClass()V
	-1207959119,	 // (0xb80001b1) // 184 (0xb8) 0 (0x00) 1 (0x01) 177 (0xb1)  CRC: 0xFD9800B9
	-40369991,	// CRC do Jardel: 0xFD9800B9
	0,	//	synchronized?, exception table length
//	3218: <init>(II)V
	706419715,	 // (0x2a1b1c03) // 42 (0x2a) 27 (0x1b) 28 (0x1c) 3 (0x03)  CRC: 0x2B014B9E
	-1224736079,	 // (0xb70002b1) // 183 (0xb7) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0x156463C6
	358900678,	// CRC do Jardel: 0x156463C6
	0,	//	synchronized?, exception table length
//	3222: <init>(III)V
	716636163,	 // (0x2ab70003) // 42 (0x2a) 183 (0xb7) 0 (0x00) 3 (0x03)  CRC: 0x526FD98F
	716898308,	 // (0x2abb0004) // 42 (0x2a) 187 (0xbb) 0 (0x00) 4 (0x04)  CRC: 0x87E5B2A7
	1495931676,	 // (0x592a1b1c) // 89 (0x59) 42 (0x2a) 27 (0x1b) 28 (0x1c)  CRC: 0xD338D2FA
	498532357,	 // (0x1db70005) // 29 (0x1d) 183 (0xb7) 0 (0x00) 5 (0x05)  CRC: 0x456214FC
	-486539087,	 // (0xe30000b1) // 227 (0xe3) 0 (0x00) 0 (0x00) 177 (0xb1)  CRC: 0x7959BE46
	2035924550,	// CRC do Jardel: 0x7959BE46
	0,	//	synchronized?, exception table length
//	3229: run()V
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xB9FF90C9
	-1174433591,	// CRC do Jardel: 0xB9FF90C9
	0,	//	synchronized?, exception table length
//	3232: startMission()V
	-1207957839,	 // (0xb80006b1) // 184 (0xb8) 0 (0x00) 6 (0x06) 177 (0xb1)  CRC: 0xF893472C
	-124565716,	// CRC do Jardel: 0xF893472C
	0,	//	synchronized?, exception table length
//	3235: waitForNextPeriod()Z
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xF4327CCB
	-1241512020,	 // (0xb60007ac) // 182 (0xb6) 0 (0x00) 7 (0x07) 172 (0xac)  CRC: 0x90695B41
	-1872143551,	// CRC do Jardel: 0x90695B41
	0,	//	synchronized?, exception table length
//	3239: setProcessor(I)V
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xF4327CCB
	464912392,	 // (0x1bb60008) // 27 (0x1b) 182 (0xb6) 0 (0x00) 8 (0x08)  CRC: 0x32D231EB
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x9057A18D
	-1873305203,	// CRC do Jardel: 0x9057A18D
	0,	//	synchronized?, exception table length
//	3244: currentRtThread()Ljoprt/RtThread;
	-1207957072,	 // (0xb80009b0) // 184 (0xb8) 0 (0x00) 9 (0x09) 176 (0xb0)  CRC: 0x2F30FE36
	791739958,	// CRC do Jardel: 0x2F30FE36
	0,	//	synchronized?, exception table length
//	3247: sleepMs(I)V
	448266250,	 // (0x1ab8000a) // 26 (0x1a) 184 (0xb8) 0 (0x00) 10 (0x0a)  CRC: 0x1E5D8B8A
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x2899208E
	681123982,	// CRC do Jardel: 0x2899208E
	0,	//	synchronized?, exception table length
//	3251: busyWait(I)V
	448266251,	 // (0x1ab8000b) // 26 (0x1a) 184 (0xb8) 0 (0x00) 11 (0x0b)  CRC: 0xC230113D
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x7338FC44
	1933114436,	// CRC do Jardel: 0x7338FC44
	0,	//	synchronized?, exception table length
//	com.jopdesign.io.SysDevice
//	3255: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	com.jopdesign.io.HardwareObject
//	3259: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	java.lang.NumberFormatException
//	3263: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	3267: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	com.jopdesign.sys.GC
//	3271: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	3275: init(II)V
	464715853,	 // (0x1bb3004d) // 27 (0x1b) 179 (0xb3) 0 (0x00) 77 (0x4d)  CRC: 0x2FAEE482
	64205568,	 // (0x3d3b300) // 3 (0x03) 211 (0xd3) 179 (0xb3) 0 (0x00)  CRC: 0x7084BC55
	867303475,	 // (0x33b20033) // 51 (0x33) 178 (0xb2) 0 (0x00) 51 (0x33)  CRC: 0x83EDA476
	268918800,	 // (0x10076010) // 16 (0x10) 7 (0x07) 96 (0x60) 16 (0x10)  CRC: 0xB34BA1BB
	-125914368,	 // (0xf87eb300) // 248 (0xf8) 126 (0x7e) 179 (0xb3) 0 (0x00)  CRC: 0x3E92FE88
	857387520,	 // (0x331ab200) // 51 (0x33) 26 (0x1a) 178 (0xb2) 0 (0x00)  CRC: 0x2FD5E220
	862237440,	 // (0x3364b300) // 51 (0x33) 100 (0x64) 179 (0xb3) 0 (0x00)  CRC: 0x6064E035
	884080692,	 // (0x34b20034) // 52 (0x34) 178 (0xb2) 0 (0x00) 52 (0x34)  CRC: 0xE58A8628
	90968077,	 // (0x56c100d) // 5 (0x05) 108 (0x6c) 16 (0x10) 13 (0x0d)  CRC: 0xF863AAE9
	1823670337,	 // (0x6cb30041) // 108 (0x6c) 179 (0xb3) 0 (0x00) 65 (0x41)  CRC: 0xE7028243
	-1308609358,	 // (0xb20034b2) // 178 (0xb2) 0 (0x00) 52 (0x34) 178 (0xb2)  CRC: 0x0BD47EEF
	4263944,	 // (0x411008) // 0 (0x00) 65 (0x41) 16 (0x10) 8 (0x08)  CRC: 0x8DFB69EB
	1751385452,	 // (0x6864056c) // 104 (0x68) 100 (0x64) 5 (0x05) 108 (0x6c)  CRC: 0x8EBFA1E4
	-1291828558,	 // (0xb30042b2) // 179 (0xb3) 0 (0x00) 66 (0x42) 178 (0xb2)  CRC: 0x3A992B4E
	3387904,	 // (0x33b200) // 0 (0x00) 51 (0x33) 178 (0xb2) 0 (0x00)  CRC: 0xFDA5D2EC
	1091569768,	 // (0x41100868) // 65 (0x41) 16 (0x10) 8 (0x08) 104 (0x68)  CRC: 0x8D8C95C9
	1622343747,	 // (0x60b30043) // 96 (0x60) 179 (0xb3) 0 (0x00) 67 (0x43)  CRC: 0xBD92EBBB
	-1308605518,	 // (0xb20043b2) // 178 (0xb2) 0 (0x00) 67 (0x43) 178 (0xb2)  CRC: 0x5A440EAA
	4350131,	 // (0x4260b3) // 0 (0x00) 66 (0x42) 96 (0x60) 179 (0xb3)  CRC: 0xD4634597
	4457651,	 // (0x4404b3) // 0 (0x00) 68 (0x44) 4 (0x04) 179 (0xb3)  CRC: 0x860E743D
	4567552,	 // (0x45b200) // 0 (0x00) 69 (0x45) 178 (0xb2) 0 (0x00)  CRC: 0xA273135F
	1135804488,	 // (0x43b30048) // 67 (0x43) 179 (0xb3) 0 (0x00) 72 (0x48)  CRC: 0x51037919
	-1308604238,	 // (0xb20048b2) // 178 (0xb2) 0 (0x00) 72 (0x48) 178 (0xb2)  CRC: 0x746D373E
	4350131,	 // (0x4260b3) // 0 (0x00) 66 (0x42) 96 (0x60) 179 (0xb3)  CRC: 0x6D3DC516
	4829696,	 // (0x49b200) // 0 (0x00) 73 (0x49) 178 (0xb2) 0 (0x00)  CRC: 0x9E67D490
	1135804487,	 // (0x43b30047) // 67 (0x43) 179 (0xb3) 0 (0x00) 71 (0x47)  CRC: 0xA7A13DC3
	-1308605261,	 // (0xb20044b3) // 178 (0xb2) 0 (0x00) 68 (0x44) 179 (0xb3)  CRC: 0xE5C183DF
	4588467,	 // (0x4603b3) // 0 (0x00) 70 (0x46) 3 (0x03) 179 (0xb3)  CRC: 0x02074091
	4850611,	 // (0x4a03b3) // 0 (0x00) 74 (0x4a) 3 (0x03) 179 (0xb3)  CRC: 0x6B728590
	4915891,	 // (0x4b02b3) // 0 (0x00) 75 (0x4b) 2 (0x02) 179 (0xb3)  CRC: 0xA0F6120F
	4981565,	 // (0x4c033d) // 0 (0x00) 76 (0x4c) 3 (0x03) 61 (0x3d)  CRC: 0xB41ECC5B
	481427521,	 // (0x1cb20041) // 28 (0x1c) 178 (0xb2) 0 (0x00) 65 (0x41)  CRC: 0xE9E74A0D
	-1577046350,	 // (0xa2002eb2) // 162 (0xa2) 0 (0x00) 46 (0x2e) 178 (0xb2)  CRC: 0x886667CF
	3349520,	 // (0x331c10) // 0 (0x00) 51 (0x33) 28 (0x1c) 16 (0x10)  CRC: 0x842E3700
	141058110,	 // (0x868603e) // 8 (0x08) 104 (0x68) 96 (0x60) 62 (0x3e)  CRC: 0x484E6FB9
	-1308603875,	 // (0xb2004a1d) // 178 (0xb2) 0 (0x00) 74 (0x4a) 29 (0x1d)  CRC: 0x76D4757B
	123786243,	 // (0x760d403) // 7 (0x07) 96 (0x60) 212 (0xd4) 3 (0x03)  CRC: 0x3EA2D050
	486760660,	 // (0x1d0360d4) // 29 (0x1d) 3 (0x03) 96 (0x60) 212 (0xd4)  CRC: 0xE51BE694
	498270282,	 // (0x1db3004a) // 29 (0x1d) 179 (0xb3) 0 (0x00) 74 (0x4a)  CRC: 0x35AE4387
	52234336,	 // (0x31d0860) // 3 (0x03) 29 (0x1d) 8 (0x08) 96 (0x60)  CRC: 0x118ECEAF
	-737993456,	 // (0xd4031d10) // 212 (0xd4) 3 (0x03) 29 (0x1d) 16 (0x10)  CRC: 0x3A9825BB
	107009052,	 // (0x660d41c) // 6 (0x06) 96 (0x60) 212 (0xd4) 28 (0x1c)  CRC: 0x0F02525D
	73416103,	 // (0x4603da7) // 4 (0x04) 96 (0x60) 61 (0x3d) 167 (0xa7)  CRC: 0x52EAF0E9
	-3034624,	 // (0xffd1b200) // 255 (0xff) 209 (0xd1) 178 (0xb2) 0 (0x00)  CRC: 0x5B54799F
	1124446720,	 // (0x4305b200) // 67 (0x43) 5 (0x05) 178 (0xb2) 0 (0x00)  CRC: 0x806EFD2F
	1114136637,	 // (0x4268603d) // 66 (0x42) 104 (0x68) 96 (0x60) 61 (0x3d)  CRC: 0x70F77467
	-1308605634,	 // (0xb200433e) // 178 (0xb2) 0 (0x00) 67 (0x43) 62 (0x3e)  CRC: 0x177305DD
	488415744,	 // (0x1d1ca200) // 29 (0x1d) 28 (0x1c) 162 (0xa2) 0 (0x00)  CRC: 0x78335C7B
	218308052,	 // (0xd031dd4) // 13 (0x0d) 3 (0x03) 29 (0x1d) 212 (0xd4)  CRC: 0xEEB12A0B
	486826046,	 // (0x1d04603e) // 29 (0x1d) 4 (0x04) 96 (0x60) 62 (0x3e)  CRC: 0x1F64DA4C
	-1476398077,	 // (0xa7fff403) // 167 (0xa7) 255 (0xff) 244 (0xf4) 3 (0x03)  CRC: 0xDAAB4917
	-1291825477,	 // (0xb3004ebb) // 179 (0xb3) 0 (0x00) 78 (0x4e) 187 (0xbb)  CRC: 0xBB796E38
	285111,	 // (0x459b7) // 0 (0x00) 4 (0x04) 89 (0x59) 183 (0xb7)  CRC: 0x076F43F0
	123136,	 // (0x1e100) // 0 (0x00) 1 (0x01) 225 (0xe1) 0 (0x00)  CRC: 0x92CE3D8B
	-1699020795,	 // (0x9abb0005) // 154 (0x9a) 187 (0xbb) 0 (0x00) 5 (0x05)  CRC: 0xF291A246
	1505165318,	 // (0x59b70006) // 89 (0x59) 183 (0xb7) 0 (0x00) 6 (0x06)  CRC: 0x15CBB0C3
	-520053583,	 // (0xe1009cb1) // 225 (0xe1) 0 (0x00) 156 (0x9c) 177 (0xb1)  CRC: 0x7D8F61EF
	2106548719,	// CRC do Jardel: 0x7D8F61EF
	0,	//	synchronized?, exception table length
//	3334: getMutex()Ljava/lang/Object;
	-536831312,	 // (0xe0009ab0) // 224 (0xe0) 0 (0x00) 154 (0x9a) 176 (0xb0)  CRC: 0x821AC6F0
	-2112174352,	// CRC do Jardel: 0x821AC6F0
	0,	//	synchronized?, exception table length
//	3337: push(I)V
	447873075,	 // (0x1ab20033) // 26 (0x1a) 178 (0xb2) 0 (0x00) 51 (0x33)  CRC: 0x0C9D3F38
	-1593831142,	 // (0xa100111a) // 161 (0xa1) 0 (0x00) 17 (0x11) 26 (0x1a)  CRC: 0x58AB8757
	-1308609614,	 // (0xb20033b2) // 178 (0xb2) 0 (0x00) 51 (0x33) 178 (0xb2)  CRC: 0x40DA5F52
	4263944,	 // (0x411008) // 0 (0x00) 65 (0x41) 16 (0x10) 8 (0x08)  CRC: 0xB12AA0A7
	1751163136,	 // (0x6860a100) // 104 (0x68) 96 (0x60) 161 (0xa1) 0 (0x00)  CRC: 0x21838739
	78715408,	 // (0x4b11a10) // 4 (0x04) 177 (0xb1) 26 (0x1a) 16 (0x10)  CRC: 0x0F8A4B7A
	125737216,	 // (0x77e9900) // 7 (0x07) 126 (0x7e) 153 (0x99) 0 (0x00)  CRC: 0x8C3D8DEC
	78766080,	 // (0x4b1e000) // 4 (0x04) 177 (0xb1) 224 (0xe0) 0 (0x00)  CRC: 0xB04E3D8E
	-1705423678,	 // (0x9a594cc2) // 154 (0x9a) 89 (0x59) 76 (0x4c) 194 (0xc2)  CRC: 0x08915CBF
	436429011,	 // (0x1a0360d3) // 26 (0x1a) 3 (0x03) 96 (0x60) 211 (0xd3)  CRC: 0xAE3CCBCA
	-1711274453,	 // (0x9a00062b) // 154 (0x9a) 0 (0x00) 6 (0x06) 43 (0x2b)  CRC: 0x6E6B8D5B
	-1011803632,	 // (0xc3b11a10) // 195 (0xc3) 177 (0xb1) 26 (0x1a) 16 (0x10)  CRC: 0x580CCBEE
	107008946,	 // (0x660d3b2) // 6 (0x06) 96 (0x60) 211 (0xd3) 178 (0xb2)  CRC: 0xEDF8EB09
	4694016,	 // (0x47a000) // 0 (0x00) 71 (0x47) 160 (0xa0) 0 (0x00)  CRC: 0xEE8054C3
	103531441,	 // (0x62bc3b1) // 6 (0x06) 43 (0x2b) 195 (0xc3) 177 (0xb1)  CRC: 0x3151087D
	436756691,	 // (0x1a0860d3) // 26 (0x1a) 8 (0x08) 96 (0x60) 211 (0xd3)  CRC: 0xB4A3A1E5
	-1711272270,	 // (0x9a000eb2) // 154 (0x9a) 0 (0x00) 14 (0x0e) 178 (0xb2)  CRC: 0xB71E4227
	4987400,	 // (0x4c1a08) // 0 (0x00) 76 (0x4c) 26 (0x1a) 8 (0x08)  CRC: 0xB0EB9823
	1624513203,	 // (0x60d41ab3) // 96 (0x60) 212 (0xd4) 26 (0x1a) 179 (0xb3)  CRC: 0x6AA27C20
	4991939,	 // (0x4c2bc3) // 0 (0x00) 76 (0x4c) 43 (0x2b) 195 (0xc3)  CRC: 0x2212E9BB
	-1493170099,	 // (0xa700084d) // 167 (0xa7) 0 (0x00) 8 (0x08) 77 (0x4d)  CRC: 0x0C4905EB
	734211263,	 // (0x2bc32cbf) // 43 (0x2b) 195 (0xc3) 44 (0x2c) 191 (0xbf)  CRC: 0xEB7ED071
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xD03288F9
	-801994503,	// CRC do Jardel: 0xD03288F9
	4,	//	synchronized?, exception table length
	2359341,	// start: 36	end: 45
	5439488,	// target: 83	type: 0
	3014715,	// start: 46	end: 59
	5439488,	// target: 83	type: 0
	3932240,	// start: 60	end: 80
	5439488,	// target: 83	type: 0
	5439574,	// start: 83	end: 86
	5439488,	// target: 83	type: 0
//	3370: flip()V
	-536831399,	 // (0xe0009a59) // 224 (0xe0) 0 (0x00) 154 (0x9a) 89 (0x59)  CRC: 0x3A812FF4
	1271050752,	 // (0x4bc2b200) // 75 (0x4b) 194 (0xc2) 178 (0xb2) 0 (0x00)  CRC: 0x0796678E
	1275240192,	 // (0x4c029f00) // 76 (0x4c) 2 (0x02) 159 (0x9f) 0 (0x00)  CRC: 0xB14F273C
	135399352,	 // (0x81207b8) // 8 (0x08) 18 (0x12) 7 (0x07) 184 (0xb8)  CRC: 0x3D901149
	569856,	 // (0x8b200) // 0 (0x00) 8 (0x08) 178 (0xb2) 0 (0x00)  CRC: 0x226475E1
	1167720455,	 // (0x459a0007) // 69 (0x45) 154 (0x9a) 0 (0x00) 7 (0x07)  CRC: 0xBCE80C77
	78053380,	 // (0x4a70004) // 4 (0x04) 167 (0xa7) 0 (0x00) 4 (0x04)  CRC: 0x5A2791DC
	62062661,	 // (0x3b30045) // 3 (0x03) 179 (0xb3) 0 (0x00) 69 (0x45)  CRC: 0x85E7C2CA
	-1308605031,	 // (0xb2004599) // 178 (0xb2) 0 (0x00) 69 (0x45) 153 (0x99)  CRC: 0x037DA946
	1618432,	 // (0x18b200) // 0 (0x00) 24 (0x18) 178 (0xb2) 0 (0x00)  CRC: 0xBFA37A37
	1135804488,	 // (0x43b30048) // 67 (0x43) 179 (0xb3) 0 (0x00) 72 (0x48)  CRC: 0xCB8B43F9
	-1308605261,	 // (0xb20044b3) // 178 (0xb2) 0 (0x00) 68 (0x44) 179 (0xb3)  CRC: 0x88D7AA69
	4633088,	 // (0x46b200) // 0 (0x00) 70 (0x46) 178 (0xb2) 0 (0x00)  CRC: 0xB6E1DC3D
	1135804487,	 // (0x43b30047) // 67 (0x43) 179 (0xb3) 0 (0x00) 71 (0x47)  CRC: 0x168DD825
	-1493166670,	 // (0xa70015b2) // 167 (0xa7) 0 (0x00) 21 (0x15) 178 (0xb2)  CRC: 0xF6BE6F34
	4502272,	 // (0x44b300) // 0 (0x00) 68 (0x44) 179 (0xb3) 0 (0x00)  CRC: 0xBDAEE98E
	1219625027,	 // (0x48b20043) // 72 (0x48) 178 (0xb2) 0 (0x00) 67 (0x43)  CRC: 0x60E05073
	-1291827534,	 // (0xb30046b2) // 179 (0xb3) 0 (0x00) 70 (0x46) 178 (0xb2)  CRC: 0xE3F6F786
	4502272,	 // (0x44b300) // 0 (0x00) 68 (0x44) 179 (0xb3) 0 (0x00)  CRC: 0x3EE5E1AE
	1202847816,	 // (0x47b20048) // 71 (0x47) 178 (0xb2) 0 (0x00) 72 (0x48)  CRC: 0x6F4F0D1A
	-1308605856,	 // (0xb2004260) // 178 (0xb2) 0 (0x00) 66 (0x42) 96 (0x60)  CRC: 0x27450453
	-1291826902,	 // (0xb300492a) // 179 (0xb3) 0 (0x00) 73 (0x49) 42 (0x2a)  CRC: 0xD0589F4C
	-1012465656,	 // (0xc3a70008) // 195 (0xc3) 167 (0xa7) 0 (0x00) 8 (0x08)  CRC: 0xF796265D
	1277870891,	 // (0x4c2ac32b) // 76 (0x4c) 42 (0x2a) 195 (0xc3) 43 (0x2b)  CRC: 0xEF5907F3
	-1078919168,	 // (0xbfb10000) // 191 (0xbf) 177 (0xb1)  CRC: 0x4AEA8DCF
	1256885711,	// CRC do Jardel: 0x4AEA8DCF
	2,	//	synchronized?, exception table length
	393305,	// start: 6	end: 89
	6029312,	// target: 92	type: 0
	6029407,	// start: 92	end: 95
	6029312,	// target: 92	type: 0
//	3401: getStackRoots()V
	-536831399,	 // (0xe0009a59) // 224 (0xe0) 0 (0x00) 154 (0x9a) 89 (0x59)  CRC: 0x3A812FF4
	1321391931,	 // (0x4ec2d73b) // 78 (0x4e) 194 (0xc2) 215 (0xd7) 59 (0x3b)  CRC: 0xDFB7E268
	272645147,	 // (0x10403c1b) // 16 (0x10) 64 (0x40) 60 (0x3c) 27 (0x1b)  CRC: 0x2F9BB392
	446889999,	 // (0x1aa3000f) // 26 (0x1a) 163 (0xa3) 0 (0x00) 15 (0x0f)  CRC: 0x48CCCAF5
	466991104,	 // (0x1bd5b800) // 27 (0x1b) 213 (0xd5) 184 (0xb8) 0 (0x00)  CRC: 0x2BDEE35B
	186319968,	 // (0xb1b0460) // 11 (0x0b) 27 (0x1b) 4 (0x04) 96 (0x60)  CRC: 0xC3EADC83
	1017642994,	 // (0x3ca7fff2) // 60 (0x3c) 167 (0xa7) 255 (0xff) 242 (0xf2)  CRC: 0xD6C6CA35
	-1207956419,	 // (0xb8000c3d) // 184 (0xb8) 0 (0x00) 12 (0x0c) 61 (0x3d)  CRC: 0x2239911F
	54204956,	 // (0x33b1a1c) // 3 (0x03) 59 (0x3b) 26 (0x1a) 28 (0x1c)  CRC: 0xEC0C811A
	-1577044454,	 // (0xa200361a) // 162 (0xa2) 0 (0x00) 54 (0x36) 26 (0x1a)  CRC: 0x4AAFBEE2
	-1207956065,	 // (0xb8000d9f) // 184 (0xb8) 0 (0x00) 13 (0x0d) 159 (0x9f)  CRC: 0x7E7628BF
	2628280,	 // (0x281ab8) // 0 (0x00) 40 (0x28) 26 (0x1a) 184 (0xb8)  CRC: 0x76F29E53
	932356,	 // (0xe3a04) // 0 (0x00) 14 (0x0e) 58 (0x3a) 4 (0x04)  CRC: 0x03451BF3
	448266255,	 // (0x1ab8000f) // 26 (0x1a) 184 (0xb8) 0 (0x00) 15 (0x0f)  CRC: 0xC22A8C4F
	272655414,	 // (0x10406436) // 16 (0x10) 64 (0x40) 100 (0x64) 54 (0x36)  CRC: 0x26BEE460
	84098075,	 // (0x5033c1b) // 5 (0x05) 3 (0x03) 60 (0x3c) 27 (0x1b)  CRC: 0xC4AE6E10
	352690944,	 // (0x1505a300) // 21 (0x15) 5 (0x05) 163 (0xa3) 0 (0x00)  CRC: 0x8DFCB66E
	286852123,	 // (0x1119041b) // 17 (0x11) 25 (0x19) 4 (0x04) 27 (0x1b)  CRC: 0xE4695946
	783810571,	 // (0x2eb8000b) // 46 (0x2e) 184 (0xb8) 0 (0x00) 11 (0x0b)  CRC: 0x818A9C46
	453271612,	 // (0x1b04603c) // 27 (0x1b) 4 (0x04) 96 (0x60) 60 (0x3c)  CRC: 0x1FBAFA6C
	-1476399334,	 // (0xa7ffef1a) // 167 (0xa7) 255 (0xff) 239 (0xef) 26 (0x1a)  CRC: 0x2C7F9A14
	73415591,	 // (0x4603ba7) // 4 (0x04) 96 (0x60) 59 (0x3b) 167 (0xa7)  CRC: 0xDBA19B69
	-3461693,	 // (0xffcb2dc3) // 255 (0xff) 203 (0xcb) 45 (0x2d) 195 (0xc3)  CRC: 0x8583A17E
	-1493169606,	 // (0xa7000a3a) // 167 (0xa7) 0 (0x00) 10 (0x0a) 58 (0x3a)  CRC: 0xFE5C2F95
	103662361,	 // (0x62dc319) // 6 (0x06) 45 (0x2d) 195 (0xc3) 25 (0x19)  CRC: 0xF3203EC7
	113225984,	 // (0x6bfb100) // 6 (0x06) 191 (0xbf) 177 (0xb1)  CRC: 0xF3A5C769
	-207239319,	// CRC do Jardel: 0xF3A5C769
	2,	//	synchronized?, exception table length
	393308,	// start: 6	end: 92
	6225920,	// target: 95	type: 0
	6226019,	// start: 95	end: 99
	6225920,	// target: 95	type: 0
//	3433: getStaticRoots()V
	-1308602925,	 // (0xb2004dd3) // 178 (0xb2) 0 (0x00) 77 (0x4d) 211 (0xd3)  CRC: 0x2A7EDFF6
	1018298445,	 // (0x3cb2004d) // 60 (0x3c) 178 (0xb2) 0 (0x00) 77 (0x4d)  CRC: 0x734A61B7
	73454397,	 // (0x460d33d) // 4 (0x04) 96 (0x60) 211 (0xd3) 61 (0x3d)  CRC: 0x74B345B7
	54204956,	 // (0x33b1a1c) // 3 (0x03) 59 (0x3b) 26 (0x1a) 28 (0x1c)  CRC: 0xAA5E935E
	-1577053925,	 // (0xa200111b) // 162 (0xa2) 0 (0x00) 17 (0x11) 27 (0x1b)  CRC: 0x4611B4A0
	442553272,	 // (0x1a60d3b8) // 26 (0x1a) 96 (0x60) 211 (0xd3) 184 (0xb8)  CRC: 0xCECA5444
	727556,	 // (0xb1a04) // 0 (0x00) 11 (0x0b) 26 (0x1a) 4 (0x04)  CRC: 0x7EE07B77
	1614522367,	 // (0x603ba7ff) // 96 (0x60) 59 (0x3b) 167 (0xa7) 255 (0xff)  CRC: 0x1ABB26C6
	-256835584,	 // (0xf0b10000) // 240 (0xf0) 177 (0xb1)  CRC: 0x1F270A02
	522652162,	// CRC do Jardel: 0x1F270A02
	0,	//	synchronized?, exception table length
//	3444: markAndCopy()V
	-1308602726,	 // (0xb2004e9a) // 178 (0xb2) 0 (0x00) 78 (0x4e) 154 (0x9a)  CRC: 0xDC83B897
	440320,	 // (0x6b800) // 0 (0x00) 6 (0x06) 184 (0xb8) 0 (0x00)  CRC: 0xC9777F07
	280494097,	 // (0x10b80011) // 16 (0x10) 184 (0xb8) 0 (0x00) 17 (0x11)  CRC: 0x8AE767FF
	-536831399,	 // (0xe0009a59) // 224 (0xe0) 0 (0x00) 154 (0x9a) 89 (0x59)  CRC: 0x9A2973AB
	1304605184,	 // (0x4dc2b200) // 77 (0x4d) 194 (0xc2) 178 (0xb2) 0 (0x00)  CRC: 0x563A6596
	1279007490,	 // (0x4c3c1b02) // 76 (0x4c) 60 (0x3c) 27 (0x1b) 2 (0x02)  CRC: 0x5768257A
	-1610610644,	 // (0xa000082c) // 160 (0xa0) 0 (0x00) 8 (0x08) 44 (0x2c)  CRC: 0x91C22B2F
	-1012465432,	 // (0xc3a700e8) // 195 (0xc3) 167 (0xa7) 0 (0x00) 232 (0xe8)  CRC: 0xCDE0C58A
	453533907,	 // (0x1b0860d3) // 27 (0x1b) 8 (0x08) 96 (0x60) 211 (0xd3)  CRC: 0xDD24A32F
	-1291826173,	 // (0xb3004c03) // 179 (0xb3) 0 (0x00) 76 (0x4c) 3 (0x03)  CRC: 0x3ACAB8B2
	453533908,	 // (0x1b0860d4) // 27 (0x1b) 8 (0x08) 96 (0x60) 212 (0xd4)  CRC: 0x1FB62A95
	751019776,	 // (0x2cc3a700) // 44 (0x2c) 195 (0xc3) 167 (0xa7) 0 (0x00)  CRC: 0x2AE15238
	139340995,	 // (0x84e2cc3) // 8 (0x08) 78 (0x4e) 44 (0x2c) 195 (0xc3)  CRC: 0x2196659F
	767499024,	 // (0x2dbf1b10) // 45 (0x2d) 191 (0xbf) 27 (0x1b) 16 (0x10)  CRC: 0x68248C4C
	107008946,	 // (0x660d3b2) // 6 (0x06) 96 (0x60) 211 (0xd3) 178 (0xb2)  CRC: 0x4BF10BD5
	4694016,	 // (0x47a000) // 0 (0x00) 71 (0x47) 160 (0xa0) 0 (0x00)  CRC: 0xAA83D133
	111673291,	 // (0x6a7ffcb) // 6 (0x06) 167 (0xa7) 255 (0xff) 203 (0xcb)  CRC: 0xE9119B43
	466828571,	 // (0x1bd33d1b) // 27 (0x1b) 211 (0xd3) 61 (0x3d) 27 (0x1b)  CRC: 0x7131C1A6
	107008830,	 // (0x660d33e) // 6 (0x06) 96 (0x60) 211 (0xd3) 62 (0x3e)  CRC: 0x17BB24F6
	486842368,	 // (0x1d04a000) // 29 (0x1d) 4 (0x04) 160 (0xa0) 0 (0x00)  CRC: 0x34F15137
	572195936,	 // (0x221b0460) // 34 (0x22) 27 (0x1b) 4 (0x04) 96 (0x60)  CRC: 0xD082D4B2
	-751434749,	 // (0xd3360403) // 211 (0xd3) 54 (0x36) 4 (0x04) 3 (0x03)  CRC: 0xE3EC5DCA
	991565060,	 // (0x3b1a1504) // 59 (0x3b) 26 (0x1a) 21 (0x15) 4 (0x04)  CRC: 0xC9911535
	-1577053924,	 // (0xa200111c) // 162 (0xa2) 0 (0x00) 17 (0x11) 28 (0x1c)  CRC: 0x70190524
	442553272,	 // (0x1a60d3b8) // 26 (0x1a) 96 (0x60) 211 (0xd3) 184 (0xb8)  CRC: 0x07721DB1
	727556,	 // (0xb1a04) // 0 (0x00) 11 (0x0b) 26 (0x1a) 4 (0x04)  CRC: 0x6FF4D30A
	1614522367,	 // (0x603ba7ff) // 96 (0x60) 59 (0x3b) 167 (0xa7) 255 (0xff)  CRC: 0xD234DD66
	-274268112,	 // (0xefa70030) // 239 (0xef) 167 (0xa7) 0 (0x00) 48 (0x30)  CRC: 0x10302529
	496631852,	 // (0x1d9a002c) // 29 (0x1d) 154 (0x9a) 0 (0x00) 44 (0x2c)  CRC: 0x76B2B404
	453271763,	 // (0x1b0460d3) // 27 (0x1b) 4 (0x04) 96 (0x60) 211 (0xd3)  CRC: 0xAEF14D00
	1042092285,	 // (0x3e1d10fd) // 62 (0x3e) 29 (0x1d) 16 (0x10) 253 (0xfd)  CRC: 0x5F6B6B7A
	1624456707,	 // (0x60d33e03) // 96 (0x60) 211 (0xd3) 62 (0x3e) 3 (0x03)  CRC: 0x95AEA58B
	991795456,	 // (0x3b1d9900) // 59 (0x3b) 29 (0x1d) 153 (0x99) 0 (0x00)  CRC: 0x57F66288
	454886526,	 // (0x1b1d047e) // 27 (0x1b) 29 (0x1d) 4 (0x04) 126 (0x7e)  CRC: 0x9450C684
	-1728050660,	 // (0x99000a1c) // 153 (0x99) 0 (0x00) 10 (0x0a) 28 (0x1c)  CRC: 0x62192740
	442553272,	 // (0x1a60d3b8) // 26 (0x1a) 96 (0x60) 211 (0xd3) 184 (0xb8)  CRC: 0x738C00A9
	728324,	 // (0xb1d04) // 0 (0x00) 11 (0x0b) 29 (0x1d) 4 (0x04)  CRC: 0x0B2D989B
	2084444676,	 // (0x7c3e1a04) // 124 (0x7c) 62 (0x3e) 26 (0x1a) 4 (0x04)  CRC: 0x5AEB5E00
	1614522367,	 // (0x603ba7ff) // 96 (0x60) 59 (0x3b) 167 (0xa7) 255 (0xff)  CRC: 0xC9662632
	-404750182,	 // (0xe7e0009a) // 231 (0xe7) 224 (0xe0) 0 (0x00) 154 (0x9a)  CRC: 0x2FDF7E5A
	1496975042,	 // (0x593a06c2) // 89 (0x59) 58 (0x3a) 6 (0x06) 194 (0xc2)  CRC: 0x45A5ACB2
	453337299,	 // (0x1b0560d3) // 27 (0x1b) 5 (0x05) 96 (0x60) 211 (0xd3)  CRC: 0x2442C288
	906277376,	 // (0x3604b200) // 54 (0x36) 4 (0x04) 178 (0xb2) 0 (0x00)  CRC: 0x8D521622
	1211499954,	 // (0x483605b2) // 72 (0x48) 54 (0x36) 5 (0x05) 178 (0xb2)  CRC: 0x35B38571
	4723972,	 // (0x481504) // 0 (0x00) 72 (0x48) 21 (0x15) 4 (0x04)  CRC: 0x28CADE34
	1622343752,	 // (0x60b30048) // 96 (0x60) 179 (0xb3) 0 (0x00) 72 (0x48)  CRC: 0xBBF0AD44
	-1308604645,	 // (0xb200471b) // 178 (0xb2) 0 (0x00) 71 (0x47) 27 (0x1b)  CRC: 0xAFA9DA4B
	268853460,	 // (0x100660d4) // 16 (0x10) 6 (0x06) 96 (0x60) 212 (0xd4)  CRC: 0x8F3856C6
	419873703,	 // (0x1906c3a7) // 25 (0x19) 6 (0x06) 195 (0xc3) 167 (0xa7)  CRC: 0xDB8E7491
	735751,	 // (0xb3a07) // 0 (0x00) 11 (0x0b) 58 (0x3a) 7 (0x07)  CRC: 0x25BA2790
	419873561,	 // (0x1906c319) // 25 (0x19) 6 (0x06) 195 (0xc3) 25 (0x19)  CRC: 0x7E34E9A9
	129963268,	 // (0x7bf1504) // 7 (0x07) 191 (0xbf) 21 (0x15) 4 (0x04)  CRC: 0xCAB3C94E
	-1644161277,	 // (0x9e001703) // 158 (0x9e) 0 (0x00) 23 (0x17) 3 (0x03)  CRC: 0x0853B33A
	991565060,	 // (0x3b1a1504) // 59 (0x3b) 26 (0x1a) 21 (0x15) 4 (0x04)  CRC: 0x09586F5A
	-1577054443,	 // (0xa2000f15) // 162 (0xa2) 0 (0x00) 15 (0x0f) 21 (0x15)  CRC: 0x6F73207A
	85727976,	 // (0x51c1ae8) // 5 (0x05) 28 (0x1c) 26 (0x1a) 232 (0xe8)  CRC: 0xDF22D57D
	436494395,	 // (0x1a04603b) // 26 (0x1a) 4 (0x04) 96 (0x60) 59 (0x3b)  CRC: 0x2713A7FB
	-1476398827,	 // (0xa7fff115) // 167 (0xa7) 255 (0xff) 241 (0xf1) 21 (0x15)  CRC: 0x95FA6C4B
	85656416,	 // (0x51b0360) // 5 (0x05) 27 (0x1b) 3 (0x03) 96 (0x60)  CRC: 0x371C8DB9
	-737985766,	 // (0xd4033b1a) // 212 (0xd4) 3 (0x03) 59 (0x3b) 26 (0x1a)  CRC: 0xFDFFBB14
	269132288,	 // (0x100aa200) // 16 (0x10) 10 (0x0a) 162 (0xa2) 0 (0x00)  CRC: 0x23C7D91C
	169477216,	 // (0xa1a0460) // 10 (0x0a) 26 (0x1a) 4 (0x04) 96 (0x60)  CRC: 0xCEC6C837
	1000865782,	 // (0x3ba7fff6) // 59 (0x3b) 167 (0xa7) 255 (0xff) 246 (0xf6)  CRC: 0x24FB9F51
	352654597,	 // (0x15051505) // 21 (0x15) 5 (0x05) 21 (0x15) 5 (0x05)  CRC: 0x021F39B1
	48801791,	 // (0x2e8a7ff) // 2 (0x02) 232 (0xe8) 167 (0xa7) 255 (0xff)  CRC: 0x4689B236
	179372032,	 // (0xab10000) // 10 (0x0a) 177 (0xb1)  CRC: 0x6162D691
	1633867409,	// CRC do Jardel: 0x6162D691
	5,	//	synchronized?, exception table length
	1179677,	// start: 18	end: 29
	3211264,	// target: 49	type: 0
	2097198,	// start: 32	end: 46
	3211264,	// target: 49	type: 0
	3211316,	// start: 49	end: 52
	3211264,	// target: 49	type: 0
	10748099,	// start: 164	end: 195
	12976128,	// target: 198	type: 0
	12976331,	// start: 198	end: 203
	12976128,	// target: 198	type: 0
//	3522: sweepHandles()V
	-536831399,	 // (0xe0009a59) // 224 (0xe0) 0 (0x00) 154 (0x9a) 89 (0x59)  CRC: 0x3A812FF4
	1287827968,	 // (0x4cc2b200) // 76 (0x4c) 194 (0xc2) 178 (0xb2) 0 (0x00)  CRC: 0x19D1378B
	1262158771,	 // (0x4b3b03b3) // 75 (0x4b) 59 (0x3b) 3 (0x03) 179 (0xb3)  CRC: 0x1F5FCA63
	4926403,	 // (0x4b2bc3) // 0 (0x00) 75 (0x4b) 43 (0x2b) 195 (0xc3)  CRC: 0xA35B66A2
	-1493170099,	 // (0xa700084d) // 167 (0xa7) 0 (0x00) 8 (0x08) 77 (0x4d)  CRC: 0x5E2785F1
	734211263,	 // (0x2bc32cbf) // 43 (0x2b) 195 (0xc3) 44 (0x2c) 191 (0xbf)  CRC: 0xD75CAE6A
	446234694,	 // (0x1a990046) // 26 (0x1a) 153 (0x99) 0 (0x00) 70 (0x46)  CRC: 0x08107B35
	436691155,	 // (0x1a0760d3) // 26 (0x1a) 7 (0x07) 96 (0x60) 211 (0xd3)  CRC: 0x577C7B00
	1021313178,	 // (0x3ce0009a) // 60 (0x3c) 224 (0xe0) 0 (0x00) 154 (0x9a)  CRC: 0xFCD4E57A
	1498268186,	 // (0x594dc21a) // 89 (0x59) 77 (0x4d) 194 (0xc2) 26 (0x1a)  CRC: 0xF9AD91D2
	268853459,	 // (0x100660d3) // 16 (0x10) 6 (0x06) 96 (0x60) 211 (0xd3)  CRC: 0xCC0178C7
	-1308604512,	 // (0xb20047a0) // 178 (0xb2) 0 (0x00) 71 (0x47) 160 (0xa0)  CRC: 0xC0903CDE
	1159680,	 // (0x11b200) // 0 (0x00) 17 (0x11) 178 (0xb2) 0 (0x00)  CRC: 0x5F921A44
	1259997024,	 // (0x4b1a0760) // 75 (0x4b) 26 (0x1a) 7 (0x07) 96 (0x60)  CRC: 0x37BC25E5
	-736447744,	 // (0xd41ab300) // 212 (0xd4) 26 (0x1a) 179 (0xb3) 0 (0x00)  CRC: 0x573756AE
	1269235731,	 // (0x4ba70013) // 75 (0x4b) 167 (0xa7) 0 (0x00) 19 (0x13)  CRC: 0x7D3F567A
	-1308603878,	 // (0xb2004a1a) // 178 (0xb2) 0 (0x00) 74 (0x4a) 26 (0x1a)  CRC: 0xBE357ADC
	123786266,	 // (0x760d41a) // 7 (0x07) 96 (0x60) 212 (0xd4) 26 (0x1a)  CRC: 0x9071AF08
	-1291826685,	 // (0xb3004a03) // 179 (0xb3) 0 (0x00) 74 (0x4a) 3 (0x03)  CRC: 0x926BFE78
	436429012,	 // (0x1a0360d4) // 26 (0x1a) 3 (0x03) 96 (0x60) 212 (0xd4)  CRC: 0x563A2207
	751019776,	 // (0x2cc3a700) // 44 (0x2c) 195 (0xc3) 167 (0xa7) 0 (0x00)  CRC: 0x9D5316D6
	139340995,	 // (0x84e2cc3) // 8 (0x08) 78 (0x4e) 44 (0x2c) 195 (0xc3)  CRC: 0xB2324433
	767499067,	 // (0x2dbf1b3b) // 45 (0x2d) 191 (0xbf) 27 (0x1b) 59 (0x3b)  CRC: 0xCC6D19E5
	-1476412239,	 // (0xa7ffbcb1) // 167 (0xa7) 255 (0xff) 188 (0xbc) 177 (0xb1)  CRC: 0x2808C545
	671663429,	// CRC do Jardel: 0x2808C545
	4,	//	synchronized?, exception table length
	393232,	// start: 6	end: 16
	1245184,	// target: 19	type: 0
	1245206,	// start: 19	end: 22
	1245184,	// target: 19	type: 0
	2555986,	// start: 39	end: 82
	5570560,	// target: 85	type: 0
	5570648,	// start: 85	end: 88
	5570560,	// target: 85	type: 0
//	3556: zapSemi()V
	-1308604750,	 // (0xb20046b2) // 178 (0xb2) 0 (0x00) 70 (0x46) 178 (0xb2)  CRC: 0xC1450254
	4350011,	 // (0x42603b) // 0 (0x00) 66 (0x42) 96 (0x60) 59 (0x3b)  CRC: 0x38824925
	-1308604868,	 // (0xb200463c) // 178 (0xb2) 0 (0x00) 70 (0x46) 60 (0x3c)  CRC: 0xC3A71900
	454730240,	 // (0x1b1aa200) // 27 (0x1b) 26 (0x1a) 162 (0xa2) 0 (0x00)  CRC: 0x04894E7F
	218307540,	 // (0xd031bd4) // 13 (0x0d) 3 (0x03) 27 (0x1b) 212 (0xd4)  CRC: 0xC789BBF7
	453271612,	 // (0x1b04603c) // 27 (0x1b) 4 (0x04) 96 (0x60) 60 (0x3c)  CRC: 0xA2BC23F9
	-1476397903,	 // (0xa7fff4b1) // 167 (0xa7) 255 (0xff) 244 (0xf4) 177 (0xb1)  CRC: 0xB7639C04
	-1218208764,	// CRC do Jardel: 0xB7639C04
	0,	//	synchronized?, exception table length
//	3565: setConcurrent()V
	78839886,	 // (0x4b3004e) // 4 (0x04) 179 (0xb3) 0 (0x00) 78 (0x4e)  CRC: 0x3B873021
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x78D2D388
	2027082632,	// CRC do Jardel: 0x78D2D388
	0,	//	synchronized?, exception table length
//	3569: gc_alloc()V
	303282176,	 // (0x1213b800) // 18 (0x12) 19 (0x13) 184 (0xb8) 0 (0x00)  CRC: 0xE3255BF6
	145883214,	 // (0x8b2004e) // 8 (0x08) 178 (0xb2) 0 (0x00) 78 (0x4e)  CRC: 0x26DCE650
	-1728049440,	 // (0x99000ee0) // 153 (0x99) 0 (0x00) 14 (0x0e) 224 (0xe0)  CRC: 0x4AA06768
	10270208,	 // (0x9cb600) // 0 (0x00) 156 (0x9c) 182 (0xb6) 0 (0x00)  CRC: 0x0C8C2DAB
	341303296,	 // (0x1457e000) // 20 (0x14) 87 (0x57) 224 (0xe0) 0 (0x00)  CRC: 0x1FF99FEC
	-1665157120,	 // (0x9cbfb800) // 156 (0x9c) 191 (0xbf) 184 (0xb8) 0 (0x00)  CRC: 0xA598ED44
	363921408,	 // (0x15b10000) // 21 (0x15) 177 (0xb1)  CRC: 0xF1A36182
	-240950910,	// CRC do Jardel: 0xF1A36182
	0,	//	synchronized?, exception table length
//	3578: gc()V
	-1207953736,	 // (0xb80016b8) // 184 (0xb8) 0 (0x00) 22 (0x16) 184 (0xb8)  CRC: 0xC09E8DE1
	1554432,	 // (0x17b800) // 0 (0x00) 23 (0x17) 184 (0xb8) 0 (0x00)  CRC: 0x313C73A2
	414711833,	 // (0x18b80019) // 24 (0x18) 184 (0xb8) 0 (0x00) 25 (0x19)  CRC: 0x95E6A3B2
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x8956480A
	-1990834166,	// CRC do Jardel: 0x8956480A
	0,	//	synchronized?, exception table length
//	3584: free()I
	-1308603982,	 // (0xb20049b2) // 178 (0xb2) 0 (0x00) 73 (0x49) 178 (0xb2)  CRC: 0xCA8B21F9
	4744364,	 // (0x4864ac) // 0 (0x00) 72 (0x48) 100 (0x64) 172 (0xac)  CRC: 0xC376B697
	-1015630185,	// CRC do Jardel: 0xC376B697
	0,	//	synchronized?, exception table length
//	3588: getScratchpadSize()I
	-1308619604,	 // (0xb2000cac) // 178 (0xb2) 0 (0x00) 12 (0x0c) 172 (0xac)  CRC: 0x740BCFD7
	1946931159,	// CRC do Jardel: 0x740BCFD7
	0,	//	synchronized?, exception table length
//	3591: newObject(I)I
	450051296,	 // (0x1ad33ce0) // 26 (0x1a) 211 (0xd3) 60 (0x3c) 224 (0xe0)  CRC: 0x70CF18BF
	10115405,	 // (0x9a594d) // 0 (0x00) 154 (0x9a) 89 (0x59) 77 (0x4d)  CRC: 0x168F335C
	-1028521912,	 // (0xc2b20048) // 194 (0xc2) 178 (0xb2) 0 (0x00) 72 (0x48)  CRC: 0xB19CA3DD
	459321856,	 // (0x1b60b200) // 27 (0x1b) 96 (0x60) 178 (0xb2) 0 (0x00)  CRC: 0xA058E51E
	1235288092,	 // (0x49a1001c) // 73 (0x49) 161 (0xa1) 0 (0x00) 28 (0x1c)  CRC: 0x39D2B92F
	-1207952718,	 // (0xb8001ab2) // 184 (0xb8) 0 (0x00) 26 (0x1a) 178 (0xb2)  CRC: 0x7AB68DB9
	4725600,	 // (0x481b60) // 0 (0x00) 72 (0x48) 27 (0x1b) 96 (0x60)  CRC: 0xA6D81D63
	-1308603999,	 // (0xb20049a1) // 178 (0xb2) 0 (0x00) 73 (0x49) 161 (0xa1)  CRC: 0xF4F8B776
	974848,	 // (0xee000) // 0 (0x00) 14 (0x0e) 224 (0xe0) 0 (0x00)  CRC: 0x15AF8121
	-1665794028,	 // (0x9cb60014) // 156 (0x9c) 182 (0xb6) 0 (0x00) 20 (0x14)  CRC: 0x8B2EB298
	1474298012,	 // (0x57e0009c) // 87 (0x57) 224 (0xe0) 0 (0x00) 156 (0x9c)  CRC: 0x4EB58876
	-1087585369,	 // (0xbf2cc3a7) // 191 (0xbf) 44 (0x2c) 195 (0xc3) 167 (0xa7)  CRC: 0x74B4D4C7
	544300,	 // (0x84e2c) // 0 (0x00) 8 (0x08) 78 (0x4e) 44 (0x2c)  CRC: 0x3141AFBA
	-1020411936,	 // (0xc32dbfe0) // 195 (0xc3) 45 (0x2d) 191 (0xbf) 224 (0xe0)  CRC: 0x0A7B04D9
	10115405,	 // (0x9a594d) // 0 (0x00) 154 (0x9a) 89 (0x59) 77 (0x4d)  CRC: 0x3B24A349
	-1028521910,	 // (0xc2b2004a) // 194 (0xc2) 178 (0xb2) 0 (0x00) 74 (0x4a)  CRC: 0xACFB320C
	-1711268846,	 // (0x9a001c12) // 154 (0x9a) 0 (0x00) 28 (0x1c) 18 (0x12)  CRC: 0x89E65ABA
	465043464,	 // (0x1bb80008) // 27 (0x1b) 184 (0xb8) 0 (0x00) 8 (0x08)  CRC: 0x6945E95C
	-1207952718,	 // (0xb8001ab2) // 184 (0xb8) 0 (0x00) 26 (0x1a) 178 (0xb2)  CRC: 0x1486304B
	4889088,	 // (0x4a9a00) // 0 (0x00) 74 (0x4a) 154 (0x9a) 0 (0x00)  CRC: 0xDB0FD8C0
	249561244,	 // (0xee0009c) // 14 (0x0e) 224 (0xe0) 0 (0x00) 156 (0x9c)  CRC: 0x1DE19367
	-1241508777,	 // (0xb6001457) // 182 (0xb6) 0 (0x00) 20 (0x14) 87 (0x57)  CRC: 0xDBD74ECB
	-536830785,	 // (0xe0009cbf) // 224 (0xe0) 0 (0x00) 156 (0x9c) 191 (0xbf)  CRC: 0xA038C7E9
	751019776,	 // (0x2cc3a700) // 44 (0x2c) 195 (0xc3) 167 (0xa7) 0 (0x00)  CRC: 0xB97609EA
	171574316,	 // (0xa3a042c) // 10 (0x0a) 58 (0x3a) 4 (0x04) 44 (0x2c)  CRC: 0x25DF32CD
	-1021770561,	 // (0xc31904bf) // 195 (0xc3) 25 (0x19) 4 (0x04) 191 (0xbf)  CRC: 0x7BD71141
	-536831399,	 // (0xe0009a59) // 224 (0xe0) 0 (0x00) 154 (0x9a) 89 (0x59)  CRC: 0x1F01243D
	1321382400,	 // (0x4ec2b200) // 78 (0x4e) 194 (0xc2) 178 (0xb2) 0 (0x00)  CRC: 0x3194A331
	1226532019,	 // (0x491b64b3) // 73 (0x49) 27 (0x1b) 100 (0x64) 179 (0xb3)  CRC: 0x5894E9B4
	4829696,	 // (0x49b200) // 0 (0x00) 73 (0x49) 178 (0xb2) 0 (0x00)  CRC: 0xEC3E4B12
	1245518855,	 // (0x4a3d1c07) // 74 (0x4a) 61 (0x3d) 28 (0x1c) 7 (0x07)  CRC: 0xF6D83053
	1624486656,	 // (0x60d3b300) // 96 (0x60) 211 (0xd3) 179 (0xb3) 0 (0x00)  CRC: 0xA386143F
	1253179467,	 // (0x4ab2004b) // 74 (0x4a) 178 (0xb2) 0 (0x00) 75 (0x4b)  CRC: 0x3CFBFCB5
	470245588,	 // (0x1c0760d4) // 28 (0x1c) 7 (0x07) 96 (0x60) 212 (0xd4)  CRC: 0x41FBCA93
	481493067,	 // (0x1cb3004b) // 28 (0x1c) 179 (0xb3) 0 (0x00) 75 (0x4b)  CRC: 0x8D180516
	-1308604132,	 // (0xb200491c) // 178 (0xb2) 0 (0x00) 73 (0x49) 28 (0x1c)  CRC: 0x92F00F99
	-736420859,	 // (0xd41b1c05) // 212 (0xd4) 27 (0x1b) 28 (0x1c) 5 (0x05)  CRC: 0xB581864F
	1624551936,	 // (0x60d4b200) // 96 (0x60) 212 (0xd4) 178 (0xb2) 0 (0x00)  CRC: 0x6EFC4FE9
	1193021446,	 // (0x471c1006) // 71 (0x47) 28 (0x1c) 16 (0x10) 6 (0x06)  CRC: 0x848234A2
	1624507164,	 // (0x60d4031c) // 96 (0x60) 212 (0xd4) 3 (0x03) 28 (0x1c)  CRC: 0xF2F74EB6
	140563459,	 // (0x860d403) // 8 (0x08) 96 (0x60) 212 (0xd4) 3 (0x03)  CRC: 0x4194DE62
	470180052,	 // (0x1c0660d4) // 28 (0x1c) 6 (0x06) 96 (0x60) 212 (0xd4)  CRC: 0xCF039FB8
	436756508,	 // (0x1a08601c) // 26 (0x1a) 8 (0x08) 96 (0x60) 28 (0x1c)  CRC: 0xF27E26BD
	73454637,	 // (0x460d42d) // 4 (0x04) 96 (0x60) 212 (0xd4) 45 (0x2d)  CRC: 0x84D9A647
	-1012465654,	 // (0xc3a7000a) // 195 (0xc3) 167 (0xa7) 0 (0x00) 10 (0x0a)  CRC: 0xBF18F4AA
	973417923,	 // (0x3a052dc3) // 58 (0x3a) 5 (0x05) 45 (0x2d) 195 (0xc3)  CRC: 0x6DE88AA0
	419807004,	 // (0x1905bf1c) // 25 (0x19) 5 (0x05) 191 (0xbf) 28 (0x1c)  CRC: 0xDED55754
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0xF1C15102
	-238989054,	// CRC do Jardel: 0xF1C15102
	6,	//	synchronized?, exception table length
	589871,	// start: 9	end: 47
	3276800,	// target: 50	type: 0
	3276853,	// start: 50	end: 53
	3276800,	// target: 50	type: 0
	3997790,	// start: 61	end: 94
	6356992,	// target: 97	type: 0
	6357093,	// start: 97	end: 101
	6356992,	// target: 97	type: 0
	7209137,	// start: 110	end: 177
	11796480,	// target: 180	type: 0
	11796664,	// start: 180	end: 184
	11796480,	// target: 180	type: 0
//	3653: newArray(II)I
	446431243,	 // (0x1a9c000b) // 26 (0x1a) 156 (0x9c) 0 (0x00) 11 (0x0b)  CRC: 0xA7B706B2
	-1157620647,	 // (0xbb001c59) // 187 (0xbb) 0 (0x00) 28 (0x1c) 89 (0x59)  CRC: 0x4FFD37B4
	-1224729153,	 // (0xb7001dbf) // 183 (0xb7) 0 (0x00) 29 (0x1d) 191 (0xbf)  CRC: 0xC11EC12C
	440212240,	 // (0x1a3d1b10) // 26 (0x1a) 61 (0x3d) 27 (0x1b) 16 (0x10)  CRC: 0xA8D65FFF
	194969609,	 // (0xb9f0009) // 11 (0x0b) 159 (0x9f) 0 (0x00) 9 (0x09)  CRC: 0x4A309F78
	454035360,	 // (0x1b1007a0) // 27 (0x1b) 16 (0x10) 7 (0x07) 160 (0xa0)  CRC: 0x65954191
	465412,	 // (0x71a04) // 0 (0x00) 7 (0x07) 26 (0x1a) 4 (0x04)  CRC: 0x8543D9FD
	2017189888,	 // (0x783be000) // 120 (0x78) 59 (0x3b) 224 (0xe0) 0 (0x00)  CRC: 0xEE065A3E
	-1705423166,	 // (0x9a594ec2) // 154 (0x9a) 89 (0x59) 78 (0x4e) 194 (0xc2)  CRC: 0x87D8A807
	-1308604390,	 // (0xb200481a) // 178 (0xb2) 0 (0x00) 72 (0x48) 26 (0x1a)  CRC: 0x7BC09E0F
	1622278217,	 // (0x60b20049) // 96 (0x60) 178 (0xb2) 0 (0x00) 73 (0x49)  CRC: 0x40BF0E3C
	-1593828168,	 // (0xa1001cb8) // 161 (0xa1) 0 (0x00) 28 (0x1c) 184 (0xb8)  CRC: 0x3D863940
	1749504,	 // (0x1ab200) // 0 (0x00) 26 (0x1a) 178 (0xb2) 0 (0x00)  CRC: 0x03BCD6E4
	1209688242,	 // (0x481a60b2) // 72 (0x48) 26 (0x1a) 96 (0x60) 178 (0xb2)  CRC: 0x21A3ABA9
	4825344,	 // (0x49a100) // 0 (0x00) 73 (0x49) 161 (0xa1) 0 (0x00)  CRC: 0xA5483FB4
	249561244,	 // (0xee0009c) // 14 (0x0e) 224 (0xe0) 0 (0x00) 156 (0x9c)  CRC: 0xBC3C6550
	-1241508777,	 // (0xb6001457) // 182 (0xb6) 0 (0x00) 20 (0x14) 87 (0x57)  CRC: 0x18A6E4D1
	-536830785,	 // (0xe0009cbf) // 224 (0xe0) 0 (0x00) 156 (0x9c) 191 (0xbf)  CRC: 0x0DD8335D
	767796992,	 // (0x2dc3a700) // 45 (0x2d) 195 (0xc3) 167 (0xa7) 0 (0x00)  CRC: 0x11841043
	171574317,	 // (0xa3a042d) // 10 (0x0a) 58 (0x3a) 4 (0x04) 45 (0x2d)  CRC: 0x68E297DE
	-1021770561,	 // (0xc31904bf) // 195 (0xc3) 25 (0x19) 4 (0x04) 191 (0xbf)  CRC: 0xA9161EFD
	-536831399,	 // (0xe0009a59) // 224 (0xe0) 0 (0x00) 154 (0x9a) 89 (0x59)  CRC: 0x8DEA69FA
	1321382400,	 // (0x4ec2b200) // 78 (0x4e) 194 (0xc2) 178 (0xb2) 0 (0x00)  CRC: 0x6E46F7B0
	1251606556,	 // (0x4a9a001c) // 74 (0x4a) 154 (0x9a) 0 (0x00) 28 (0x1c)  CRC: 0xD8AECB9E
	304003072,	 // (0x121eb800) // 18 (0x12) 30 (0x1e) 184 (0xb8) 0 (0x00)  CRC: 0x78F48FBB
	146276378,	 // (0x8b8001a) // 8 (0x08) 184 (0xb8) 0 (0x00) 26 (0x1a)  CRC: 0x8B200E59
	-1308603750,	 // (0xb2004a9a) // 178 (0xb2) 0 (0x00) 74 (0x4a) 154 (0x9a)  CRC: 0xEA4F2AEE
	974848,	 // (0xee000) // 0 (0x00) 14 (0x0e) 224 (0xe0) 0 (0x00)  CRC: 0x98C13A5B
	-1665794028,	 // (0x9cb60014) // 156 (0x9c) 182 (0xb6) 0 (0x00) 20 (0x14)  CRC: 0xB6715D2A
	1474298012,	 // (0x57e0009c) // 87 (0x57) 224 (0xe0) 0 (0x00) 156 (0x9c)  CRC: 0x80076E4B
	-1087519833,	 // (0xbf2dc3a7) // 191 (0xbf) 45 (0x2d) 195 (0xc3) 167 (0xa7)  CRC: 0xC265D08C
	670213,	 // (0xa3a05) // 0 (0x00) 10 (0x0a) 58 (0x3a) 5 (0x05)  CRC: 0xAE39102E
	767760645,	 // (0x2dc31905) // 45 (0x2d) 195 (0xc3) 25 (0x19) 5 (0x05)  CRC: 0x42B497A5
	-1075838822,	 // (0xbfe0009a) // 191 (0xbf) 224 (0xe0) 0 (0x00) 154 (0x9a)  CRC: 0x91400348
	1496974530,	 // (0x593a04c2) // 89 (0x59) 58 (0x3a) 4 (0x04) 194 (0xc2)  CRC: 0x174A7538
	-1308604134,	 // (0xb200491a) // 178 (0xb2) 0 (0x00) 73 (0x49) 26 (0x1a)  CRC: 0xFB14AC05
	1689452617,	 // (0x64b30049) // 100 (0x64) 179 (0xb3) 0 (0x00) 73 (0x49)  CRC: 0x185B79E1
	-1308603842,	 // (0xb2004a3e) // 178 (0xb2) 0 (0x00) 74 (0x4a) 62 (0x3e)  CRC: 0x6A6588F3
	487022803,	 // (0x1d0760d3) // 29 (0x1d) 7 (0x07) 96 (0x60) 211 (0xd3)  CRC: 0x5E0A29AA
	-1291826510,	 // (0xb3004ab2) // 179 (0xb3) 0 (0x00) 74 (0x4a) 178 (0xb2)  CRC: 0x780281A1
	4922631,	 // (0x4b1d07) // 0 (0x00) 75 (0x4b) 29 (0x1d) 7 (0x07)  CRC: 0x235C548B
	1624513971,	 // (0x60d41db3) // 96 (0x60) 212 (0xd4) 29 (0x1d) 179 (0xb3)  CRC: 0x4A6FA879
	4960768,	 // (0x4bb200) // 0 (0x00) 75 (0x4b) 178 (0xb2) 0 (0x00)  CRC: 0x4894C0DC
	1226691610,	 // (0x491dd41a) // 73 (0x49) 29 (0x1d) 212 (0xd4) 26 (0x1a)  CRC: 0x100068FA
	486891732,	 // (0x1d0560d4) // 29 (0x1d) 5 (0x05) 96 (0x60) 212 (0xd4)  CRC: 0xE140DF5C
	-1308604643,	 // (0xb200471d) // 178 (0xb2) 0 (0x00) 71 (0x47) 29 (0x1d)  CRC: 0x7D27C11C
	268853460,	 // (0x100660d4) // 16 (0x10) 6 (0x06) 96 (0x60) 212 (0xd4)  CRC: 0xDBA14ECE
	52234336,	 // (0x31d0860) // 3 (0x03) 29 (0x1d) 8 (0x08) 96 (0x60)  CRC: 0xB563D932
	-736420602,	 // (0xd41b1d06) // 212 (0xd4) 27 (0x1b) 29 (0x1d) 6 (0x06)  CRC: 0x3DD9534B
	1624513565,	 // (0x60d41c1d) // 96 (0x60) 212 (0xd4) 28 (0x1c) 29 (0x1d)  CRC: 0x7005E149
	73454617,	 // (0x460d419) // 4 (0x04) 96 (0x60) 212 (0xd4) 25 (0x19)  CRC: 0xCD8C3D4E
	79931136,	 // (0x4c3a700) // 4 (0x04) 195 (0xc3) 167 (0xa7) 0 (0x00)  CRC: 0x9E94A115
	188352025,	 // (0xb3a0619) // 11 (0x0b) 58 (0x3a) 6 (0x06) 25 (0x19)  CRC: 0x52E835F8
	79894790,	 // (0x4c31906) // 4 (0x04) 195 (0xc3) 25 (0x19) 6 (0x06)  CRC: 0x4D92A78E
	-1088574464,	 // (0xbf1dac00) // 191 (0xbf) 29 (0x1d) 172 (0xac)  CRC: 0xECDFD180
	-320876160,	// CRC do Jardel: 0xECDFD180
	6,	//	synchronized?, exception table length
	2359370,	// start: 36	end: 74
	5046272,	// target: 77	type: 0
	5046353,	// start: 77	end: 81
	5046272,	// target: 77	type: 0
	5898363,	// start: 90	end: 123
	8257536,	// target: 126	type: 0
	8257666,	// start: 126	end: 130
	8257536,	// target: 126	type: 0
	9175246,	// start: 140	end: 206
	13697024,	// target: 209	type: 0
	13697238,	// start: 209	end: 214
	13697024,	// target: 209	type: 0
//	3722: freeMemory()I
	-1207951609,	 // (0xb8001f07) // 184 (0xb8) 0 (0x00) 31 (0x1f) 7 (0x07)  CRC: 0x91F07570
	1756102656,	 // (0x68ac0000) // 104 (0x68) 172 (0xac)  CRC: 0xD0AE2B58
	-793892008,	// CRC do Jardel: 0xD0AE2B58
	0,	//	synchronized?, exception table length
//	3726: totalMemory()I
	-1308605945,	 // (0xb2004207) // 178 (0xb2) 0 (0x00) 66 (0x42) 7 (0x07)  CRC: 0xDDA430B5
	1756102656,	 // (0x68ac0000) // 104 (0x68) 172 (0xac)  CRC: 0x74554365
	1951744869,	// CRC do Jardel: 0x74554365
	0,	//	synchronized?, exception table length
//	3730: isValidObjectHandle(I)Z
	54321152,	 // (0x33ce000) // 3 (0x03) 60 (0x3c) 224 (0xe0) 0 (0x00)  CRC: 0x53B51BB7
	-1705423166,	 // (0x9a594ec2) // 154 (0x9a) 89 (0x59) 78 (0x4e) 194 (0xc2)  CRC: 0x758BE318
	-1308603587,	 // (0xb2004b3d) // 178 (0xb2) 0 (0x00) 75 (0x4b) 61 (0x3d)  CRC: 0xFDA337E6
	479789077,	 // (0x1c990015) // 28 (0x1c) 153 (0x99) 0 (0x00) 21 (0x15)  CRC: 0xDA5F6CCF
	438083584,	 // (0x1a1ca000) // 26 (0x1a) 28 (0x1c) 160 (0xa0) 0 (0x00)  CRC: 0x05D7C8BE
	134495399,	 // (0x8043ca7) // 8 (0x08) 4 (0x04) 60 (0x3c) 167 (0xa7)  CRC: 0xF6CF26C7
	728071,	 // (0xb1c07) // 0 (0x00) 11 (0x0b) 28 (0x1c) 7 (0x07)  CRC: 0x4DE05689
	1624456615,	 // (0x60d33da7) // 96 (0x60) 211 (0xd3) 61 (0x3d) 167 (0xa7)  CRC: 0xA5B56562
	-1233469,	 // (0xffed2dc3) // 255 (0xff) 237 (0xed) 45 (0x2d) 195 (0xc3)  CRC: 0x18187B37
	-1493169606,	 // (0xa7000a3a) // 167 (0xa7) 0 (0x00) 10 (0x0a) 58 (0x3a)  CRC: 0xE4C21930
	70107929,	 // (0x42dc319) // 4 (0x04) 45 (0x2d) 195 (0xc3) 25 (0x19)  CRC: 0x8042B3F5
	79633324,	 // (0x4bf1bac) // 4 (0x04) 191 (0xbf) 27 (0x1b) 172 (0xac)  CRC: 0x495F31B4
	1230975412,	// CRC do Jardel: 0x495F31B4
	2,	//	synchronized?, exception table length
	524324,	// start: 8	end: 36
	2555904,	// target: 39	type: 0
	2555947,	// start: 39	end: 43
	2555904,	// target: 39	type: 0
//	3748: writeBarrier(II)V
	54336154,	 // (0x33d1a9a) // 3 (0x03) 61 (0x3d) 26 (0x1a) 154 (0x9a)  CRC: 0x24387DE0
	768768,	 // (0xbbb00) // 0 (0x00) 11 (0x0b) 187 (0xbb) 0 (0x00)  CRC: 0x29E8E45B
	542750464,	 // (0x2059b700) // 32 (0x20) 89 (0x59) 183 (0xb7) 0 (0x00)  CRC: 0xCBF58E5D
	566222848,	 // (0x21bfe000) // 33 (0x21) 191 (0xbf) 224 (0xe0) 0 (0x00)  CRC: 0xC20BBBAD
	-1705428476,	 // (0x9a593a04) // 154 (0x9a) 89 (0x59) 58 (0x3a) 4 (0x04)  CRC: 0x19B31CEB
	-1038429286,	 // (0xc21ad39a) // 194 (0xc2) 26 (0x1a) 211 (0xd3) 154 (0x9a)  CRC: 0xD493C71A
	465156,	 // (0x71904) // 0 (0x00) 7 (0x07) 25 (0x19) 4 (0x04)  CRC: 0xC192472F
	-1011803642,	 // (0xc3b11a06) // 195 (0xc3) 177 (0xb1) 26 (0x1a) 6 (0x06)  CRC: 0x6FAF6FC1
	1624454661,	 // (0x60d33605) // 96 (0x60) 211 (0xd3) 54 (0x36) 5 (0x05)  CRC: 0x083779D7
	352650400,	 // (0x150504a0) // 21 (0x15) 5 (0x05) 4 (0x04) 160 (0xa0)  CRC: 0x7BC3468A
	328765,	 // (0x5043d) // 0 (0x00) 5 (0x05) 4 (0x04) 61 (0x3d)  CRC: 0xFBA1D4FB
	352688640,	 // (0x15059a00) // 21 (0x15) 5 (0x05) 154 (0x9a) 0 (0x00)  CRC: 0x21034D37
	404358240,	 // (0x181a0460) // 24 (0x18) 26 (0x1a) 4 (0x04) 96 (0x60)  CRC: 0xCEC1CF0F
	-753861280,	 // (0xd310fd60) // 211 (0xd3) 16 (0x10) 253 (0xfd) 96 (0x60)  CRC: 0x10B9CBEC
	1042142014,	 // (0x3e1dd33e) // 62 (0x3e) 29 (0x1d) 211 (0xd3) 62 (0x3e)  CRC: 0xBDF2D6D7
	486808440,	 // (0x1d041b78) // 29 (0x1d) 4 (0x04) 27 (0x1b) 120 (0x78)  CRC: 0x7871B662
	2123956229,	 // (0x7e990005) // 126 (0x7e) 153 (0x99) 0 (0x00) 5 (0x05)  CRC: 0x20C92B72
	71113881,	 // (0x43d1c99) // 4 (0x04) 61 (0x3d) 28 (0x1c) 153 (0x99)  CRC: 0x106494B9
	2235091,	 // (0x221ad3) // 0 (0x00) 34 (0x22) 26 (0x1a) 211 (0xd3)  CRC: 0x857F5E26
	991566688,	 // (0x3b1a1b60) // 59 (0x3b) 26 (0x1a) 27 (0x1b) 96 (0x60)  CRC: 0x0E662E71
	-751434219,	 // (0xd3360615) // 211 (0xd3) 54 (0x36) 6 (0x06) 21 (0x15)  CRC: 0x410303C6
	110690324,	 // (0x6990014) // 6 (0x06) 153 (0x99) 0 (0x00) 20 (0x14)  CRC: 0x611B9082
	352718854,	 // (0x15061006) // 21 (0x15) 6 (0x06) 16 (0x10) 6 (0x06)  CRC: 0x67852EC8
	1624486400,	 // (0x60d3b200) // 96 (0x60) 211 (0xd3) 178 (0xb2) 0 (0x00)  CRC: 0x3D8636BA
	1201602568,	 // (0x479f0008) // 71 (0x47) 159 (0x9f) 0 (0x00) 8 (0x08)  CRC: 0x17EB0298
	352761856,	 // (0x1506b800) // 21 (0x15) 6 (0x06) 184 (0xb8) 0 (0x00)  CRC: 0x9FBB8865
	186188995,	 // (0xb1904c3) // 11 (0x0b) 25 (0x19) 4 (0x04) 195 (0xc3)  CRC: 0xB2F0B58E
	-1493169350,	 // (0xa7000b3a) // 167 (0xa7) 0 (0x00) 11 (0x0b) 58 (0x3a)  CRC: 0x70EBDD41
	119080131,	 // (0x71904c3) // 7 (0x07) 25 (0x19) 4 (0x04) 195 (0xc3)  CRC: 0xD9249D94
	419938225,	 // (0x1907bfb1) // 25 (0x19) 7 (0x07) 191 (0xbf) 177 (0xb1)  CRC: 0xDFC6AC04
	-540627964,	// CRC do Jardel: 0xDFC6AC04
	3,	//	synchronized?, exception table length
	1376285,	// start: 21	end: 29
	7274496,	// target: 111	type: 0
	1966188,	// start: 30	end: 108
	7274496,	// target: 111	type: 0
	7274612,	// start: 111	end: 116
	7274496,	// target: 111	type: 0
//	3786: log(Ljava/lang/String;I)V
	716701730,	 // (0x2ab80022) // 42 (0x2a) 184 (0xb8) 0 (0x00) 34 (0x22)  CRC: 0xD96C38E1
	304330752,	 // (0x1223b800) // 18 (0x12) 35 (0x23) 184 (0xb8) 0 (0x00)  CRC: 0x49FAC638
	572241920,	 // (0x221bb800) // 34 (0x22) 27 (0x1b) 184 (0xb8) 0 (0x00)  CRC: 0x2C7B6B60
	605169080,	 // (0x241225b8) // 36 (0x24) 18 (0x12) 37 (0x25) 184 (0xb8)  CRC: 0x42D77F7D
	2273536,	 // (0x22b100) // 0 (0x00) 34 (0x22) 177 (0xb1)  CRC: 0xB9FF2DF2
	-1174458894,	// CRC do Jardel: 0xB9FF2DF2
	0,	//	synchronized?, exception table length
//	3793: log(Ljava/lang/String;)V
	716701730,	 // (0x2ab80022) // 42 (0x2a) 184 (0xb8) 0 (0x00) 34 (0x22)  CRC: 0xD96C38E1
	304461824,	 // (0x1225b800) // 18 (0x12) 37 (0x25) 184 (0xb8) 0 (0x00)  CRC: 0xAC2C799E
	582025216,	 // (0x22b10000) // 34 (0x22) 177 (0xb1)  CRC: 0x3A1208BB
	974260411,	// CRC do Jardel: 0x3A1208BB
	0,	//	synchronized?, exception table length
//	com.jopdesign.sys.Scheduler
//	3798: <init>(I)V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	704886016,	 // (0x2a03b500) // 42 (0x2a) 3 (0x03) 181 (0xb5) 0 (0x00)  CRC: 0xB8167442
	69862325,	 // (0x42a03b5) // 4 (0x04) 42 (0x2a) 3 (0x03) 181 (0xb5)  CRC: 0x52CBAE3D
	253952,	 // (0x3e000) // 0 (0x00) 3 (0x03) 224 (0xe0) 0 (0x00)  CRC: 0xF70132A4
	-1642386861,	 // (0x9e1b2a53) // 158 (0x9e) 27 (0x1b) 42 (0x2a) 83 (0x53)  CRC: 0x84093956
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x6643E060
	1715724384,	// CRC do Jardel: 0x6643E060
	0,	//	synchronized?, exception table length
//	3806: run()V
	-1308586342,	 // (0xb2008e9a) // 178 (0xb2) 0 (0x00) 142 (0x8e) 154 (0x9a)  CRC: 0x46FEDAD7
	307671,	 // (0x4b1d7) // 0 (0x00) 4 (0x04) 177 (0xb1) 215 (0xd7)  CRC: 0x43A340BB
	1009443328,	 // (0x3c2ae200) // 60 (0x3c) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xFA8398A0
	19575808,	 // (0x12ab400) // 1 (0x01) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0xEB0EC9D7
	70400518,	 // (0x4323a06) // 4 (0x04) 50 (0x32) 58 (0x3a) 6 (0x06)  CRC: 0xF2D027DD
	419830709,	 // (0x19061bb5) // 25 (0x19) 6 (0x06) 27 (0x1b) 181 (0xb5)  CRC: 0xE7748C70
	593984,	 // (0x91040) // 0 (0x00) 9 (0x09) 16 (0x10) 64 (0x40)  CRC: 0xEFD4A3B1
	419881472,	 // (0x1906e200) // 25 (0x19) 6 (0x06) 226 (0xe2) 0 (0x00)  CRC: 0xB80D8B27
	135991360,	 // (0x81b1040) // 8 (0x08) 27 (0x1b) 16 (0x10) 64 (0x40)  CRC: 0xB4A6A415
	1678008539,	 // (0x640460db) // 100 (0x64) 4 (0x04) 96 (0x60) 219 (0xdb)  CRC: 0x0666D779
	287772734,	 // (0x1127103e) // 17 (0x11) 39 (0x27) 16 (0x10) 62 (0x3e)  CRC: 0xC9E553D4
	276943165,	 // (0x1081d13d) // 16 (0x10) 129 (0x81) 209 (0xd1) 61 (0x3d)  CRC: 0x0AE7371E
	716439555,	 // (0x2ab40003) // 42 (0x2a) 180 (0xb4) 0 (0x00) 3 (0x03)  CRC: 0xB6B52B8F
	73677851,	 // (0x4643c1b) // 4 (0x04) 100 (0x64) 60 (0x3c) 27 (0x1b)  CRC: 0x48B0C480
	-1644151254,	 // (0x9e003e2a) // 158 (0x9e) 0 (0x00) 62 (0x3e) 42 (0x2a)  CRC: 0x97D1DCD0
	-503315941,	 // (0xe200021b) // 226 (0xe2) 0 (0x00) 2 (0x02) 27 (0x1b)  CRC: 0x6720AD69
	772055040,	 // (0x2e04a000) // 46 (0x2e) 4 (0x04) 160 (0xa0) 0 (0x00)  CRC: 0x1B91270D
	111607857,	 // (0x6a70031) // 6 (0x06) 167 (0xa7) 0 (0x00) 49 (0x31)  CRC: 0xF6DAC2AC
	719454210,	 // (0x2ae20002) // 42 (0x2a) 226 (0xe2) 0 (0x00) 2 (0x02)  CRC: 0xCF578663
	456038912,	 // (0x1b2e9a00) // 27 (0x1b) 46 (0x2e) 154 (0x9a) 0 (0x00)  CRC: 0xEE448E79
	556458496,	 // (0x212ae200) // 33 (0x21) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xCE1DA6B5
	1781276,	 // (0x1b2e1c) // 0 (0x00) 27 (0x1b) 46 (0x2e) 28 (0x1c)  CRC: 0x1DFD35B4
	1681261589,	 // (0x64360415) // 100 (0x64) 54 (0x36) 4 (0x04) 21 (0x15)  CRC: 0x29657E5F
	68223176,	 // (0x41100c8) // 4 (0x04) 17 (0x11) 0 (0x00) 200 (0xc8)  CRC: 0x854BD991
	-1577056601,	 // (0xa20006a7) // 162 (0xa2) 0 (0x00) 6 (0x06) 167 (0xa7)  CRC: 0x7A1CD34B
	1250564,	 // (0x131504) // 0 (0x00) 19 (0x13) 21 (0x15) 4 (0x04)  CRC: 0x26F1C0AC
	497156102,	 // (0x1da20006) // 29 (0x1d) 162 (0xa2) 0 (0x00) 6 (0x06)  CRC: 0x2F3B840A
	352599579,	 // (0x15043e1b) // 21 (0x15) 4 (0x04) 62 (0x3e) 27 (0x1b)  CRC: 0x91608799
	39861415,	 // (0x2603ca7) // 2 (0x02) 96 (0x60) 60 (0x3c) 167 (0xa7)  CRC: 0x65E43C6D
	-3921381,	 // (0xffc42a1b) // 255 (0xff) 196 (0xc4) 42 (0x2a) 27 (0x1b)  CRC: 0x306FB0F8
	-1258290148,	 // (0xb500041c) // 181 (0xb5) 0 (0x00) 4 (0x04) 28 (0x1c)  CRC: 0x99513166
	492834846,	 // (0x1d60101e) // 29 (0x1d) 96 (0x60) 16 (0x10) 30 (0x1e)  CRC: 0x8566AE34
	-701832704,	 // (0xd62ae200) // 214 (0xd6) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xE6C9FE15
	18559668,	 // (0x11b32b4) // 1 (0x01) 27 (0x1b) 50 (0x32) 180 (0xb4)  CRC: 0x0112F165
	593951,	 // (0x9101f) // 0 (0x00) 9 (0x09) 16 (0x10) 31 (0x1f)  CRC: 0x0FB07F34
	-703586347,	 // (0xd6101fd5) // 214 (0xd6) 16 (0x10) 31 (0x1f) 213 (0xd5)  CRC: 0x09D5BAA0
	90233360,	 // (0x560da10) // 5 (0x05) 96 (0x60) 218 (0xda) 16 (0x10)  CRC: 0xC696C34C
	534056970,	 // (0x1fd5100a) // 31 (0x1f) 213 (0xd5) 16 (0x10) 10 (0x0a)  CRC: 0x9A3C78BE
	1624825856,	 // (0x60d8e000) // 96 (0x60) 216 (0xd8) 224 (0xe0) 0 (0x00)  CRC: 0x1568D924
	-1629486947,	 // (0x9ee0009d) // 158 (0x9e) 224 (0xe0) 0 (0x00) 157 (0x9d)  CRC: 0xE6E0041C
	-1275066830,	 // (0xb4000632) // 180 (0xb4) 0 (0x00) 6 (0x06) 50 (0x32)  CRC: 0xCBAC4F43
	973412613,	 // (0x3a051905) // 58 (0x3a) 5 (0x05) 25 (0x19) 5 (0x05)  CRC: 0x2B0208EC
	-503316199,	 // (0xe2000119) // 226 (0xe2) 0 (0x00) 1 (0x01) 25 (0x19)  CRC: 0x1548555A
	95682564,	 // (0x5b40004) // 5 (0x05) 180 (0xb4) 0 (0x00) 4 (0x04)  CRC: 0x223FA778
	842663440,	 // (0x323a0610) // 50 (0x32) 58 (0x3a) 6 (0x06) 16 (0x10)  CRC: 0x1CC195A9
	534068249,	 // (0x1fd53c19) // 31 (0x1f) 213 (0xd5) 60 (0x3c) 25 (0x19)  CRC: 0xF2FB3A41
	115474440,	 // (0x6e20008) // 6 (0x06) 226 (0xe2) 0 (0x00) 8 (0x08)  CRC: 0xECA4914F
	272636688,	 // (0x10401b10) // 16 (0x10) 64 (0x40) 27 (0x1b) 16 (0x10)  CRC: 0x6F4AD209
	1080296544,	 // (0x40640460) // 64 (0x40) 100 (0x64) 4 (0x04) 96 (0x60)  CRC: 0xD8B282F8
	-602897967,	 // (0xdc1081d1) // 220 (0xdc) 16 (0x10) 129 (0x81) 209 (0xd1)  CRC: 0xB879B21C
	1024466645,	 // (0x3d101ed5) // 61 (0x3d) 16 (0x10) 30 (0x1e) 213 (0xd5)  CRC: 0xB482B54F
	476320000,	 // (0x1c641100) // 28 (0x1c) 100 (0x64) 17 (0x11) 0 (0x00)  CRC: 0x400D07F6
	-928907250,	 // (0xc8a2000e) // 200 (0xc8) 162 (0xa2) 0 (0x00) 14 (0x0e)  CRC: 0x3DC7D571
	470876360,	 // (0x1c1100c8) // 28 (0x1c) 17 (0x11) 0 (0x00) 200 (0xc8)  CRC: 0x4E60E044
	1611694546,	 // (0x601081d2) // 96 (0x60) 16 (0x10) 129 (0x81) 210 (0xd2)  CRC: 0x0C42434B
	-1493169904,	 // (0xa7000910) // 167 (0xa7) 0 (0x00) 9 (0x09) 16 (0x10)  CRC: 0xCB84C75F
	517279873,	 // (0x1ed51081) // 30 (0x1e) 213 (0xd5) 16 (0x10) 129 (0x81)  CRC: 0xE2B971B6
	-769927164,	 // (0xd21bd804) // 210 (0xd2) 27 (0x1b) 216 (0xd8) 4 (0x04)  CRC: 0xE5EBA5BE
	276878001,	 // (0x1080d2b1) // 16 (0x10) 128 (0x80) 210 (0xd2) 177 (0xb1)  CRC: 0x094F418B
	156189067,	// CRC do Jardel: 0x094F418B
	0,	//	synchronized?, exception table length
//	3867: allocArrays()V
	710521856,	 // (0x2a59b400) // 42 (0x2a) 89 (0x59) 180 (0xb4) 0 (0x00)  CRC: 0x7344BCEB
	50618549,	 // (0x30460b5) // 3 (0x03) 4 (0x04) 96 (0x60) 181 (0xb5)  CRC: 0x50FA1656
	207402,	 // (0x32a2a) // 0 (0x00) 3 (0x03) 42 (0x2a) 42 (0x2a)  CRC: 0xEB947C37
	-1275067459,	 // (0xb40003bd) // 180 (0xb4) 0 (0x00) 3 (0x03) 189 (0xbd)  CRC: 0xC8A870FA
	779008,	 // (0xbe300) // 0 (0x00) 11 (0x0b) 227 (0xe3) 0 (0x00)  CRC: 0xDBBD7314
	19540660,	 // (0x12a2ab4) // 1 (0x01) 42 (0x2a) 42 (0x2a) 180 (0xb4)  CRC: 0x78D7B96A
	244746,	 // (0x3bc0a) // 0 (0x00) 3 (0x03) 188 (0xbc) 10 (0x0a)  CRC: 0x2A8D4BFE
	-486539222,	 // (0xe300002a) // 227 (0xe3) 0 (0x00) 0 (0x00) 42 (0x2a)  CRC: 0x2010144D
	716439555,	 // (0x2ab40003) // 42 (0x2a) 180 (0xb4) 0 (0x00) 3 (0x03)  CRC: 0x87D944C3
	-1140137216,	 // (0xbc0ae300) // 188 (0xbc) 10 (0x0a) 227 (0xe3) 0 (0x00)  CRC: 0x67AC9632
	36317876,	 // (0x22a2ab4) // 2 (0x02) 42 (0x2a) 42 (0x2a) 180 (0xb4)  CRC: 0xA133E0D1
	197732,	 // (0x30464) // 0 (0x00) 3 (0x03) 4 (0x04) 100 (0x64)  CRC: 0x7021EF80
	-1258289743,	 // (0xb50005b1) // 181 (0xb5) 0 (0x00) 5 (0x05) 177 (0xb1)  CRC: 0x0AF6AC22
	183938082,	// CRC do Jardel: 0x0AF6AC22
	0,	//	synchronized?, exception table length
//	3882: addMain()V
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x285FE67C
	62586891,	 // (0x3bb000b) // 3 (0x03) 187 (0xbb) 0 (0x00) 11 (0x0b)  CRC: 0x7E68CAA0
	1493697463,	 // (0x590803b7) // 89 (0x59) 8 (0x08) 3 (0x03) 183 (0xb7)  CRC: 0xDBA9A8B9
	807722,	 // (0xc532a) // 0 (0x00) 12 (0x0c) 83 (0x53) 42 (0x2a)  CRC: 0x7F0FE92D
	-503316221,	 // (0xe2000103) // 226 (0xe2) 0 (0x00) 1 (0x01) 3 (0x03)  CRC: 0x9D1A8D7A
	839169280,	 // (0x3204b500) // 50 (0x32) 4 (0x04) 181 (0xb5) 0 (0x00)  CRC: 0x1C5E6912
	86696448,	 // (0x52ae200) // 5 (0x05) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xD09E8C72
	197455,	 // (0x3034f) // 0 (0x00) 3 (0x03) 3 (0x03) 79 (0x4f)  CRC: 0x9B0444B5
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x49CBC54A
	53609397,	 // (0x33203b5) // 3 (0x03) 50 (0x32) 3 (0x03) 181 (0xb5)  CRC: 0xA917F38E
	504064,	 // (0x7b100) // 0 (0x00) 7 (0x07) 177 (0xb1)  CRC: 0x5986398F
	1501968783,	// CRC do Jardel: 0x5986398F
	0,	//	synchronized?, exception table length
//	3895: <clinit>()V
	-1207956042,	 // (0xb8000db6) // 184 (0xb8) 0 (0x00) 13 (0x0d) 182 (0xb6)  CRC: 0xE8BD28F6
	975104,	 // (0xee100) // 0 (0x00) 14 (0x0e) 225 (0xe1) 0 (0x00)  CRC: 0x50BB751C
	-1646264163,	 // (0x9de0009d) // 157 (0x9d) 224 (0xe0) 0 (0x00) 157 (0x9d)  CRC: 0x80CF37F6
	-1275065411,	 // (0xb4000bbd) // 180 (0xb4) 0 (0x00) 11 (0x0b) 189 (0xbd)  CRC: 0xE3A96DE0
	1040640,	 // (0xfe100) // 0 (0x00) 15 (0x0f) 225 (0xe1) 0 (0x00)  CRC: 0x813BFE33
	-1643955430,	 // (0x9e033b1a) // 158 (0x9e) 3 (0x03) 59 (0x3b) 26 (0x1a)  CRC: 0xE6C050C1
	-536830540,	 // (0xe0009db4) // 224 (0xe0) 0 (0x00) 157 (0x9d) 180 (0xb4)  CRC: 0x34365A34
	762368,	 // (0xba200) // 0 (0x00) 11 (0x0b) 162 (0xa2) 0 (0x00)  CRC: 0xD38E3374
	331022351,	 // (0x13bb000f) // 19 (0x13) 187 (0xbb) 0 (0x00) 15 (0x0f)  CRC: 0x59989516
	1494923008,	 // (0x591ab700) // 89 (0x59) 26 (0x1a) 183 (0xb7) 0 (0x00)  CRC: 0x0099247C
	274143748,	 // (0x10571a04) // 16 (0x10) 87 (0x57) 26 (0x1a) 4 (0x04)  CRC: 0x083C3955
	1614522367,	 // (0x603ba7ff) // 96 (0x60) 59 (0x3b) 167 (0xa7) 255 (0xff)  CRC: 0xE8FFBAC4
	-374276096,	 // (0xe9b10000) // 233 (0xe9) 177 (0xb1)  CRC: 0x8297467C
	-2104015236,	// CRC do Jardel: 0x8297467C
	0,	//	synchronized?, exception table length
//	java.lang.OutOfMemoryError
//	3910: <init>()V
	705823159,	 // (0x2a1201b7) // 42 (0x2a) 18 (0x12) 1 (0x01) 183 (0xb7)  CRC: 0xA14B6189
	176384,	 // (0x2b100) // 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0x793FF3E5
	2034234341,	// CRC do Jardel: 0x793FF3E5
	0,	//	synchronized?, exception table length
//	3914: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	com.jopdesign.sys.RtThreadImpl$CMPStart
//	3918: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	3922: run()V
	51413202,	 // (0x31080d2) // 3 (0x03) 16 (0x10) 128 (0x80) 210 (0xd2)  CRC: 0xCDBF5678
	51415250,	 // (0x31088d2) // 3 (0x03) 16 (0x10) 136 (0x88) 210 (0xd2)  CRC: 0x5E8751AB
	-536830240,	 // (0xe0009ee0) // 224 (0xe0) 0 (0x00) 158 (0x9e) 224 (0xe0)  CRC: 0x0C4A27C3
	11318272,	 // (0xacb400) // 0 (0x00) 172 (0xac) 180 (0xb4) 0 (0x00)  CRC: 0x190D13AC
	103959555,	 // (0x6324c03) // 6 (0x06) 50 (0x32) 76 (0x4c) 3 (0x03)  CRC: 0xE9086715
	1025256372,	 // (0x3d1c2bb4) // 61 (0x3d) 28 (0x1c) 43 (0x2b) 180 (0xb4)  CRC: 0x71351087
	238080,	 // (0x3a200) // 0 (0x00) 3 (0x03) 162 (0xa2) 0 (0x00)  CRC: 0xF1A5D9FE
	321643008,	 // (0x132be200) // 19 (0x13) 43 (0x2b) 226 (0xe2) 0 (0x00)  CRC: 0x62EB1DBC
	18625208,	 // (0x11c32b8) // 1 (0x01) 28 (0x1c) 50 (0x32) 184 (0xb8)  CRC: 0x131198C6
	203780,	 // (0x31c04) // 0 (0x00) 3 (0x03) 28 (0x1c) 4 (0x04)  CRC: 0xCE9B2B4A
	1614653439,	 // (0x603da7ff) // 96 (0x60) 61 (0x3d) 167 (0xa7) 255 (0xff)  CRC: 0xAC863BD2
	-337641300,	 // (0xebe000ac) // 235 (0xeb) 224 (0xe0) 0 (0x00) 172 (0xac)  CRC: 0x3546064B
	-1275066877,	 // (0xb4000603) // 180 (0xb4) 0 (0x00) 6 (0x06) 3 (0x03)  CRC: 0xFF18D15C
	733478916,	 // (0x2bb80004) // 43 (0x2b) 184 (0xb8) 0 (0x00) 4 (0x04)  CRC: 0x279DD530
	704951552,	 // (0x2a04b500) // 42 (0x2a) 4 (0x04) 181 (0xb5) 0 (0x00)  CRC: 0xA1A2AFFF
	266377,	 // (0x41089) // 0 (0x00) 4 (0x04) 16 (0x10) 137 (0x89)  CRC: 0x31002E6E
	-760086384,	 // (0xd2b20090) // 210 (0xd2) 178 (0xb2) 0 (0x00) 144 (0x90)  CRC: 0x45E1D631
	276943364,	 // (0x1081d204) // 16 (0x10) 129 (0x81) 210 (0xd2) 4 (0x04)  CRC: 0xD3B28589
	277467650,	 // (0x1089d202) // 16 (0x10) 137 (0x89) 210 (0xd2) 2 (0x02)  CRC: 0xD90A0216
	277402116,	 // (0x1088d204) // 16 (0x10) 136 (0x88) 210 (0xd2) 4 (0x04)  CRC: 0xE211482C
	276877991,	 // (0x1080d2a7) // 16 (0x10) 128 (0x80) 210 (0xd2) 167 (0xa7)  CRC: 0x4123D05C
	0,	 // (0x00) // 0 (0x00) 0 (0x00)  CRC: 0xAA02702F
	-1442680785,	// CRC do Jardel: 0xAA02702F
	0,	//	synchronized?, exception table length
//	java.io.InputStream
//	3946: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	3950: available()I
	61603840,	 // (0x3ac0000) // 3 (0x03) 172 (0xac)  CRC: 0x6000AA9C
	1610656412,	// CRC do Jardel: 0x6000AA9C
	0,	//	synchronized?, exception table length
//	3953: close()V
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xB9FF90C9
	-1174433591,	// CRC do Jardel: 0xB9FF90C9
	0,	//	synchronized?, exception table length
//	3956: mark(I)V
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xB9FF90C9
	-1174433591,	// CRC do Jardel: 0xB9FF90C9
	0,	//	synchronized?, exception table length
//	3959: markSupported()Z
	61603840,	 // (0x3ac0000) // 3 (0x03) 172 (0xac)  CRC: 0x6000AA9C
	1610656412,	// CRC do Jardel: 0x6000AA9C
	0,	//	synchronized?, exception table length
//	3962: read()I
//	abstract
//	3962: read([B)I
	707461931,	 // (0x2a2b032b) // 42 (0x2a) 43 (0x2b) 3 (0x03) 43 (0x2b)  CRC: 0x1EB4D38D
	-1095368702,	 // (0xbeb60002) // 190 (0xbe) 182 (0xb6) 0 (0x00) 2 (0x02)  CRC: 0x9009A1F6
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x79C48AB2
	2042923698,	// CRC do Jardel: 0x79C48AB2
	0,	//	synchronized?, exception table length
//	3967: read([BII)I
	479920143,	 // (0x1c9b000f) // 28 (0x1c) 155 (0x9b) 0 (0x00) 15 (0x0f)  CRC: 0xF60B797F
	496697355,	 // (0x1d9b000b) // 29 (0x1d) 155 (0x9b) 0 (0x00) 11 (0x0b)  CRC: 0xD96AF817
	471687211,	 // (0x1c1d602b) // 28 (0x1c) 29 (0x1d) 96 (0x60) 43 (0x2b)  CRC: 0x84797A13
	-1096548341,	 // (0xbea4000b) // 190 (0xbe) 164 (0xa4) 0 (0x00) 11 (0x0b)  CRC: 0x60C0E97D
	-1157627047,	 // (0xbb000359) // 187 (0xbb) 0 (0x00) 3 (0x03) 89 (0x59)  CRC: 0x5C5A2371
	-1224735553,	 // (0xb70004bf) // 183 (0xb7) 0 (0x00) 4 (0x04) 191 (0xbf)  CRC: 0x89988B93
	733911552,	 // (0x2bbe9a00) // 43 (0x2b) 190 (0xbe) 154 (0x9a) 0 (0x00)  CRC: 0xBC294B28
	84126723,	 // (0x503ac03) // 5 (0x05) 3 (0x03) 172 (0xac) 3 (0x03)  CRC: 0xD67F7218
	906237188,	 // (0x36041504) // 54 (0x36) 4 (0x04) 21 (0x15) 4 (0x04)  CRC: 0x4C7E4C11
	497156155,	 // (0x1da2003b) // 29 (0x1d) 162 (0xa2) 0 (0x00) 59 (0x3b)  CRC: 0x33351674
	716570629,	 // (0x2ab60005) // 42 (0x2a) 182 (0xb6) 0 (0x00) 5 (0x05)  CRC: 0x1B01AC36
	1496712604,	 // (0x5936059c) // 89 (0x59) 54 (0x36) 5 (0x05) 156 (0x9c)  CRC: 0x918B9496
	988420,	 // (0xf1504) // 0 (0x00) 15 (0x0f) 21 (0x15) 4 (0x04)  CRC: 0x5F45EBF0
	-1711274238,	 // (0x9a000702) // 154 (0x9a) 0 (0x00) 7 (0x07) 2 (0x02)  CRC: 0x920A05B2
	-1493170923,	 // (0xa7000515) // 167 (0xa7) 0 (0x00) 5 (0x05) 21 (0x15)  CRC: 0x7D43B0B5
	78392092,	 // (0x4ac2b1c) // 4 (0x04) 172 (0xac) 43 (0x2b) 28 (0x1c)  CRC: 0xC2AEF02A
	352608277,	 // (0x15046015) // 21 (0x15) 4 (0x04) 96 (0x60) 21 (0x15)  CRC: 0x56697B8F
	93410471,	 // (0x59154a7) // 5 (0x05) 145 (0x91) 84 (0x54) 167 (0xa7)  CRC: 0x17D01709
	1063430,	 // (0x103a06) // 0 (0x00) 16 (0x10) 58 (0x3a) 6 (0x06)  CRC: 0x9263F6F7
	352623104,	 // (0x15049a00) // 21 (0x15) 4 (0x04) 154 (0x9a) 0 (0x00)  CRC: 0xC1F650F1
	102303423,	 // (0x61906bf) // 6 (0x06) 25 (0x19) 6 (0x06) 191 (0xbf)  CRC: 0xC7E17ECF
	352627733,	 // (0x1504ac15) // 21 (0x15) 4 (0x04) 172 (0xac) 21 (0x15)  CRC: 0x27B0724A
	67395638,	 // (0x4046036) // 4 (0x04) 4 (0x04) 96 (0x60) 54 (0x36)  CRC: 0x30E4B386
	78118853,	 // (0x4a7ffc5) // 4 (0x04) 167 (0xa7) 255 (0xff) 197 (0xc5)  CRC: 0xEE4D2853
	352627712,	 // (0x1504ac00) // 21 (0x15) 4 (0x04) 172 (0xac)  CRC: 0xC5662050
	-983162800,	// CRC do Jardel: 0xC5662050
	2,	//	synchronized?, exception table length
	2621501,	// start: 40	end: 61
	4849670,	// target: 74	type: 6
	4063303,	// start: 62	end: 71
	4849670,	// target: 74	type: 6
//	3998: reset()V
	-1157626279,	 // (0xbb000659) // 187 (0xbb) 0 (0x00) 6 (0x06) 89 (0x59)  CRC: 0x91261246
	302495488,	 // (0x1207b700) // 18 (0x12) 7 (0x07) 183 (0xb7) 0 (0x00)  CRC: 0x91640BC3
	146735104,	 // (0x8bf0000) // 8 (0x08) 191 (0xbf)  CRC: 0x465886C9
	1180206793,	// CRC do Jardel: 0x465886C9
	0,	//	synchronized?, exception table length
//	4003: skip(J)J
	521404425,	 // (0x1f140009) // 31 (0x1f) 20 (0x14) 0 (0x00) 9 (0x09)  CRC: 0x04ACDECA
	-1801584631,	 // (0x949e0009) // 148 (0x94) 158 (0x9e) 0 (0x00) 9 (0x09)  CRC: 0x82C92CBD
	285737127,	 // (0x110800a7) // 17 (0x11) 8 (0x08) 0 (0x00) 167 (0xa7)  CRC: 0x7EB5E059
	335752,	 // (0x51f88) // 0 (0x00) 5 (0x05) 31 (0x1f) 136 (0x88)  CRC: 0x5EDA751F
	1042136072,	 // (0x3e1dbc08) // 62 (0x3e) 29 (0x1d) 188 (0xbc) 8 (0x08)  CRC: 0xD84A3177
	973348663,	 // (0x3a041f37) // 58 (0x3a) 4 (0x04) 31 (0x1f) 55 (0x37)  CRC: 0xB7EBC117
	85920148,	 // (0x51f0994) // 5 (0x05) 31 (0x1f) 9 (0x09) 148 (0x94)  CRC: 0xD1D16C1C
	-1644156374,	 // (0x9e002a2a) // 158 (0x9e) 0 (0x00) 42 (0x2a) 42 (0x2a)  CRC: 0x8DDCA40E
	419693343,	 // (0x1904031f) // 25 (0x19) 4 (0x04) 3 (0x03) 31 (0x1f)  CRC: 0x91A8D431
	495293598,	 // (0x1d85949e) // 29 (0x1d) 133 (0x85) 148 (0x94) 158 (0x9e)  CRC: 0xE471F3D2
	466343,	 // (0x71da7) // 0 (0x00) 7 (0x07) 29 (0x1d) 167 (0xa7)  CRC: 0x5BF80DF0
	335752,	 // (0x51f88) // 0 (0x00) 5 (0x05) 31 (0x1f) 136 (0x88)  CRC: 0x470539EB
	-1241513418,	 // (0xb6000236) // 182 (0xb6) 0 (0x00) 2 (0x02) 54 (0x36)  CRC: 0x3471244A
	118818717,	 // (0x715079d) // 7 (0x07) 21 (0x15) 7 (0x07) 157 (0x9d)  CRC: 0xDA4F715E
	435968,	 // (0x6a700) // 0 (0x00) 6 (0x06) 167 (0xa7) 0 (0x00)  CRC: 0x68DE12AE
	203363591,	 // (0xc1f1507) // 12 (0x0c) 31 (0x1f) 21 (0x15) 7 (0x07)  CRC: 0xAD9B8D73
	-2056961881,	 // (0x856540a7) // 133 (0x85) 101 (0x65) 64 (0x40) 167 (0xa7)  CRC: 0x34B4FA49
	-2746875,	 // (0xffd61605) // 255 (0xff) 214 (0xd6) 22 (0x16) 5 (0x05)  CRC: 0x5D15EF9A
	526757120,	 // (0x1f65ad00) // 31 (0x1f) 101 (0x65) 173 (0xad)  CRC: 0x6D860226
	1837498918,	// CRC do Jardel: 0x6D860226
	0,	//	synchronized?, exception table length
//	java.lang.StringBuffer
//	4024: <init>()V
	705695927,	 // (0x2a1010b7) // 42 (0x2a) 16 (0x10) 16 (0x10) 183 (0xb7)  CRC: 0x1DEB9B71
	110848,	 // (0x1b100) // 0 (0x00) 1 (0x01) 177 (0xb1)  CRC: 0x94A1291B
	-1801377509,	// CRC do Jardel: 0x94A1291B
	0,	//	synchronized?, exception table length
//	4028: <init>(I)V
	716636162,	 // (0x2ab70002) // 42 (0x2a) 183 (0xb7) 0 (0x00) 2 (0x02)  CRC: 0x8E024338
	706460677,	 // (0x2a1bbc05) // 42 (0x2a) 27 (0x1b) 188 (0xbc) 5 (0x05)  CRC: 0x6168D750
	-486538831,	 // (0xe30001b1) // 227 (0xe3) 0 (0x00) 1 (0x01) 177 (0xb1)  CRC: 0x96EB036E
	-1762983058,	// CRC do Jardel: 0x96EB036E
	0,	//	synchronized?, exception table length
//	4033: <init>(Ljava/lang/String;)V
	716636162,	 // (0x2ab70002) // 42 (0x2a) 183 (0xb7) 0 (0x00) 2 (0x02)  CRC: 0x8E024338
	707507712,	 // (0x2a2bb600) // 42 (0x2a) 43 (0x2b) 182 (0xb6) 0 (0x00)  CRC: 0xFC7691E1
	62193664,	 // (0x3b50000) // 3 (0x03) 181 (0xb5) 0 (0x00) 0 (0x00)  CRC: 0x12DC8ACF
	707441664,	 // (0x2a2ab400) // 42 (0x2a) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x78B673CE
	12322275,	 // (0xbc05e3) // 0 (0x00) 188 (0xbc) 5 (0x05) 227 (0xe3)  CRC: 0x1F866D2C
	66365,	 // (0x1033d) // 0 (0x00) 1 (0x01) 3 (0x03) 61 (0x3d)  CRC: 0xBFB92626
	472560640,	 // (0x1c2ab400) // 28 (0x1c) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x62D89330
	10616854,	 // (0xa20016) // 0 (0x00) 162 (0xa2) 0 (0x00) 22 (0x16)  CRC: 0x0FF07873
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x67DE03D8
	472637952,	 // (0x1c2be200) // 28 (0x1c) 43 (0x2b) 226 (0xe2) 0 (0x00)  CRC: 0xEC25354A
	1848405,	 // (0x1c3455) // 0 (0x00) 28 (0x1c) 52 (0x34) 85 (0x55)  CRC: 0xE130220C
	470048829,	 // (0x1c04603d) // 28 (0x1c) 4 (0x04) 96 (0x60) 61 (0x3d)  CRC: 0xE73BEFA4
	-1476400975,	 // (0xa7ffe8b1) // 167 (0xa7) 255 (0xff) 232 (0xe8) 177 (0xb1)  CRC: 0x7E643B59
	2120498009,	// CRC do Jardel: 0x7E643B59
	0,	//	synchronized?, exception table length
//	4048: toString()Ljava/lang/String;
	-1157626791,	 // (0xbb000459) // 187 (0xbb) 0 (0x00) 4 (0x04) 89 (0x59)  CRC: 0x92974B48
	716636165,	 // (0x2ab70005) // 42 (0x2a) 183 (0xb7) 0 (0x00) 5 (0x05)  CRC: 0x20D4A453
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0x459D916A
	1167954282,	// CRC do Jardel: 0x459D916A
	0,	//	synchronized?, exception table length
//	4053: append(Z)Ljava/lang/StringBuffer;
	463011850,	 // (0x1b99000a) // 27 (0x1b) 153 (0x99) 0 (0x00) 10 (0x0a)  CRC: 0xE82661C7
	705824438,	 // (0x2a1206b6) // 42 (0x2a) 18 (0x12) 6 (0x06) 182 (0xb6)  CRC: 0xD32CEFC0
	503850,	 // (0x7b02a) // 0 (0x00) 7 (0x07) 176 (0xb0) 42 (0x2a)  CRC: 0x835FC84A
	302560768,	 // (0x1208b600) // 18 (0x12) 8 (0x08) 182 (0xb6) 0 (0x00)  CRC: 0xF5B14707
	128974848,	 // (0x7b00000) // 7 (0x07) 176 (0xb0)  CRC: 0xC576C0A4
	-982073180,	// CRC do Jardel: 0xC576C0A4
	0,	//	synchronized?, exception table length
//	4060: append(C)Ljava/lang/StringBuffer;
	717367850,	 // (0x2ac22a2a) // 42 (0x2a) 194 (0xc2) 42 (0x2a) 42 (0x2a)  CRC: 0x4DE91119
	-1275068412,	 // (0xb4000004) // 180 (0xb4) 0 (0x00) 0 (0x00) 4 (0x04)  CRC: 0x584B22E5
	1622605833,	 // (0x60b70009) // 96 (0x60) 183 (0xb7) 0 (0x00) 9 (0x09)  CRC: 0xFBC4BF4B
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x56E129CD
	710521856,	 // (0x2a59b400) // 42 (0x2a) 89 (0x59) 180 (0xb4) 0 (0x00)  CRC: 0x21A99904
	5899360,	 // (0x5a0460) // 0 (0x00) 90 (0x5a) 4 (0x04) 96 (0x60)  CRC: 0x70673EFA
	-1258291173,	 // (0xb500001b) // 181 (0xb5) 0 (0x00) 0 (0x00) 27 (0x1b)  CRC: 0xB9F7967E
	1428826819,	 // (0x552a2ac3) // 85 (0x55) 42 (0x2a) 42 (0x2a) 195 (0xc3)  CRC: 0xC8ECF190
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0x9FD27F1B
	-1613594853,	// CRC do Jardel: 0x9FD27F1B
	65536,	//	synchronized?, exception table length
//	4071: append([C)Ljava/lang/StringBuffer;
	707461931,	 // (0x2a2b032b) // 42 (0x2a) 43 (0x2b) 3 (0x03) 43 (0x2b)  CRC: 0x1EB4D38D
	-1095368694,	 // (0xbeb6000a) // 190 (0xbe) 182 (0xb6) 0 (0x00) 10 (0x0a)  CRC: 0x69E339FC
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0xD4551798
	-732620904,	// CRC do Jardel: 0xD4551798
	0,	//	synchronized?, exception table length
//	4076: append([CII)Ljava/lang/StringBuffer;
	717367850,	 // (0x2ac22a2a) // 42 (0x2a) 194 (0xc2) 42 (0x2a) 42 (0x2a)  CRC: 0x4DE91119
	-1275068387,	 // (0xb400001d) // 180 (0xb4) 0 (0x00) 0 (0x00) 29 (0x1d)  CRC: 0x8AD80DFB
	1622605833,	 // (0x60b70009) // 96 (0x60) 183 (0xb7) 0 (0x00) 9 (0x09)  CRC: 0xD9311974
	707468330,	 // (0x2a2b1c2a) // 42 (0x2a) 43 (0x2b) 28 (0x1c) 42 (0x2a)  CRC: 0xED0CA600
	-503316182,	 // (0xe200012a) // 226 (0xe2) 0 (0x00) 1 (0x01) 42 (0x2a)  CRC: 0xE8DA658F
	-1275068387,	 // (0xb400001d) // 180 (0xb4) 0 (0x00) 0 (0x00) 29 (0x1d)  CRC: 0x49B29B40
	-1224733910,	 // (0xb7000b2a) // 183 (0xb7) 0 (0x00) 11 (0x0b) 42 (0x2a)  CRC: 0x63D84563
	1504968704,	 // (0x59b40000) // 89 (0x59) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x0826C9B9
	492877056,	 // (0x1d60b500) // 29 (0x1d) 96 (0x60) 181 (0xb5) 0 (0x00)  CRC: 0x120AAA91
	2763459,	 // (0x2a2ac3) // 0 (0x00) 42 (0x2a) 42 (0x2a) 195 (0xc3)  CRC: 0xC4C9740D
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0x2603A0CF
	637771983,	// CRC do Jardel: 0x2603A0CF
	65536,	//	synchronized?, exception table length
//	4089: append(I)Ljava/lang/StringBuffer;
	717358142,	 // (0x2ac2043e) // 42 (0x2a) 194 (0xc2) 4 (0x04) 62 (0x3e)  CRC: 0xF70B6F75
	463208460,	 // (0x1b9c000c) // 27 (0x1b) 156 (0x9c) 0 (0x00) 12 (0x0c)  CRC: 0xEEC15D60
	705703350,	 // (0x2a102db6) // 42 (0x2a) 16 (0x10) 45 (0x2d) 182 (0xb6)  CRC: 0x301D68B2
	808706,	 // (0xc5702) // 0 (0x00) 12 (0x0c) 87 (0x57) 2 (0x02)  CRC: 0x4AC592AE
	1040399644,	 // (0x3e033d1c) // 62 (0x3e) 3 (0x03) 61 (0x3d) 28 (0x1c)  CRC: 0x31163E0B
	270508544,	 // (0x101fa200) // 16 (0x10) 31 (0x1f) 162 (0xa2) 0 (0x00)  CRC: 0x99DBBF02
	635437215,	 // (0x25e0009f) // 37 (0x25) 224 (0xe0) 0 (0x00) 159 (0x9f)  CRC: 0x214073CF
	471535626,	 // (0x1c1b100a) // 28 (0x1c) 27 (0x1b) 16 (0x10) 10 (0x0a)  CRC: 0xEFA0F12D
	1880975376,	 // (0x701d6810) // 112 (0x70) 29 (0x1d) 104 (0x68) 16 (0x10)  CRC: 0x7E876BDE
	811635285,	 // (0x30609255) // 48 (0x30) 96 (0x60) 146 (0x92) 85 (0x55)  CRC: 0x69C0208C
	454036076,	 // (0x1b100a6c) // 27 (0x1b) 16 (0x10) 10 (0x0a) 108 (0x6c)  CRC: 0x3C394F6A
	1008441856,	 // (0x3c1b9a00) // 60 (0x3c) 27 (0x1b) 154 (0x9a) 0 (0x00)  CRC: 0x3BEAA9F7
	111607818,	 // (0x6a7000a) // 6 (0x06) 167 (0xa7) 0 (0x00) 10 (0x0a)  CRC: 0x8F6B2239
	470048829,	 // (0x1c04603d) // 28 (0x1c) 4 (0x04) 96 (0x60) 61 (0x3d)  CRC: 0x413EBB2C
	-1476404452,	 // (0xa7ffdb1c) // 167 (0xa7) 255 (0xff) 219 (0xdb) 28 (0x1c)  CRC: 0x9E82791F
	1008442112,	 // (0x3c1b9b00) // 60 (0x3c) 27 (0x1b) 155 (0x9b) 0 (0x00)  CRC: 0x2E17B8FB
	338354176,	 // (0x142ae000) // 20 (0x14) 42 (0x2a) 224 (0xe0) 0 (0x00)  CRC: 0xA5CC8122
	-1625606986,	 // (0x9f1b34b6) // 159 (0x9f) 27 (0x1b) 52 (0x34) 182 (0xb6)  CRC: 0x11D0545E
	808731,	 // (0xc571b) // 0 (0x00) 12 (0x0c) 87 (0x57) 27 (0x1b)  CRC: 0x33EB0BC6
	39861415,	 // (0x2603ca7) // 2 (0x02) 96 (0x60) 60 (0x3c) 167 (0xa7)  CRC: 0x783311B0
	-1168854,	 // (0xffee2a2a) // 255 (0xff) 238 (0xee) 42 (0x2a) 42 (0x2a)  CRC: 0xCAFC7CE3
	-1011875840,	 // (0xc3b00000) // 195 (0xc3) 176 (0xb0)  CRC: 0x13C591A0
	331714976,	// CRC do Jardel: 0x13C591A0
	65536,	//	synchronized?, exception table length
//	4113: append(J)Ljava/lang/StringBuffer;
	706678794,	 // (0x2a1f100a) // 42 (0x2a) 31 (0x1f) 16 (0x10) 10 (0x0a)  CRC: 0x4205BEAE
	-1207956042,	 // (0xb8000db6) // 184 (0xb8) 0 (0x00) 13 (0x0d) 182 (0xb6)  CRC: 0x934FF1BC
	503808,	 // (0x7b000) // 0 (0x00) 7 (0x07) 176 (0xb0)  CRC: 0x18750BF0
	410323952,	// CRC do Jardel: 0x18750BF0
	0,	//	synchronized?, exception table length
//	4118: append(D)Ljava/lang/StringBuffer;
	705826486,	 // (0x2a120eb6) // 42 (0x2a) 18 (0x12) 14 (0x0e) 182 (0xb6)  CRC: 0x76E8D893
	503808,	 // (0x7b000) // 0 (0x00) 7 (0x07) 176 (0xb0)  CRC: 0x2F271DFB
	791092731,	// CRC do Jardel: 0x2F271DFB
	0,	//	synchronized?, exception table length
//	4122: append(Ljava/lang/Object;)Ljava/lang/StringBuffer;
	734461962,	 // (0x2bc7000a) // 43 (0x2b) 199 (0xc7) 0 (0x00) 10 (0x0a)  CRC: 0x029D07FC
	705826742,	 // (0x2a120fb6) // 42 (0x2a) 18 (0x12) 15 (0x0f) 182 (0xb6)  CRC: 0xB9F2B589
	503850,	 // (0x7b02a) // 0 (0x00) 7 (0x07) 176 (0xb0) 42 (0x2a)  CRC: 0x1D56215D
	733347856,	 // (0x2bb60010) // 43 (0x2b) 182 (0xb6) 0 (0x00) 16 (0x10)  CRC: 0x692021BE
	-1241512016,	 // (0xb60007b0) // 182 (0xb6) 0 (0x00) 7 (0x07) 176 (0xb0)  CRC: 0x4FCA4F61
	1338658657,	// CRC do Jardel: 0x4FCA4F61
	0,	//	synchronized?, exception table length
//	4129: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
	717368263,	 // (0x2ac22bc7) // 42 (0x2a) 194 (0xc2) 43 (0x2b) 199 (0xc7)  CRC: 0x885F189F
	397839,	 // (0x6120f) // 0 (0x00) 6 (0x06) 18 (0x12) 15 (0x0f)  CRC: 0xA6AD79D1
	1277933056,	 // (0x4c2bb600) // 76 (0x4c) 43 (0x2b) 182 (0xb6) 0 (0x00)  CRC: 0x78F392EC
	54340138,	 // (0x33d2a2a) // 3 (0x03) 61 (0x3d) 42 (0x2a) 42 (0x2a)  CRC: 0xF0B9BFF2
	-1275068388,	 // (0xb400001c) // 180 (0xb4) 0 (0x00) 0 (0x00) 28 (0x1c)  CRC: 0xFC2E9959
	1622605833,	 // (0x60b70009) // 96 (0x60) 183 (0xb7) 0 (0x00) 9 (0x09)  CRC: 0x4255582F
	721624106,	 // (0x2b031c2a) // 43 (0x2b) 3 (0x03) 28 (0x1c) 42 (0x2a)  CRC: 0x01963AD3
	-503316182,	 // (0xe200012a) // 226 (0xe2) 0 (0x00) 1 (0x01) 42 (0x2a)  CRC: 0x4D18A0BF
	-1275068234,	 // (0xb40000b6) // 180 (0xb4) 0 (0x00) 0 (0x00) 182 (0xb6)  CRC: 0x69BE65E9
	1124953,	 // (0x112a59) // 0 (0x00) 17 (0x11) 42 (0x2a) 89 (0x59)  CRC: 0x38B36418
	-1275068388,	 // (0xb400001c) // 180 (0xb4) 0 (0x00) 0 (0x00) 28 (0x1c)  CRC: 0xBE5E52C4
	1622474752,	 // (0x60b50000) // 96 (0x60) 181 (0xb5) 0 (0x00) 0 (0x00)  CRC: 0xD5241059
	707445680,	 // (0x2a2ac3b0) // 42 (0x2a) 42 (0x2a) 195 (0xc3) 176 (0xb0)  CRC: 0xC8BEFE75
	-927007115,	// CRC do Jardel: 0xC8BEFE75
	65536,	//	synchronized?, exception table length
//	4144: append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;
	717368263,	 // (0x2ac22bc7) // 42 (0x2a) 194 (0xc2) 43 (0x2b) 199 (0xc7)  CRC: 0x885F189F
	797202,	 // (0xc2a12) // 0 (0x00) 12 (0x0c) 42 (0x2a) 18 (0x12)  CRC: 0x0A2BFB3F
	263585799,	 // (0xfb60007) // 15 (0x0f) 182 (0xb6) 0 (0x00) 7 (0x07)  CRC: 0xE6CAED12
	717467691,	 // (0x2ac3b02b) // 42 (0x2a) 195 (0xc3) 176 (0xb0) 43 (0x2b)  CRC: 0xCE40ED6C
	-1275068355,	 // (0xb400003d) // 180 (0xb4) 0 (0x00) 0 (0x00) 61 (0x3d)  CRC: 0xB5DBD230
	707441664,	 // (0x2a2ab400) // 42 (0x2a) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x47984565
	1859767,	 // (0x1c60b7) // 0 (0x00) 28 (0x1c) 96 (0x60) 183 (0xb7)  CRC: 0x6A0940DF
	600619,	 // (0x92a2b) // 0 (0x00) 9 (0x09) 42 (0x2a) 43 (0x2b)  CRC: 0x04C1771D
	-503316221,	 // (0xe2000103) // 226 (0xe2) 0 (0x00) 1 (0x01) 3 (0x03)  CRC: 0x7173639C
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x691EAE56
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0xE6B2538E
	481755147,	 // (0x1cb7000b) // 28 (0x1c) 183 (0xb7) 0 (0x00) 11 (0x0b)  CRC: 0x87C444B4
	710521856,	 // (0x2a59b400) // 42 (0x2a) 89 (0x59) 180 (0xb4) 0 (0x00)  CRC: 0xFE671986
	1859765,	 // (0x1c60b5) // 0 (0x00) 28 (0x1c) 96 (0x60) 181 (0xb5)  CRC: 0xA932B08D
	10794,	 // (0x2a2a) // 0 (0x00) 0 (0x00) 42 (0x2a) 42 (0x2a)  CRC: 0x3F6130AB
	-1011875840,	 // (0xc3b00000) // 195 (0xc3) 176 (0xb0)  CRC: 0xBC52E323
	-1135418589,	// CRC do Jardel: 0xBC52E323
	65536,	//	synchronized?, exception table length
//	4162: capacity()I
	717368034,	 // (0x2ac22ae2) // 42 (0x2a) 194 (0xc2) 42 (0x2a) 226 (0xe2)  CRC: 0xC3F6245B
	114218,	 // (0x1be2a) // 0 (0x00) 1 (0x01) 190 (0xbe) 42 (0x2a)  CRC: 0x24371AC9
	-1012137984,	 // (0xc3ac0000) // 195 (0xc3) 172 (0xac)  CRC: 0xCDAA092C
	-844494548,	// CRC do Jardel: 0xCDAA092C
	65536,	//	synchronized?, exception table length
//	4167: charAt(I)C
	717364123,	 // (0x2ac21b9b) // 42 (0x2a) 194 (0xc2) 27 (0x1b) 155 (0x9b)  CRC: 0x0DD829F6
	727850,	 // (0xb1b2a) // 0 (0x00) 11 (0x0b) 27 (0x1b) 42 (0x2a)  CRC: 0x7D1037C1
	-1275068255,	 // (0xb40000a1) // 180 (0xb4) 0 (0x00) 0 (0x00) 161 (0xa1)  CRC: 0xE8383957
	834304,	 // (0xcbb00) // 0 (0x00) 12 (0x0c) 187 (0xbb) 0 (0x00)  CRC: 0x4BD673F8
	307829687,	 // (0x12591bb7) // 18 (0x12) 89 (0x59) 27 (0x1b) 183 (0xb7)  CRC: 0x9D2F1122
	1294122,	 // (0x13bf2a) // 0 (0x00) 19 (0x13) 191 (0xbf) 42 (0x2a)  CRC: 0x67163055
	-503316197,	 // (0xe200011b) // 226 (0xe2) 0 (0x00) 1 (0x01) 27 (0x1b)  CRC: 0xC2FBD0A3
	875217836,	 // (0x342ac3ac) // 52 (0x34) 42 (0x2a) 195 (0xc3) 172 (0xac)  CRC: 0xC87DB9FD
	-931284483,	// CRC do Jardel: 0xC87DB9FD
	65536,	//	synchronized?, exception table length
//	4177: delete(II)Ljava/lang/StringBuffer;
	717364123,	 // (0x2ac21b9b) // 42 (0x2a) 194 (0xc2) 27 (0x1b) 155 (0x9b)  CRC: 0x0DD829F6
	1055530,	 // (0x101b2a) // 0 (0x00) 16 (0x10) 27 (0x1b) 42 (0x2a)  CRC: 0x95E2B053
	-1275068253,	 // (0xb40000a3) // 180 (0xb4) 0 (0x00) 0 (0x00) 163 (0xa3)  CRC: 0x165BA7F1
	531228,	 // (0x81b1c) // 0 (0x00) 8 (0x08) 27 (0x1b) 28 (0x1c)  CRC: 0xA10AA23B
	-1543500613,	 // (0xa4000cbb) // 164 (0xa4) 0 (0x00) 12 (0x0c) 187 (0xbb)  CRC: 0xA9B880F0
	1202459,	 // (0x12591b) // 0 (0x00) 18 (0x12) 89 (0x59) 27 (0x1b)  CRC: 0x1C26003C
	-1224731713,	 // (0xb70013bf) // 183 (0xb7) 0 (0x00) 19 (0x13) 191 (0xbf)  CRC: 0x4E1AA406
	472560640,	 // (0x1c2ab400) // 28 (0x1c) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0xBBCA1903
	10747912,	 // (0xa40008) // 0 (0x00) 164 (0xa4) 0 (0x00) 8 (0x08)  CRC: 0xEE2D4B04
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x7D61CF0F
	1026173620,	 // (0x3d2a2ab4) // 61 (0x3d) 42 (0x2a) 42 (0x2a) 180 (0xb4)  CRC: 0x81112BFD
	46848,	 // (0xb700) // 0 (0x00) 0 (0x00) 183 (0xb7) 0 (0x00)  CRC: 0xC96ECEA5
	153793536,	 // (0x92ab400) // 9 (0x09) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0xBA9F56C2
	1860761,	 // (0x1c6499) // 0 (0x00) 28 (0x1c) 100 (0x64) 153 (0x99)  CRC: 0x05244518
	1518122,	 // (0x172a2a) // 0 (0x00) 23 (0x17) 42 (0x2a) 42 (0x2a)  CRC: 0x9E6BF022
	-503316196,	 // (0xe200011c) // 226 (0xe2) 0 (0x00) 1 (0x01) 28 (0x1c)  CRC: 0xF40410AA
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0xF734C5B4
	455783424,	 // (0x1b2ab400) // 27 (0x1b) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x0D522F98
	1860791,	 // (0x1c64b7) // 0 (0x00) 28 (0x1c) 100 (0x64) 183 (0xb7)  CRC: 0x9DAB71DE
	731737,	 // (0xb2a59) // 0 (0x00) 11 (0x0b) 42 (0x2a) 89 (0x59)  CRC: 0x9095F98D
	-1275068388,	 // (0xb400001c) // 180 (0xb4) 0 (0x00) 0 (0x00) 28 (0x1c)  CRC: 0x890D7A89
	459564213,	 // (0x1b6464b5) // 27 (0x1b) 100 (0x64) 100 (0x64) 181 (0xb5)  CRC: 0x8991A1D5
	10794,	 // (0x2a2a) // 0 (0x00) 0 (0x00) 42 (0x2a) 42 (0x2a)  CRC: 0x9C754CC3
	-1011875840,	 // (0xc3b00000) // 195 (0xc3) 176 (0xb0)  CRC: 0xBEB7D860
	-1095247776,	// CRC do Jardel: 0xBEB7D860
	65536,	//	synchronized?, exception table length
//	4203: deleteCharAt(I)Ljava/lang/StringBuffer;
	706419460,	 // (0x2a1b1b04) // 42 (0x2a) 27 (0x1b) 27 (0x1b) 4 (0x04)  CRC: 0x3288F260
	1622540308,	 // (0x60b60014) // 96 (0x60) 182 (0xb6) 0 (0x00) 20 (0x14)  CRC: 0xCCF74870
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0xDD87BB85
	-578307195,	// CRC do Jardel: 0xDD87BB85
	0,	//	synchronized?, exception table length
//	4208: replace(IILjava/lang/String;)Ljava/lang/StringBuffer;
	717364123,	 // (0x2ac21b9b) // 42 (0x2a) 194 (0xc2) 27 (0x1b) 155 (0x9b)  CRC: 0x0DD829F6
	1055530,	 // (0x101b2a) // 0 (0x00) 16 (0x10) 27 (0x1b) 42 (0x2a)  CRC: 0x95E2B053
	-1275068253,	 // (0xb40000a3) // 180 (0xb4) 0 (0x00) 0 (0x00) 163 (0xa3)  CRC: 0x165BA7F1
	531228,	 // (0x81b1c) // 0 (0x00) 8 (0x08) 27 (0x1b) 28 (0x1c)  CRC: 0xA10AA23B
	-1543502038,	 // (0xa400072a) // 164 (0xa4) 0 (0x00) 7 (0x07) 42 (0x2a)  CRC: 0x288B9B48
	717467693,	 // (0x2ac3b02d) // 42 (0x2a) 195 (0xc3) 176 (0xb0) 45 (0x2d)  CRC: 0xF4D35667
	-1241513162,	 // (0xb6000336) // 182 (0xb6) 0 (0x00) 3 (0x03) 54 (0x36)  CRC: 0xED833106
	68486172,	 // (0x415041c) // 4 (0x04) 21 (0x15) 4 (0x04) 28 (0x1c)  CRC: 0x333D7459
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x7D5774E5
	-1543501270,	 // (0xa4000a2a) // 164 (0xa4) 0 (0x00) 10 (0x0a) 42 (0x2a)  CRC: 0x5D8C5D9E
	-1275068249,	 // (0xb40000a7) // 180 (0xb4) 0 (0x00) 0 (0x00) 167 (0xa7)  CRC: 0x31C2D723
	269412,	 // (0x41c64) // 0 (0x00) 4 (0x04) 28 (0x1c) 100 (0x64)  CRC: 0x3F6EAE73
	459290117,	 // (0x1b603605) // 27 (0x1b) 96 (0x60) 54 (0x36) 5 (0x05)  CRC: 0x1B903506
	707441664,	 // (0x2a2ab400) // 42 (0x2a) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x5207AE84
	1377632,	 // (0x150560) // 0 (0x00) 21 (0x15) 5 (0x05) 96 (0x60)  CRC: 0x9283E59B
	-1224734443,	 // (0xb7000915) // 183 (0xb7) 0 (0x00) 9 (0x09) 21 (0x15)  CRC: 0x823DF2C3
	93913122,	 // (0x5990022) // 5 (0x05) 153 (0x99) 0 (0x00) 34 (0x22)  CRC: 0xBCA5C21F
	472560640,	 // (0x1c2ab400) // 28 (0x1c) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x463401CE
	10616858,	 // (0xa2001a) // 0 (0x00) 162 (0xa2) 0 (0x00) 26 (0x1a)  CRC: 0x3325028B
	707453440,	 // (0x2a2ae200) // 42 (0x2a) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xBDF9C224
	18623202,	 // (0x11c2ae2) // 1 (0x01) 28 (0x1c) 42 (0x2a) 226 (0xe2)  CRC: 0x75128A96
	72725,	 // (0x11c15) // 0 (0x00) 1 (0x01) 28 (0x1c) 21 (0x15)  CRC: 0x7458EBBB
	90188468,	 // (0x5602ab4) // 5 (0x05) 96 (0x60) 42 (0x2a) 180 (0xb4)  CRC: 0xDF6F647B
	7268,	 // (0x1c64) // 0 (0x00) 0 (0x00) 28 (0x1c) 100 (0x64)  CRC: 0x9F655DB7
	-1224733907,	 // (0xb7000b2d) // 183 (0xb7) 0 (0x00) 11 (0x0b) 45 (0x2d)  CRC: 0x0C4B14E4
	51708970,	 // (0x315042a) // 3 (0x03) 21 (0x15) 4 (0x04) 42 (0x2a)  CRC: 0x5E1497E0
	-503316197,	 // (0xe200011b) // 226 (0xe2) 0 (0x00) 1 (0x01) 27 (0x1b)  CRC: 0xC62B9693
	-1241509590,	 // (0xb600112a) // 182 (0xb6) 0 (0x00) 17 (0x11) 42 (0x2a)  CRC: 0xCB057BB6
	1504968704,	 // (0x59b40000) // 89 (0x59) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x6B798B8F
	352673973,	 // (0x150560b5) // 21 (0x15) 5 (0x05) 96 (0x60) 181 (0xb5)  CRC: 0x4CF6B5D6
	10794,	 // (0x2a2a) // 0 (0x00) 0 (0x00) 42 (0x2a) 42 (0x2a)  CRC: 0x5B1B5DEF
	-1011875840,	 // (0xc3b00000) // 195 (0xc3) 176 (0xb0)  CRC: 0xFD8FC202
	-40910334,	// CRC do Jardel: 0xFD8FC202
	65536,	//	synchronized?, exception table length
//	4242: ensureCapacity_unsynchronized(I)V
	455795200,	 // (0x1b2ae200) // 27 (0x1b) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xCF9A50C4
	29271040,	 // (0x1bea400) // 1 (0x01) 190 (0xbe) 164 (0xa4) 0 (0x00)  CRC: 0x78AC9967
	1377512162,	 // (0x521b2ae2) // 82 (0x52) 27 (0x1b) 42 (0x2a) 226 (0xe2)  CRC: 0x1D0E4893
	114340,	 // (0x1bea4) // 0 (0x00) 1 (0x01) 190 (0xbe) 164 (0xa4)  CRC: 0x651CBC67
	994018,	 // (0xf2ae2) // 0 (0x00) 15 (0x0f) 42 (0x2a) 226 (0xe2)  CRC: 0xEA5FCC18
	114181,	 // (0x1be05) // 0 (0x00) 1 (0x01) 190 (0xbe) 5 (0x05)  CRC: 0x6C62F2C4
	1745182887,	 // (0x680560a7) // 104 (0x68) 5 (0x05) 96 (0x60) 167 (0xa7)  CRC: 0xED0D74D3
	535266,	 // (0x82ae2) // 0 (0x00) 8 (0x08) 42 (0x2a) 226 (0xe2)  CRC: 0x79767FA6
	114237,	 // (0x1be3d) // 0 (0x00) 1 (0x01) 190 (0xbe) 61 (0x3d)  CRC: 0xCCDDFC19
	454861312,	 // (0x1b1ca200) // 27 (0x1b) 28 (0x1c) 162 (0xa2) 0 (0x00)  CRC: 0x437B9A26
	119318272,	 // (0x71ca700) // 7 (0x07) 28 (0x1c) 167 (0xa7) 0 (0x00)  CRC: 0xC48C9246
	68893723,	 // (0x41b3c1b) // 4 (0x04) 27 (0x1b) 60 (0x3c) 27 (0x1b)  CRC: 0x4899EC95
	-1140503037,	 // (0xbc054e03) // 188 (0xbc) 5 (0x05) 78 (0x4e) 3 (0x03)  CRC: 0xCBA01107
	906237188,	 // (0x36041504) // 54 (0x36) 4 (0x04) 21 (0x15) 4 (0x04)  CRC: 0x0971C5E3
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0xA805B759
	-1577052371,	 // (0xa200172d) // 162 (0xa2) 0 (0x00) 23 (0x17) 45 (0x2d)  CRC: 0x3F07476E
	352594658,	 // (0x15042ae2) // 21 (0x15) 4 (0x04) 42 (0x2a) 226 (0xe2)  CRC: 0x12ABC109
	70916,	 // (0x11504) // 0 (0x00) 1 (0x01) 21 (0x15) 4 (0x04)  CRC: 0x1627999E
	877991172,	 // (0x34551504) // 52 (0x34) 85 (0x55) 21 (0x15) 4 (0x04)  CRC: 0xBC235213
	73414148,	 // (0x4603604) // 4 (0x04) 96 (0x60) 54 (0x36) 4 (0x04)  CRC: 0x9B97A0E1
	-1476401622,	 // (0xa7ffe62a) // 167 (0xa7) 255 (0xff) 230 (0xe6) 42 (0x2a)  CRC: 0xF48AEE9D
	769851393,	 // (0x2de30001) // 45 (0x2d) 227 (0xe3) 0 (0x00) 1 (0x01)  CRC: 0x8BF94047
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x5EFC39E1
	1593588193,	// CRC do Jardel: 0x5EFC39E1
	0,	//	synchronized?, exception table length
//	4267: getChars(II[CI)V
	717364251,	 // (0x2ac21c1b) // 42 (0x2a) 194 (0xc2) 28 (0x1c) 27 (0x1b)  CRC: 0xAE35537E
	1681261851,	 // (0x6436051b) // 100 (0x64) 54 (0x36) 5 (0x05) 27 (0x1b)  CRC: 0xA85F6FD4
	-1694494692,	 // (0x9b00101c) // 155 (0x9b) 0 (0x00) 16 (0x10) 28 (0x1c)  CRC: 0x6AA0B2AF
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x32568134
	-1560279019,	 // (0xa3000815) // 163 (0xa3) 0 (0x00) 8 (0x08) 21 (0x15)  CRC: 0xFC13ACDF
	94109702,	 // (0x59c0006) // 5 (0x05) 156 (0x9c) 0 (0x00) 6 (0x06)  CRC: 0x3EF87B3A
	717467946,	 // (0x2ac3b12a) // 42 (0x2a) 195 (0xc3) 177 (0xb1) 42 (0x2a)  CRC: 0x86F06556
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x667DD9C7
	455939332,	 // (0x1b2d1504) // 27 (0x1b) 45 (0x2d) 21 (0x15) 4 (0x04)  CRC: 0x5690C3A0
	352696064,	 // (0x1505b700) // 21 (0x15) 5 (0x05) 183 (0xb7) 0 (0x00)  CRC: 0x5411E338
	187351985,	 // (0xb2ac3b1) // 11 (0x0b) 42 (0x2a) 195 (0xc3) 177 (0xb1)  CRC: 0xFB28B326
	-81218778,	// CRC do Jardel: 0xFB28B326
	65536,	//	synchronized?, exception table length
//	4280: insert(IZ)Ljava/lang/StringBuffer;
	302534172,	 // (0x12084e1c) // 18 (0x12) 8 (0x08) 78 (0x4e) 28 (0x1c)  CRC: 0xC1EDF40A
	-1728051694,	 // (0x99000612) // 153 (0x99) 0 (0x00) 6 (0x06) 18 (0x12)  CRC: 0xD310749B
	105785883,	 // (0x64e2a1b) // 6 (0x06) 78 (0x4e) 42 (0x2a) 27 (0x1b)  CRC: 0xAB6C9DC1
	766902293,	 // (0x2db60015) // 45 (0x2d) 182 (0xb6) 0 (0x00) 21 (0x15)  CRC: 0xEE225A27
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0xDC4A9F18
	-599089384,	// CRC do Jardel: 0xDC4A9F18
	0,	//	synchronized?, exception table length
//	4287: insert(IC)Ljava/lang/StringBuffer;
	717364123,	 // (0x2ac21b9b) // 42 (0x2a) 194 (0xc2) 27 (0x1b) 155 (0x9b)  CRC: 0x0DD829F6
	727850,	 // (0xb1b2a) // 0 (0x00) 11 (0x0b) 27 (0x1b) 42 (0x2a)  CRC: 0x7D1037C1
	-1275068252,	 // (0xb40000a4) // 180 (0xb4) 0 (0x00) 0 (0x00) 164 (0xa4)  CRC: 0x48A0EFE5
	469546,	 // (0x72a2a) // 0 (0x00) 7 (0x07) 42 (0x2a) 42 (0x2a)  CRC: 0xDD8F0C79
	-1011865046,	 // (0xc3b02a2a) // 195 (0xc3) 176 (0xb0) 42 (0x2a) 42 (0x2a)  CRC: 0x48D5B974
	-1275068412,	 // (0xb4000004) // 180 (0xb4) 0 (0x00) 0 (0x00) 4 (0x04)  CRC: 0x62E4974B
	1622605833,	 // (0x60b70009) // 96 (0x60) 183 (0xb7) 0 (0x00) 9 (0x09)  CRC: 0x97A6F7DB
	707453440,	 // (0x2a2ae200) // 42 (0x2a) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x7FAE1157
	18557666,	 // (0x11b2ae2) // 1 (0x01) 27 (0x1b) 42 (0x2a) 226 (0xe2)  CRC: 0xAB1F9472
	72452,	 // (0x11b04) // 0 (0x00) 1 (0x01) 27 (0x1b) 4 (0x04)  CRC: 0x42D32AE6
	1613411328,	 // (0x602ab400) // 96 (0x60) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x56B6E365
	1795255,	 // (0x1b64b7) // 0 (0x00) 27 (0x1b) 100 (0x64) 183 (0xb7)  CRC: 0x0727757F
	731874,	 // (0xb2ae2) // 0 (0x00) 11 (0x0b) 42 (0x2a) 226 (0xe2)  CRC: 0xF32ADA7F
	72476,	 // (0x11b1c) // 0 (0x00) 1 (0x01) 27 (0x1b) 28 (0x1c)  CRC: 0xACF0EAD3
	1428838836,	 // (0x552a59b4) // 85 (0x55) 42 (0x2a) 89 (0x59) 180 (0xb4)  CRC: 0x66E0B7FE
	1120,	 // (0x0460) // 0 (0x00) 0 (0x00) 4 (0x04) 96 (0x60)  CRC: 0x566272B4
	-1258291158,	 // (0xb500002a) // 181 (0xb5) 0 (0x00) 0 (0x00) 42 (0x2a)  CRC: 0xD2F985E7
	717467648,	 // (0x2ac3b000) // 42 (0x2a) 195 (0xc3) 176 (0xb0)  CRC: 0x8D1A84ED
	-1927641875,	// CRC do Jardel: 0x8D1A84ED
	65536,	//	synchronized?, exception table length
//	4307: insert(I[C)Ljava/lang/StringBuffer;
	706423811,	 // (0x2a1b2c03) // 42 (0x2a) 27 (0x1b) 44 (0x2c) 3 (0x03)  CRC: 0x0D9E130E
	750696192,	 // (0x2cbeb700) // 44 (0x2c) 190 (0xbe) 183 (0xb7) 0 (0x00)  CRC: 0x4381D6F0
	380633088,	 // (0x16b00000) // 22 (0x16) 176 (0xb0)  CRC: 0x07F6433B
	133579579,	// CRC do Jardel: 0x07F6433B
	0,	//	synchronized?, exception table length
//	4312: insert(I[CII)Ljava/lang/StringBuffer;
	717364123,	 // (0x2ac21b9b) // 42 (0x2a) 194 (0xc2) 27 (0x1b) 155 (0x9b)  CRC: 0x0DD829F6
	1907498,	 // (0x1d1b2a) // 0 (0x00) 29 (0x1d) 27 (0x1b) 42 (0x2a)  CRC: 0x88971374
	-1275068253,	 // (0xb40000a3) // 180 (0xb4) 0 (0x00) 0 (0x00) 163 (0xa3)  CRC: 0xB893F4A9
	1381636,	 // (0x151504) // 0 (0x00) 21 (0x15) 21 (0x15) 4 (0x04)  CRC: 0x3417CFFD
	-1694494691,	 // (0x9b00101d) // 155 (0x9b) 0 (0x00) 16 (0x10) 29 (0x1d)  CRC: 0x020B0100
	-1694495715,	 // (0x9b000c1d) // 155 (0x9b) 0 (0x00) 12 (0x0c) 29 (0x1d)  CRC: 0xCB383D74
	352608300,	 // (0x1504602c) // 21 (0x15) 4 (0x04) 96 (0x60) 44 (0x2c)  CRC: 0x243D6CC1
	-1096548345,	 // (0xbea40007) // 190 (0xbe) 164 (0xa4) 0 (0x00) 7 (0x07)  CRC: 0x35078170
	707445680,	 // (0x2a2ac3b0) // 42 (0x2a) 42 (0x2a) 195 (0xc3) 176 (0xb0)  CRC: 0x96F0B41D
	707441664,	 // (0x2a2ab400) // 42 (0x2a) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0xD7626554
	1377376,	 // (0x150460) // 0 (0x00) 21 (0x15) 4 (0x04) 96 (0x60)  CRC: 0xF453EEB4
	-1224734422,	 // (0xb700092a) // 183 (0xb7) 0 (0x00) 9 (0x09) 42 (0x2a)  CRC: 0x5E85F064
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x912853ED
	455795200,	 // (0x1b2ae200) // 27 (0x1b) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xA04D2633
	18552068,	 // (0x11b1504) // 1 (0x01) 27 (0x1b) 21 (0x15) 4 (0x04)  CRC: 0xA5A9E28D
	1613411328,	 // (0x602ab400) // 96 (0x60) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x448448A1
	1795255,	 // (0x1b64b7) // 0 (0x00) 27 (0x1b) 100 (0x64) 183 (0xb7)  CRC: 0x7D0565E1
	731692,	 // (0xb2a2c) // 0 (0x00) 11 (0x0b) 42 (0x2a) 44 (0x2c)  CRC: 0x05A2095C
	489349632,	 // (0x1d2ae200) // 29 (0x1d) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xB4BCF347
	18552068,	 // (0x11b1504) // 1 (0x01) 27 (0x1b) 21 (0x15) 4 (0x04)  CRC: 0x2464B1F5
	-1224733910,	 // (0xb7000b2a) // 183 (0xb7) 0 (0x00) 11 (0x0b) 42 (0x2a)  CRC: 0x22969133
	1504968704,	 // (0x59b40000) // 89 (0x59) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x974DC8D8
	352608437,	 // (0x150460b5) // 21 (0x15) 4 (0x04) 96 (0x60) 181 (0xb5)  CRC: 0x0578440E
	10794,	 // (0x2a2a) // 0 (0x00) 0 (0x00) 42 (0x2a) 42 (0x2a)  CRC: 0x5F7D7DC1
	-1011875840,	 // (0xc3b00000) // 195 (0xc3) 176 (0xb0)  CRC: 0x4C99F4F9
	1285158137,	// CRC do Jardel: 0x4C99F4F9
	65536,	//	synchronized?, exception table length
//	4339: insert(II)Ljava/lang/StringBuffer;
	706419896,	 // (0x2a1b1cb8) // 42 (0x2a) 27 (0x1b) 28 (0x1c) 184 (0xb8)  CRC: 0x098737B5
	1553920,	 // (0x17b600) // 0 (0x00) 23 (0x17) 182 (0xb6) 0 (0x00)  CRC: 0x88982699
	363855872,	 // (0x15b00000) // 21 (0x15) 176 (0xb0)  CRC: 0x8B1ECD78
	-1960915592,	// CRC do Jardel: 0x8B1ECD78
	0,	//	synchronized?, exception table length
//	4344: insert(IJ)Ljava/lang/StringBuffer;
	706420752,	 // (0x2a1b2010) // 42 (0x2a) 27 (0x1b) 32 (0x20) 16 (0x10)  CRC: 0x935A5AE7
	179830797,	 // (0xab8000d) // 10 (0x0a) 184 (0xb8) 0 (0x00) 13 (0x0d)  CRC: 0xB9DD84B9
	-1241508432,	 // (0xb60015b0) // 182 (0xb6) 0 (0x00) 21 (0x15) 176 (0xb0)  CRC: 0x4ED84049
	1322795081,	// CRC do Jardel: 0x4ED84049
	0,	//	synchronized?, exception table length
//	4349: insert(ILjava/lang/Object;)Ljava/lang/StringBuffer;
	717367835,	 // (0x2ac22a1b) // 42 (0x2a) 194 (0xc2) 42 (0x2a) 27 (0x1b)  CRC: 0x8C79E0FC
	750125072,	 // (0x2cb60010) // 44 (0x2c) 182 (0xb6) 0 (0x00) 16 (0x10)  CRC: 0x2E1E764E
	-1241508566,	 // (0xb600152a) // 182 (0xb6) 0 (0x00) 21 (0x15) 42 (0x2a)  CRC: 0x4B8BB3DA
	-1011875840,	 // (0xc3b00000) // 195 (0xc3) 176 (0xb0)  CRC: 0xB4471CAC
	-1270408020,	// CRC do Jardel: 0xB4471CAC
	65536,	//	synchronized?, exception table length
//	4355: insert(ILjava/lang/String;)Ljava/lang/StringBuffer;
	717364123,	 // (0x2ac21b9b) // 42 (0x2a) 194 (0xc2) 27 (0x1b) 155 (0x9b)  CRC: 0x0DD829F6
	727850,	 // (0xb1b2a) // 0 (0x00) 11 (0x0b) 27 (0x1b) 42 (0x2a)  CRC: 0x7D1037C1
	-1275068252,	 // (0xb40000a4) // 180 (0xb4) 0 (0x00) 0 (0x00) 164 (0xa4)  CRC: 0x48A0EFE5
	469546,	 // (0x72a2a) // 0 (0x00) 7 (0x07) 42 (0x2a) 42 (0x2a)  CRC: 0xDD8F0C79
	-1011864377,	 // (0xc3b02cc7) // 195 (0xc3) 176 (0xb0) 44 (0x2c) 199 (0xc7)  CRC: 0x8868F767
	397839,	 // (0x6120f) // 0 (0x00) 6 (0x06) 18 (0x12) 15 (0x0f)  CRC: 0x7467C9BF
	1294775808,	 // (0x4d2cb600) // 77 (0x4d) 44 (0x2c) 182 (0xb6) 0 (0x00)  CRC: 0xC25A1555
	54405674,	 // (0x33e2a2a) // 3 (0x03) 62 (0x3e) 42 (0x2a) 42 (0x2a)  CRC: 0x8E53C6F1
	-1275068387,	 // (0xb400001d) // 180 (0xb4) 0 (0x00) 0 (0x00) 29 (0x1d)  CRC: 0x5D12AE87
	1622605833,	 // (0x60b70009) // 96 (0x60) 183 (0xb7) 0 (0x00) 9 (0x09)  CRC: 0xD7270F6C
	707453440,	 // (0x2a2ae200) // 42 (0x2a) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x993AE9CD
	18557666,	 // (0x11b2ae2) // 1 (0x01) 27 (0x1b) 42 (0x2a) 226 (0xe2)  CRC: 0x73B59500
	72477,	 // (0x11b1d) // 0 (0x00) 1 (0x01) 27 (0x1b) 29 (0x1d)  CRC: 0x0853141A
	1613411328,	 // (0x602ab400) // 96 (0x60) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0xCDDBB7CF
	1795255,	 // (0x1b64b7) // 0 (0x00) 27 (0x1b) 100 (0x64) 183 (0xb7)  CRC: 0x409FD208
	732163,	 // (0xb2c03) // 0 (0x00) 11 (0x0b) 44 (0x2c) 3 (0x03)  CRC: 0xD4068C53
	489349632,	 // (0x1d2ae200) // 29 (0x1d) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x15EF0D37
	18593280,	 // (0x11bb600) // 1 (0x01) 27 (0x1b) 182 (0xb6) 0 (0x00)  CRC: 0x0803DE89
	287988148,	 // (0x112a59b4) // 17 (0x11) 42 (0x2a) 89 (0x59) 180 (0xb4)  CRC: 0xEDD8B8A8
	7520,	 // (0x1d60) // 0 (0x00) 0 (0x00) 29 (0x1d) 96 (0x60)  CRC: 0x8C428237
	-1258291158,	 // (0xb500002a) // 181 (0xb5) 0 (0x00) 0 (0x00) 42 (0x2a)  CRC: 0xBB8AFAE9
	717467648,	 // (0x2ac3b000) // 42 (0x2a) 195 (0xc3) 176 (0xb0)  CRC: 0x31078076
	822575222,	// CRC do Jardel: 0x31078076
	65536,	//	synchronized?, exception table length
//	4379: indexOf(Ljava/lang/String;)I
	707462070,	 // (0x2a2b03b6) // 42 (0x2a) 43 (0x2b) 3 (0x03) 182 (0xb6)  CRC: 0x16348D8B
	1616896,	 // (0x18ac00) // 0 (0x00) 24 (0x18) 172 (0xac)  CRC: 0x8F452EC6
	-1891291450,	// CRC do Jardel: 0x8F452EC6
	0,	//	synchronized?, exception table length
//	4383: indexOf(Ljava/lang/String;I)I
	717364380,	 // (0x2ac21c9c) // 42 (0x2a) 194 (0xc2) 28 (0x1c) 156 (0x9c)  CRC: 0x14519008
	328509,	 // (0x5033d) // 0 (0x00) 5 (0x05) 3 (0x03) 61 (0x3d)  CRC: 0x8496BAB4
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x5911769A
	733347843,	 // (0x2bb60003) // 43 (0x2b) 182 (0xb6) 0 (0x00) 3 (0x03)  CRC: 0x05904DCF
	1681792029,	 // (0x643e1c1d) // 100 (0x64) 62 (0x3e) 28 (0x1c) 29 (0x1d)  CRC: 0x323423C8
	-1560275158,	 // (0xa300172a) // 163 (0xa3) 0 (0x00) 23 (0x17) 42 (0x2a)  CRC: 0xE224B4C3
	472626944,	 // (0x1c2bb700) // 28 (0x1c) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xD43D35EE
	429457415,	 // (0x19990007) // 25 (0x19) 153 (0x99) 0 (0x00) 7 (0x07)  CRC: 0x34CA31FF
	472564652,	 // (0x1c2ac3ac) // 28 (0x1c) 42 (0x2a) 195 (0xc3) 172 (0xac)  CRC: 0x871DC739
	470048829,	 // (0x1c04603d) // 28 (0x1c) 4 (0x04) 96 (0x60) 61 (0x3d)  CRC: 0x98E7D3E3
	-1476400638,	 // (0xa7ffea02) // 167 (0xa7) 255 (0xff) 234 (0xea) 2 (0x02)  CRC: 0xD43088B8
	717466624,	 // (0x2ac3ac00) // 42 (0x2a) 195 (0xc3) 172 (0xac)  CRC: 0x9115E107
	-1860837113,	// CRC do Jardel: 0x9115E107
	65536,	//	synchronized?, exception table length
//	4397: regionMatches(ILjava/lang/String;)Z
	750125059,	 // (0x2cb60003) // 44 (0x2c) 182 (0xb6) 0 (0x00) 3 (0x03)  CRC: 0x9AF055E1
	1040397828,	 // (0x3e033604) // 62 (0x3e) 3 (0x03) 54 (0x36) 4 (0x04)  CRC: 0x6B4CDB97
	486694974,	 // (0x1d02603e) // 29 (0x1d) 2 (0x02) 96 (0x60) 62 (0x3e)  CRC: 0x7961B6F1
	496697374,	 // (0x1d9b001e) // 29 (0x1d) 155 (0x9b) 0 (0x00) 30 (0x1e)  CRC: 0xA6ED1D74
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0xF33C2240
	454755424,	 // (0x1b1b0460) // 27 (0x1b) 27 (0x1b) 4 (0x04) 96 (0x60)  CRC: 0x22A0D1A5
	1010052117,	 // (0x3c342c15) // 60 (0x3c) 52 (0x34) 44 (0x2c) 21 (0x15)  CRC: 0x970EA98B
	68486148,	 // (0x4150404) // 4 (0x04) 21 (0x15) 4 (0x04) 4 (0x04)  CRC: 0x10A0D5E3
	1614152886,	 // (0x603604b6) // 96 (0x60) 54 (0x36) 4 (0x04) 182 (0xb6)  CRC: 0xA90C655A
	1744895,	 // (0x1a9fff) // 0 (0x00) 26 (0x1a) 159 (0x9f) 255 (0xff)  CRC: 0x8E7326D3
	-503075836,	 // (0xe203ac04) // 226 (0xe2) 3 (0x03) 172 (0xac) 4 (0x04)  CRC: 0x0842A227
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0xCCEABBFA
	-857031686,	// CRC do Jardel: 0xCCEABBFA
	0,	//	synchronized?, exception table length
//	4411: length()I
	717367988,	 // (0x2ac22ab4) // 42 (0x2a) 194 (0xc2) 42 (0x2a) 180 (0xb4)  CRC: 0x251EFD71
	10947,	 // (0x2ac3) // 0 (0x00) 0 (0x00) 42 (0x2a) 195 (0xc3)  CRC: 0x7636DF7F
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x5C895386
	1552503686,	// CRC do Jardel: 0x5C895386
	65536,	//	synchronized?, exception table length
//	4416: reverse()Ljava/lang/StringBuffer;
	717367850,	 // (0x2ac22a2a) // 42 (0x2a) 194 (0xc2) 42 (0x2a) 42 (0x2a)  CRC: 0x4DE91119
	-1275068233,	 // (0xb40000b7) // 180 (0xb4) 0 (0x00) 0 (0x00) 183 (0xb7)  CRC: 0x8327C6C4
	600756,	 // (0x92ab4) // 0 (0x00) 9 (0x09) 42 (0x2a) 180 (0xb4)  CRC: 0x39C38023
	1146,	 // (0x047a) // 0 (0x00) 0 (0x00) 4 (0x04) 122 (0x7a)  CRC: 0x39FE4F4F
	1009431552,	 // (0x3c2ab400) // 60 (0x3c) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x580AF438
	1795133,	 // (0x1b643d) // 0 (0x00) 27 (0x1b) 100 (0x64) 61 (0x3d)  CRC: 0x709E01EE
	453140540,	 // (0x1b02603c) // 27 (0x1b) 2 (0x02) 96 (0x60) 60 (0x3c)  CRC: 0x0E6E3811
	463142948,	 // (0x1b9b0024) // 27 (0x1b) 155 (0x9b) 0 (0x00) 36 (0x24)  CRC: 0x177FAF93
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0xAF45A198
	456408618,	 // (0x1b343e2a) // 27 (0x1b) 52 (0x34) 62 (0x3e) 42 (0x2a)  CRC: 0x3BC96687
	-503316197,	 // (0xe200011b) // 226 (0xe2) 0 (0x00) 1 (0x01) 27 (0x1b)  CRC: 0x410208B9
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x332F8BB3
	473191722,	 // (0x1c34552a) // 28 (0x1c) 52 (0x34) 85 (0x55) 42 (0x2a)  CRC: 0x49CAC84E
	-503316196,	 // (0xe200011c) // 226 (0xe2) 0 (0x00) 1 (0x01) 28 (0x1c)  CRC: 0x9DEFA259
	492116996,	 // (0x1d551c04) // 29 (0x1d) 85 (0x55) 28 (0x1c) 4 (0x04)  CRC: 0x298BBC6A
	1614653439,	 // (0x603da7ff) // 96 (0x60) 61 (0x3d) 167 (0xa7) 255 (0xff)  CRC: 0x0DA36D61
	-634770749,	 // (0xda2a2ac3) // 218 (0xda) 42 (0x2a) 42 (0x2a) 195 (0xc3)  CRC: 0x4D478E88
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0xE4691CFC
	-462873348,	// CRC do Jardel: 0xE4691CFC
	65536,	//	synchronized?, exception table length
//	4436: setCharAt(IC)V
	717364123,	 // (0x2ac21b9b) // 42 (0x2a) 194 (0xc2) 27 (0x1b) 155 (0x9b)  CRC: 0x0DD829F6
	727850,	 // (0xb1b2a) // 0 (0x00) 11 (0x0b) 27 (0x1b) 42 (0x2a)  CRC: 0x7D1037C1
	-1275068255,	 // (0xb40000a1) // 180 (0xb4) 0 (0x00) 0 (0x00) 161 (0xa1)  CRC: 0xE8383957
	834304,	 // (0xcbb00) // 0 (0x00) 12 (0x0c) 187 (0xbb) 0 (0x00)  CRC: 0x4BD673F8
	307829687,	 // (0x12591bb7) // 18 (0x12) 89 (0x59) 27 (0x1b) 183 (0xb7)  CRC: 0x9D2F1122
	1294122,	 // (0x13bf2a) // 0 (0x00) 19 (0x13) 191 (0xbf) 42 (0x2a)  CRC: 0x67163055
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x217252C6
	-1224734422,	 // (0xb700092a) // 183 (0xb7) 0 (0x00) 9 (0x09) 42 (0x2a)  CRC: 0xD015AB85
	-503316197,	 // (0xe200011b) // 226 (0xe2) 0 (0x00) 1 (0x01) 27 (0x1b)  CRC: 0x1CEE99ED
	475343555,	 // (0x1c552ac3) // 28 (0x1c) 85 (0x55) 42 (0x2a) 195 (0xc3)  CRC: 0x79490047
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x0361A07E
	56729726,	// CRC do Jardel: 0x0361A07E
	65536,	//	synchronized?, exception table length
//	4449: setLength(I)V
	717364124,	 // (0x2ac21b9c) // 42 (0x2a) 194 (0xc2) 27 (0x1b) 156 (0x9c)  CRC: 0x115AD79D
	834304,	 // (0xcbb00) // 0 (0x00) 12 (0x0c) 187 (0xbb) 0 (0x00)  CRC: 0xB4216738
	307829687,	 // (0x12591bb7) // 18 (0x12) 89 (0x59) 27 (0x1b) 183 (0xb7)  CRC: 0xA359E63F
	1294122,	 // (0x13bf2a) // 0 (0x00) 19 (0x13) 191 (0xbf) 42 (0x2a)  CRC: 0xAEA20FAB
	464977929,	 // (0x1bb70009) // 27 (0x1b) 183 (0xb7) 0 (0x00) 9 (0x09)  CRC: 0x0177B468
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0xB4D6EF6B
	463601687,	 // (0x1ba20017) // 27 (0x1b) 162 (0xa2) 0 (0x00) 23 (0x17)  CRC: 0x13DB5A2C
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0xE2E545B6
	710521856,	 // (0x2a59b400) // 42 (0x2a) 89 (0x59) 180 (0xb4) 0 (0x00)  CRC: 0x8453DF45
	5899360,	 // (0x5a0460) // 0 (0x00) 90 (0x5a) 4 (0x04) 96 (0x60)  CRC: 0xB9B12A68
	-1258291197,	 // (0xb5000003) // 181 (0xb5) 0 (0x00) 0 (0x00) 3 (0x03)  CRC: 0x1FB5774A
	1437073383,	 // (0x55a7ffe7) // 85 (0x55) 167 (0xa7) 255 (0xff) 231 (0xe7)  CRC: 0x4F780BEC
	706458880,	 // (0x2a1bb500) // 42 (0x2a) 27 (0x1b) 181 (0xb5) 0 (0x00)  CRC: 0xF124A8EF
	2802609,	 // (0x2ac3b1) // 0 (0x00) 42 (0x2a) 195 (0xc3) 177 (0xb1)  CRC: 0xAAE8F833
	-1427572685,	// CRC do Jardel: 0xAAE8F833
	65536,	//	synchronized?, exception table length
//	4465: arraycopy([CI[CII)V
	479920160,	 // (0x1c9b0020) // 28 (0x1c) 155 (0x9b) 0 (0x00) 32 (0x20)  CRC: 0xF98A59EF
	352623360,	 // (0x15049b00) // 21 (0x15) 4 (0x04) 155 (0x9b) 0 (0x00)  CRC: 0xB98DDFF7
	454362523,	 // (0x1b15059b) // 27 (0x1b) 21 (0x15) 5 (0x05) 155 (0x9b)  CRC: 0xADB59D04
	1447173,	 // (0x161505) // 0 (0x00) 22 (0x16) 21 (0x15) 5 (0x05)  CRC: 0x0B8D8243
	476064702,	 // (0x1c602bbe) // 28 (0x1c) 96 (0x60) 43 (0x2b) 190 (0xbe)  CRC: 0xCB50B2C8
	-1560277739,	 // (0xa3000d15) // 163 (0xa3) 0 (0x00) 13 (0x0d) 21 (0x15)  CRC: 0x4F58097A
	85263456,	 // (0x5150460) // 5 (0x05) 21 (0x15) 4 (0x04) 96 (0x60)  CRC: 0x6A4146B6
	767468544,	 // (0x2dbea400) // 45 (0x2d) 190 (0xbe) 164 (0xa4) 0 (0x00)  CRC: 0xAEFE2000
	230359067,	 // (0xdbb001b) // 13 (0x0d) 187 (0xbb) 0 (0x00) 27 (0x1b)  CRC: 0xF6C4ECDE
	1494359223,	 // (0x59121cb7) // 89 (0x59) 18 (0x12) 28 (0x1c) 183 (0xb7)  CRC: 0x6FA19114
	1949443,	 // (0x1dbf03) // 0 (0x00) 29 (0x1d) 191 (0xbf) 3 (0x03)  CRC: 0xBB8C523E
	906368262,	 // (0x36061506) // 54 (0x36) 6 (0x06) 21 (0x15) 6 (0x06)  CRC: 0x2E9360F6
	352690688,	 // (0x1505a200) // 21 (0x15) 5 (0x05) 162 (0xa2) 0 (0x00)  CRC: 0xCA99F48F
	422384900,	 // (0x192d1504) // 25 (0x19) 45 (0x2d) 21 (0x15) 4 (0x04)  CRC: 0x1F501F5F
	352739371,	 // (0x1506602b) // 21 (0x15) 6 (0x06) 96 (0x60) 43 (0x2b)  CRC: 0x149BC0FB
	471139936,	 // (0x1c150660) // 28 (0x1c) 21 (0x15) 6 (0x06) 96 (0x60)  CRC: 0xD6F0FF9F
	877991174,	 // (0x34551506) // 52 (0x34) 85 (0x55) 21 (0x15) 6 (0x06)  CRC: 0x75C2C25C
	73414150,	 // (0x4603606) // 4 (0x04) 96 (0x60) 54 (0x36) 6 (0x06)  CRC: 0x4B5BF7AB
	-1476401487,	 // (0xa7ffe6b1) // 167 (0xa7) 255 (0xff) 230 (0xe6) 177 (0xb1)  CRC: 0x520ACF4C
	1376440140,	// CRC do Jardel: 0x520ACF4C
	0,	//	synchronized?, exception table length
//	4486: subSequence(II)Ljava/lang/CharSequence;
	706419894,	 // (0x2a1b1cb6) // 42 (0x2a) 27 (0x1b) 28 (0x1c) 182 (0xb6)  CRC: 0x3082CB63
	2011136,	 // (0x1eb000) // 0 (0x00) 30 (0x1e) 176 (0xb0)  CRC: 0xDD934530
	-577551056,	// CRC do Jardel: 0xDD934530
	0,	//	synchronized?, exception table length
//	4490: substring(II)Ljava/lang/String;
	717364251,	 // (0x2ac21c1b) // 42 (0x2a) 194 (0xc2) 28 (0x1c) 27 (0x1b)  CRC: 0xAE35537E
	1681791899,	 // (0x643e1b9b) // 100 (0x64) 62 (0x3e) 27 (0x1b) 155 (0x9b)  CRC: 0x936D56C1
	1055786,	 // (0x101c2a) // 0 (0x00) 16 (0x10) 28 (0x1c) 42 (0x2a)  CRC: 0x322BDFE1
	-1275068253,	 // (0xb40000a3) // 180 (0xb4) 0 (0x00) 0 (0x00) 163 (0xa3)  CRC: 0xBB6859DB
	531483,	 // (0x81c1b) // 0 (0x00) 8 (0x08) 28 (0x1c) 27 (0x1b)  CRC: 0xA20706AB
	-1577055301,	 // (0xa2000bbb) // 162 (0xa2) 0 (0x00) 11 (0x0b) 187 (0xbb)  CRC: 0x1C2BB693
	1202615,	 // (0x1259b7) // 0 (0x00) 18 (0x12) 89 (0x59) 183 (0xb7)  CRC: 0x49C2A386
	2080541,	 // (0x1fbf1d) // 0 (0x00) 31 (0x1f) 191 (0xbf) 29 (0x1d)  CRC: 0x0CA1480A
	-1711273966,	 // (0x9a000812) // 154 (0x9a) 0 (0x00) 8 (0x08) 18 (0x12)  CRC: 0xF85CDE2A
	539673520,	 // (0x202ac3b0) // 32 (0x20) 42 (0x2a) 195 (0xc3) 176 (0xb0)  CRC: 0x4B7D4E9C
	-1157626791,	 // (0xbb000459) // 187 (0xbb) 0 (0x00) 4 (0x04) 89 (0x59)  CRC: 0xBC1BC2C8
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x1FC76A07
	454932224,	 // (0x1b1db700) // 27 (0x1b) 29 (0x1d) 183 (0xb7) 0 (0x00)  CRC: 0x7DAECD85
	556450736,	 // (0x212ac3b0) // 33 (0x21) 42 (0x2a) 195 (0xc3) 176 (0xb0)  CRC: 0x5D4BF429
	1565258793,	// CRC do Jardel: 0x5D4BF429
	65536,	//	synchronized?, exception table length
//	4506: <clinit>()V
	270580741,	 // (0x1020bc05) // 16 (0x10) 32 (0x20) 188 (0xbc) 5 (0x05)  CRC: 0x0F44F6D0
	-520052815,	 // (0xe1009fb1) // 225 (0xe1) 0 (0x00) 159 (0x9f) 177 (0xb1)  CRC: 0xCF584778
	-816298120,	// CRC do Jardel: 0xCF584778
	0,	//	synchronized?, exception table length
//	java.lang.Integer
//	4510: <init>(I)V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	706458880,	 // (0x2a1bb500) // 42 (0x2a) 27 (0x1b) 181 (0xb5) 0 (0x00)  CRC: 0x220FAC03
	11599872,	 // (0xb10000) // 0 (0x00) 177 (0xb1)  CRC: 0x5D5A5368
	1566200680,	// CRC do Jardel: 0x5D5A5368
	0,	//	synchronized?, exception table length
//	4515: byteValue()B
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1850998784,	 // (0x91ac0000) // 145 (0x91) 172 (0xac)  CRC: 0x8B612F02
	-1956565246,	// CRC do Jardel: 0x8B612F02
	0,	//	synchronized?, exception table length
//	4519: equals(Ljava/lang/Object;)Z
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	734003202,	 // (0x2bc00002) // 43 (0x2b) 192 (0xc0) 0 (0x00) 2 (0x02)  CRC: 0x0B4664E2
	-1275068256,	 // (0xb40000a0) // 180 (0xb4) 0 (0x00) 0 (0x00) 160 (0xa0)  CRC: 0xE1BA062C
	459943,	 // (0x704a7) // 0 (0x00) 7 (0x07) 4 (0x04) 167 (0xa7)  CRC: 0xAE158CEB
	263084,	 // (0x403ac) // 0 (0x00) 4 (0x04) 3 (0x03) 172 (0xac)  CRC: 0x43657D69
	1130724713,	// CRC do Jardel: 0x43657D69
	0,	//	synchronized?, exception table length
//	4526: hashCode()I
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x03DD4804
	64833540,	// CRC do Jardel: 0x03DD4804
	0,	//	synchronized?, exception table length
//	4530: intValue()I
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x03DD4804
	64833540,	// CRC do Jardel: 0x03DD4804
	0,	//	synchronized?, exception table length
//	4534: longValue()J
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-2052259840,	 // (0x85ad0000) // 133 (0x85) 173 (0xad)  CRC: 0x066D4372
	107823986,	// CRC do Jardel: 0x066D4372
	0,	//	synchronized?, exception table length
//	4538: parseInt(Ljava/lang/String;I)I
	706413496,	 // (0x2a1b03b8) // 42 (0x2a) 27 (0x1b) 3 (0x03) 184 (0xb8)  CRC: 0x1FC3DC68
	240640,	 // (0x3ac00) // 0 (0x00) 3 (0x03) 172 (0xac)  CRC: 0xB03DE08F
	-1338122097,	// CRC do Jardel: 0xB03DE08F
	0,	//	synchronized?, exception table length
//	4542: parseInt(Ljava/lang/String;)I
	705694211,	 // (0x2a100a03) // 42 (0x2a) 16 (0x10) 10 (0x0a) 3 (0x03)  CRC: 0xCAFB747D
	-1207958612,	 // (0xb80003ac) // 184 (0xb8) 0 (0x00) 3 (0x03) 172 (0xac)  CRC: 0x37EDF7B2
	938342322,	// CRC do Jardel: 0x37EDF7B2
	0,	//	synchronized?, exception table length
//	4546: shortValue()S
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1817444352,	 // (0x93ac0000) // 147 (0x93) 172 (0xac)  CRC: 0x82E3146C
	-2099047316,	// CRC do Jardel: 0x82E3146C
	0,	//	synchronized?, exception table length
//	4550: toBinaryString(I)Ljava/lang/String;
	436516864,	 // (0x1a04b800) // 26 (0x1a) 4 (0x04) 184 (0xb8) 0 (0x00)  CRC: 0xE2B35327
	78643200,	 // (0x4b00000) // 4 (0x04) 176 (0xb0)  CRC: 0xED4460E1
	-314285855,	// CRC do Jardel: 0xED4460E1
	0,	//	synchronized?, exception table length
//	4554: toUnsignedString(II)Ljava/lang/String;
	68909060,	 // (0x41b7804) // 4 (0x04) 27 (0x1b) 120 (0x78) 4 (0x04)  CRC: 0xD972A023
	1681723424,	 // (0x643d1020) // 100 (0x64) 61 (0x3d) 16 (0x10) 32 (0x20)  CRC: 0xA469EC57
	-1140503024,	 // (0xbc054e10) // 188 (0xbc) 5 (0x05) 78 (0x4e) 16 (0x10)  CRC: 0xAC2A205B
	540410925,	 // (0x2036042d) // 32 (0x20) 54 (0x36) 4 (0x04) 45 (0x2d)  CRC: 0x75F04A53
	352584288,	 // (0x15040260) // 21 (0x15) 4 (0x04) 2 (0x02) 96 (0x60)  CRC: 0xE80735B2
	906237188,	 // (0x36041504) // 54 (0x36) 4 (0x04) 21 (0x15) 4 (0x04)  CRC: 0x9EDB5413
	-536829926,	 // (0xe000a01a) // 224 (0xe0) 0 (0x00) 160 (0xa0) 26 (0x1a)  CRC: 0x16C394DF
	478032981,	 // (0x1c7e3455) // 28 (0x1c) 126 (0x7e) 52 (0x34) 85 (0x55)  CRC: 0x9197B691
	438008891,	 // (0x1a1b7c3b) // 26 (0x1a) 27 (0x1b) 124 (0x7c) 59 (0x3b)  CRC: 0x5926CE38
	446365674,	 // (0x1a9affea) // 26 (0x1a) 154 (0x9a) 255 (0xff) 234 (0xea)  CRC: 0xD614DDD6
	-1157626535,	 // (0xbb000559) // 187 (0xbb) 0 (0x00) 5 (0x05) 89 (0x59)  CRC: 0x0C5AF32F
	756352016,	 // (0x2d150410) // 45 (0x2d) 21 (0x15) 4 (0x04) 16 (0x10)  CRC: 0x1C81990C
	538248292,	 // (0x20150464) // 32 (0x20) 21 (0x15) 4 (0x04) 100 (0x64)  CRC: 0x3F27A9F1
	-1224735056,	 // (0xb70006b0) // 183 (0xb7) 0 (0x00) 6 (0x06) 176 (0xb0)  CRC: 0xAD3D36EE
	-1388497170,	// CRC do Jardel: 0xAD3D36EE
	0,	//	synchronized?, exception table length
//	4570: toHexString(I)Ljava/lang/String;
	436713472,	 // (0x1a07b800) // 26 (0x1a) 7 (0x07) 184 (0xb8) 0 (0x00)  CRC: 0x90580CF4
	78643200,	 // (0x4b00000) // 4 (0x04) 176 (0xb0)  CRC: 0xC03C7769
	-1069779095,	// CRC do Jardel: 0xC03C7769
	0,	//	synchronized?, exception table length
//	4574: toOctalString(I)Ljava/lang/String;
	436647936,	 // (0x1a06b800) // 26 (0x1a) 6 (0x06) 184 (0xb8) 0 (0x00)  CRC: 0x4241CD28
	78643200,	 // (0x4b00000) // 4 (0x04) 176 (0xb0)  CRC: 0xDB147A11
	-619415023,	// CRC do Jardel: 0xDB147A11
	0,	//	synchronized?, exception table length
//	4578: toString()Ljava/lang/String;
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1207957584,	 // (0xb80007b0) // 184 (0xb8) 0 (0x00) 7 (0x07) 176 (0xb0)  CRC: 0xE2D8F472
	-489098126,	// CRC do Jardel: 0xE2D8F472
	0,	//	synchronized?, exception table length
//	4582: toString(I)Ljava/lang/String;
	448266247,	 // (0x1ab80007) // 26 (0x1a) 184 (0xb8) 0 (0x00) 7 (0x07)  CRC: 0x472FC532
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0xC9335252
	-919383470,	// CRC do Jardel: 0xC9335252
	0,	//	synchronized?, exception table length
//	4586: toString(II)Ljava/lang/String;
	453353728,	 // (0x1b05a100) // 27 (0x1b) 5 (0x05) 161 (0xa1) 0 (0x00)  CRC: 0x26FC8F83
	152768548,	 // (0x91b1024) // 9 (0x09) 27 (0x1b) 16 (0x10) 36 (0x24)  CRC: 0x85AA5847
	-1543502320,	 // (0xa4000610) // 164 (0xa4) 0 (0x00) 6 (0x06) 16 (0x10)  CRC: 0x3C3B77E5
	171708449,	 // (0xa3c1021) // 10 (0x0a) 60 (0x3c) 16 (0x10) 33 (0x21)  CRC: 0xDDDC8943
	-1140503280,	 // (0xbc054d10) // 188 (0xbc) 5 (0x05) 77 (0x4d) 16 (0x10)  CRC: 0x22943E50
	557712182,	 // (0x213e0336) // 33 (0x21) 62 (0x3e) 3 (0x03) 54 (0x36)  CRC: 0x9B43AD93
	68852736,	 // (0x41a9c00) // 4 (0x04) 26 (0x1a) 156 (0x9c) 0 (0x00)  CRC: 0xFABDD30B
	587478532,	 // (0x23043604) // 35 (0x23) 4 (0x04) 54 (0x36) 4 (0x04)  CRC: 0xE988E218
	443824922,	 // (0x1a743b1a) // 26 (0x1a) 116 (0x74) 59 (0x3b) 26 (0x1a)  CRC: 0xBC565DAE
	-1677715156,	 // (0x9c00192c) // 156 (0x9c) 0 (0x00) 25 (0x19) 44 (0x2c)  CRC: 0xBDC51055
	486694974,	 // (0x1d02603e) // 29 (0x1d) 2 (0x02) 96 (0x60) 62 (0x3e)  CRC: 0xB545DA5B
	501219488,	 // (0x1de000a0) // 29 (0x1d) 224 (0xe0) 0 (0x00) 160 (0xa0)  CRC: 0x135589E7
	438001780,	 // (0x1a1b6074) // 26 (0x1a) 27 (0x1b) 96 (0x60) 116 (0x74)  CRC: 0x8D07C89A
	460338261,	 // (0x1b703455) // 27 (0x1b) 112 (0x70) 52 (0x34) 85 (0x55)  CRC: 0x08067E5E
	438004852,	 // (0x1a1b6c74) // 26 (0x1a) 27 (0x1b) 108 (0x6c) 116 (0x74)  CRC: 0xD8E11FAA
	992746754,	 // (0x3b2c1d02) // 59 (0x3b) 44 (0x2c) 29 (0x1d) 2 (0x02)  CRC: 0x13910803
	1614683616,	 // (0x603e1de0) // 96 (0x60) 62 (0x3e) 29 (0x1d) 224 (0xe0)  CRC: 0x9B4C130D
	10492443,	 // (0xa01a1b) // 0 (0x00) 160 (0xa0) 26 (0x1a) 27 (0x1b)  CRC: 0x38CC9312
	1882477850,	 // (0x7034551a) // 112 (0x70) 52 (0x34) 85 (0x55) 26 (0x1a)  CRC: 0x98F5405A
	460077850,	 // (0x1b6c3b1a) // 27 (0x1b) 108 (0x6c) 59 (0x3b) 26 (0x1a)  CRC: 0x551FC1B3
	-1644172011,	 // (0x9dffed15) // 157 (0x9d) 255 (0xff) 237 (0xed) 21 (0x15)  CRC: 0x9581B4A0
	77135884,	 // (0x499000c) // 4 (0x04) 153 (0x99) 0 (0x00) 12 (0x0c)  CRC: 0x460648D7
	740098656,	 // (0x2c1d0260) // 44 (0x2c) 29 (0x1d) 2 (0x02) 96 (0x60)  CRC: 0x49BDB173
	1042092077,	 // (0x3e1d102d) // 62 (0x3e) 29 (0x1d) 16 (0x10) 45 (0x2d)  CRC: 0xF03B4983
	1438318597,	 // (0x55bb0005) // 85 (0x55) 187 (0xbb) 0 (0x00) 5 (0x05)  CRC: 0xB874583C
	1496063248,	 // (0x592c1d10) // 89 (0x59) 44 (0x2c) 29 (0x1d) 16 (0x10)  CRC: 0x7836D755
	555574455,	 // (0x211d64b7) // 33 (0x21) 29 (0x1d) 100 (0x64) 183 (0xb7)  CRC: 0xE04D7925
	438272,	 // (0x6b000) // 0 (0x00) 6 (0x06) 176 (0xb0)  CRC: 0x6A548A10
	1783925264,	// CRC do Jardel: 0x6A548A10
	0,	//	synchronized?, exception table length
//	4616: valueOf(Ljava/lang/String;)Ljava/lang/Integer;
	-1157627303,	 // (0xbb000259) // 187 (0xbb) 0 (0x00) 2 (0x02) 89 (0x59)  CRC: 0x9644A05A
	705694211,	 // (0x2a100a03) // 42 (0x2a) 16 (0x10) 10 (0x0a) 3 (0x03)  CRC: 0xDF9D00AC
	-1207958601,	 // (0xb80003b7) // 184 (0xb8) 0 (0x00) 3 (0x03) 183 (0xb7)  CRC: 0x66CFE7D8
	569344,	 // (0x8b000) // 0 (0x00) 8 (0x08) 176 (0xb0)  CRC: 0xC912F10E
	-921505522,	// CRC do Jardel: 0xC912F10E
	0,	//	synchronized?, exception table length
//	4622: parseInt(Ljava/lang/String;IZ)I
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xF4327CCB
	-1104497152,	 // (0xbe2ab600) // 190 (0xbe) 42 (0x2a) 182 (0xb6) 0 (0x00)  CRC: 0xBE7945F6
	161415181,	 // (0x99f000d) // 9 (0x09) 159 (0x9f) 0 (0x00) 13 (0x0d)  CRC: 0xCC13E7E0
	-1157625255,	 // (0xbb000a59) // 187 (0xbb) 0 (0x00) 10 (0x0a) 89 (0x59)  CRC: 0x64875A2D
	302757632,	 // (0x120bb700) // 18 (0x12) 11 (0x0b) 183 (0xb7) 0 (0x00)  CRC: 0x0EE3249F
	213844798,	 // (0xcbf033e) // 12 (0x0c) 191 (0xbf) 3 (0x03) 62 (0x3e)  CRC: 0xFEB5DBBF
	489349632,	 // (0x1d2ae200) // 29 (0x1d) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xE42B21B4
	12493312,	 // (0xbea200) // 0 (0x00) 190 (0xbe) 162 (0xa2) 0 (0x00)  CRC: 0x83C2A982
	539681280,	 // (0x202ae200) // 32 (0x20) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xF54EF5B8
	1914040,	 // (0x1d34b8) // 0 (0x00) 29 (0x1d) 52 (0x34) 184 (0xb8)  CRC: 0x27B63BED
	891392,	 // (0xd9a00) // 0 (0x00) 13 (0x0d) 154 (0x9a) 0 (0x00)  CRC: 0xE5994C67
	230359050,	 // (0xdbb000a) // 13 (0x0d) 187 (0xbb) 0 (0x00) 10 (0x0a)  CRC: 0xC16DB94D
	1494355639,	 // (0x59120eb7) // 89 (0x59) 18 (0x12) 14 (0x0e) 183 (0xb7)  CRC: 0x46CF84E1
	835357,	 // (0xcbf1d) // 0 (0x00) 12 (0x0c) 191 (0xbf) 29 (0x1d)  CRC: 0x26824EC6
	73416359,	 // (0x4603ea7) // 4 (0x04) 96 (0x60) 62 (0x3e) 167 (0xa7)  CRC: 0xA2D00BBB
	-2286438,	 // (0xffdd1c9a) // 255 (0xff) 221 (0xdd) 28 (0x1c) 154 (0x9a)  CRC: 0x6602D1F6
	993991,	 // (0xf2ac7) // 0 (0x00) 15 (0x0f) 42 (0x2a) 199 (0xc7)  CRC: 0x8A89760B
	768768,	 // (0xbbb00) // 0 (0x00) 11 (0x0b) 187 (0xbb) 0 (0x00)  CRC: 0x81B2256F
	257537792,	 // (0xf59b700) // 15 (0x0f) 89 (0x59) 183 (0xb7) 0 (0x00)  CRC: 0x6E4CDC24
	280953662,	 // (0x10bf033e) // 16 (0x10) 191 (0xbf) 3 (0x03) 62 (0x3e)  CRC: 0x8FDAA16E
	716570633,	 // (0x2ab60009) // 42 (0x2a) 182 (0xb6) 0 (0x00) 9 (0x09)  CRC: 0xEC962D05
	906232630,	 // (0x36040336) // 54 (0x36) 4 (0x04) 3 (0x03) 54 (0x36)  CRC: 0x93F45AB2
	85263514,	 // (0x515049a) // 5 (0x05) 21 (0x15) 4 (0x04) 154 (0x9a)  CRC: 0xC6DDB472
	899840,	 // (0xdbb00) // 0 (0x00) 13 (0x0d) 187 (0xbb) 0 (0x00)  CRC: 0xFDEE420C
	257495569,	 // (0xf591211) // 15 (0x0f) 89 (0x59) 18 (0x12) 17 (0x11)  CRC: 0x48F77209
	-1224731969,	 // (0xb70012bf) // 183 (0xb7) 0 (0x00) 18 (0x12) 191 (0xbf)  CRC: 0x81AEA648
	706590208,	 // (0x2a1db600) // 42 (0x2a) 29 (0x1d) 182 (0xb6) 0 (0x00)  CRC: 0x863E9F37
	322307605,	 // (0x13360615) // 19 (0x13) 54 (0x36) 6 (0x06) 21 (0x15)  CRC: 0x68863274
	101723552,	 // (0x6102da0) // 6 (0x06) 16 (0x10) 45 (0x2d) 160 (0xa0)  CRC: 0x3C97F933
	2168068,	 // (0x211504) // 0 (0x00) 33 (0x21) 21 (0x15) 4 (0x04)  CRC: 0x8B52CE0A
	77594637,	 // (0x4a0000d) // 4 (0x04) 160 (0xa0) 0 (0x00) 13 (0x0d)  CRC: 0x3CECEFEB
	-1157623975,	 // (0xbb000f59) // 187 (0xbb) 0 (0x00) 15 (0x0f) 89 (0x59)  CRC: 0x1E1A13E2
	303347456,	 // (0x1214b700) // 18 (0x12) 20 (0x14) 183 (0xb7) 0 (0x00)  CRC: 0xAF5AFBC5
	314508342,	 // (0x12bf0436) // 18 (0x12) 191 (0xbf) 4 (0x04) 54 (0x36)  CRC: 0x1E7C2290
	86646020,	 // (0x52a1d04) // 5 (0x05) 42 (0x2a) 29 (0x1d) 4 (0x04)  CRC: 0x46929370
	1614683574,	 // (0x603e1db6) // 96 (0x60) 62 (0x3e) 29 (0x1d) 182 (0xb6)  CRC: 0x7EDB30DE
	1259014,	 // (0x133606) // 0 (0x00) 19 (0x13) 54 (0x36) 6 (0x06)  CRC: 0xE34E6918
	479789121,	 // (0x1c990041) // 28 (0x1c) 153 (0x99) 0 (0x00) 65 (0x41)  CRC: 0x6C1492E2
	352718896,	 // (0x15061030) // 21 (0x15) 6 (0x06) 16 (0x10) 48 (0x30)  CRC: 0xE47C14CB
	-1610601443,	 // (0xa0002c1d) // 160 (0xa0) 0 (0x00) 44 (0x2c) 29 (0x1d)  CRC: 0xF6B59A5B
	73416221,	 // (0x4603e1d) // 4 (0x04) 96 (0x60) 62 (0x3e) 29 (0x1d)  CRC: 0x7D21C1EA
	352624640,	 // (0x1504a000) // 21 (0x15) 4 (0x04) 160 (0xa0) 0 (0x00)  CRC: 0x9D124EAD
	84126762,	 // (0x503ac2a) // 5 (0x05) 3 (0x03) 172 (0xac) 42 (0x2a)  CRC: 0xEC5248C3
	498466835,	 // (0x1db60013) // 29 (0x1d) 182 (0xb6) 0 (0x00) 19 (0x13)  CRC: 0x56C31E33
	283082256,	 // (0x10df7e10) // 16 (0x10) 223 (0xdf) 126 (0x7e) 16 (0x10)  CRC: 0x57F9700B
	1486880781,	 // (0x58a0000d) // 88 (0x58) 160 (0xa0) 0 (0x00) 13 (0x0d)  CRC: 0x76475D53
	269499421,	 // (0x10103c1d) // 16 (0x10) 16 (0x10) 60 (0x3c) 29 (0x1d)  CRC: 0x9B898DE4
	73416359,	 // (0x4603ea7) // 4 (0x04) 96 (0x60) 62 (0x3e) 167 (0xa7)  CRC: 0x6C95E474
	1511432,	 // (0x171008) // 0 (0x00) 23 (0x17) 16 (0x10) 8 (0x08)  CRC: 0xDF80EAB3
	1017577489,	 // (0x3ca70011) // 60 (0x3c) 167 (0xa7) 0 (0x00) 17 (0x11)  CRC: 0xAFD68026
	352718883,	 // (0x15061023) // 21 (0x15) 6 (0x06) 16 (0x10) 35 (0x23)  CRC: 0x037C4C37
	-1610610160,	 // (0xa0000a10) // 160 (0xa0) 0 (0x00) 10 (0x0a) 16 (0x10)  CRC: 0x767468A3
	272375044,	 // (0x103c1d04) // 16 (0x10) 60 (0x3c) 29 (0x1d) 4 (0x04)  CRC: 0x9699D710
	1614683413,	 // (0x603e1d15) // 96 (0x60) 62 (0x3e) 29 (0x1d) 21 (0x15)  CRC: 0x76296374
	77594654,	 // (0x4a0001e) // 4 (0x04) 160 (0xa0) 0 (0x00) 30 (0x1e)  CRC: 0xA78DE011
	-1157623975,	 // (0xbb000f59) // 187 (0xbb) 0 (0x00) 15 (0x0f) 89 (0x59)  CRC: 0x81262268
	-1157622439,	 // (0xbb001559) // 187 (0xbb) 0 (0x00) 21 (0x15) 89 (0x59)  CRC: 0xC17470E1
	-1224731118,	 // (0xb7001612) // 183 (0xb7) 0 (0x00) 22 (0x16) 18 (0x12)  CRC: 0xBDBCFD67
	397803544,	 // (0x17b60018) // 23 (0x17) 182 (0xb6) 0 (0x00) 24 (0x18)  CRC: 0x76A80D40
	716570648,	 // (0x2ab60018) // 42 (0x2a) 182 (0xb6) 0 (0x00) 24 (0x18)  CRC: 0x128BE447
	-1241507401,	 // (0xb60019b7) // 182 (0xb6) 0 (0x00) 25 (0x19) 183 (0xb7)  CRC: 0x35CE3C45
	1228562,	 // (0x12bf12) // 0 (0x00) 18 (0x12) 191 (0xbf) 18 (0x12)  CRC: 0xCB79BC83
	438004790,	 // (0x1a1b6c36) // 26 (0x1a) 27 (0x1b) 108 (0x6c) 54 (0x36)  CRC: 0xBA7E051C
	118818201,	 // (0x7150599) // 7 (0x07) 21 (0x15) 5 (0x05) 153 (0x99)  CRC: 0xA18D977C
	1249818,	 // (0x13121a) // 0 (0x00) 19 (0x13) 18 (0x12) 26 (0x1a)  CRC: 0xCA84ABC4
	460331780,	 // (0x1b701b04) // 27 (0x1b) 112 (0x70) 27 (0x1b) 4 (0x04)  CRC: 0xB60E3CD1
	1688207369,	 // (0x64a00009) // 100 (0x64) 160 (0xa0) 0 (0x00) 9 (0x09)  CRC: 0xA32F7861
	352781408,	 // (0x15070460) // 21 (0x15) 7 (0x07) 4 (0x04) 96 (0x60)  CRC: 0x1FB8891D
	906429238,	 // (0x36070336) // 54 (0x36) 7 (0x07) 3 (0x03) 54 (0x36)  CRC: 0x57719700
	136123652,	 // (0x81d1504) // 8 (0x08) 29 (0x1d) 21 (0x15) 4 (0x04)  CRC: 0x8212E4D9
	-1577024235,	 // (0xa2008515) // 162 (0xa2) 0 (0x00) 133 (0x85) 21 (0x15)  CRC: 0xD415576D
	144375818,	 // (0x89b000a) // 8 (0x08) 155 (0x9b) 0 (0x00) 10 (0x0a)  CRC: 0x1512D105
	352851207,	 // (0x15081507) // 21 (0x15) 8 (0x08) 21 (0x15) 7 (0x07)  CRC: 0x89DE34D6
	-1543493701,	 // (0xa40027bb) // 164 (0xa4) 0 (0x00) 39 (0x27) 187 (0xbb)  CRC: 0x8EF81BF1
	1006011,	 // (0xf59bb) // 0 (0x00) 15 (0x0f) 89 (0x59) 187 (0xbb)  CRC: 0xB3F29803
	1399223,	 // (0x1559b7) // 0 (0x00) 21 (0x15) 89 (0x59) 183 (0xb7)  CRC: 0x35A053B2
	1446427,	 // (0x16121b) // 0 (0x00) 22 (0x16) 18 (0x12) 27 (0x1b)  CRC: 0x7853C210
	-1241507811,	 // (0xb600181d) // 182 (0xb6) 0 (0x00) 24 (0x18) 29 (0x1d)  CRC: 0x69748100
	-1241506798,	 // (0xb6001c12) // 182 (0xb6) 0 (0x00) 28 (0x1c) 18 (0x12)  CRC: 0xE1A5DDF3
	498466840,	 // (0x1db60018) // 29 (0x1d) 182 (0xb6) 0 (0x00) 24 (0x18)  CRC: 0xFE17C9C4
	716570648,	 // (0x2ab60018) // 42 (0x2a) 182 (0xb6) 0 (0x00) 24 (0x18)  CRC: 0x70667AA2
	-1241507401,	 // (0xb60019b7) // 182 (0xb6) 0 (0x00) 25 (0x19) 183 (0xb7)  CRC: 0x3416B856
	1228586,	 // (0x12bf2a) // 0 (0x00) 18 (0x12) 191 (0xbf) 42 (0x2a)  CRC: 0xFCCB1FFC
	488440928,	 // (0x1d1d0460) // 29 (0x1d) 29 (0x1d) 4 (0x04) 96 (0x60)  CRC: 0x24C4209D
	1052114963,	 // (0x3eb60013) // 62 (0x3e) 182 (0xb6) 0 (0x00) 19 (0x13)  CRC: 0x1707C99F
	465043486,	 // (0x1bb8001e) // 27 (0x1b) 184 (0xb8) 0 (0x00) 30 (0x1e)  CRC: 0xF929D3BF
	906368264,	 // (0x36061508) // 54 (0x36) 6 (0x06) 21 (0x15) 8 (0x08)  CRC: 0x963E0D4A
	459805958,	 // (0x1b681506) // 27 (0x1b) 104 (0x68) 21 (0x15) 6 (0x06)  CRC: 0xECC51D40
	1614153749,	 // (0x60360815) // 96 (0x60) 54 (0x36) 8 (0x08) 21 (0x15)  CRC: 0x9DAE4003
	110821396,	 // (0x69b0014) // 6 (0x06) 155 (0x9b) 0 (0x00) 20 (0x14)  CRC: 0x62C93BC7
	352886015,	 // (0x15089cff) // 21 (0x15) 8 (0x08) 156 (0x9c) 255 (0xff)  CRC: 0x3F9B2B4C
	-1424685671,	 // (0xab150599) // 171 (0xab) 21 (0x15) 5 (0x05) 153 (0x99)  CRC: 0xF3A83C57
	660744,	 // (0xa1508) // 0 (0x00) 10 (0x0a) 21 (0x15) 8 (0x08)  CRC: 0x82D7645C
	304062463,	 // (0x121f9fff) // 18 (0x12) 31 (0x1f) 159 (0x9f) 255 (0xff)  CRC: 0x6C6DFDC2
	-1615134705,	 // (0x9fbb000f) // 159 (0x9f) 187 (0xbb) 0 (0x00) 15 (0x0f)  CRC: 0xF3065177
	1505427477,	 // (0x59bb0015) // 89 (0x59) 187 (0xbb) 0 (0x00) 21 (0x15)  CRC: 0x345E2D32
	1505165334,	 // (0x59b70016) // 89 (0x59) 183 (0xb7) 0 (0x00) 22 (0x16)  CRC: 0x08CD9B92
	304133632,	 // (0x1220b600) // 18 (0x12) 32 (0x20) 182 (0xb6) 0 (0x00)  CRC: 0x8623F929
	404600320,	 // (0x181db600) // 24 (0x18) 29 (0x1d) 182 (0xb6) 0 (0x00)  CRC: 0xE7D11FD6
	470950326,	 // (0x1c1221b6) // 28 (0x1c) 18 (0x12) 33 (0x21) 182 (0xb6)  CRC: 0x29FDF8F9
	1583798,	 // (0x182ab6) // 0 (0x00) 24 (0x18) 42 (0x2a) 182 (0xb6)  CRC: 0x7E7E148E
	1619456,	 // (0x18b600) // 0 (0x00) 24 (0x18) 182 (0xb6) 0 (0x00)  CRC: 0xFBBD23B6
	431423506,	 // (0x19b70012) // 25 (0x19) 183 (0xb7) 0 (0x00) 18 (0x12)  CRC: 0x64B40126
	-1089141351,	 // (0xbf150599) // 191 (0xbf) 21 (0x15) 5 (0x05) 153 (0x99)  CRC: 0xAACA4E1E
	595208,	 // (0x91508) // 0 (0x00) 9 (0x09) 21 (0x15) 8 (0x08)  CRC: 0x7A3AB3E4
	1957101573,	 // (0x74a70005) // 116 (0x74) 167 (0xa7) 0 (0x00) 5 (0x05)  CRC: 0x720579E4
	352889856,	 // (0x1508ac00) // 21 (0x15) 8 (0x08) 172 (0xac)  CRC: 0x867E281A
	-2038552550,	// CRC do Jardel: 0x867E281A
	0,	//	synchronized?, exception table length
//	4731: <clinit>()V
	270842885,	 // (0x1024bc05) // 16 (0x10) 36 (0x24) 188 (0xbc) 5 (0x05)  CRC: 0x4A60D779
	1493372976,	 // (0x59031030) // 89 (0x59) 3 (0x03) 16 (0x10) 48 (0x30)  CRC: 0xD7368A0A
	1431897104,	 // (0x55590410) // 85 (0x55) 89 (0x59) 4 (0x04) 16 (0x10)  CRC: 0xAFF13413
	827676933,	 // (0x31555905) // 49 (0x31) 85 (0x55) 89 (0x59) 5 (0x05)  CRC: 0xF2246A5F
	271734105,	 // (0x10325559) // 16 (0x10) 50 (0x32) 85 (0x55) 89 (0x59)  CRC: 0x5368FD98
	101725013,	 // (0x6103355) // 6 (0x06) 16 (0x10) 51 (0x33) 85 (0x55)  CRC: 0x406DA69C
	1493635124,	 // (0x59071034) // 89 (0x59) 7 (0x07) 16 (0x10) 52 (0x34)  CRC: 0xD2A96061
	1431898128,	 // (0x55590810) // 85 (0x55) 89 (0x59) 8 (0x08) 16 (0x10)  CRC: 0xB2E1CE81
	894785808,	 // (0x35555910) // 53 (0x35) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0xF05D88B5
	101725781,	 // (0x6103655) // 6 (0x06) 16 (0x10) 54 (0x36) 85 (0x55)  CRC: 0x05ED26B1
	1494222608,	 // (0x59100710) // 89 (0x59) 16 (0x10) 7 (0x07) 16 (0x10)  CRC: 0xCD15EDD5
	928340240,	 // (0x37555910) // 55 (0x37) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x5202125F
	135280725,	 // (0x8103855) // 8 (0x08) 16 (0x10) 56 (0x38) 85 (0x55)  CRC: 0xF14BFEC0
	1494223120,	 // (0x59100910) // 89 (0x59) 16 (0x10) 9 (0x09) 16 (0x10)  CRC: 0xBFC8BC57
	961894672,	 // (0x39555910) // 57 (0x39) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x72705C1B
	168845653,	 // (0xa106155) // 10 (0x0a) 16 (0x10) 97 (0x61) 85 (0x55)  CRC: 0x2CC3141D
	1494223632,	 // (0x59100b10) // 89 (0x59) 16 (0x10) 11 (0x0b) 16 (0x10)  CRC: 0x6EFC9E27
	1649760528,	 // (0x62555910) // 98 (0x62) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x3C387963
	202400597,	 // (0xc106355) // 12 (0x0c) 16 (0x10) 99 (0x63) 85 (0x55)  CRC: 0xD42E0FD6
	1494224144,	 // (0x59100d10) // 89 (0x59) 16 (0x10) 13 (0x0d) 16 (0x10)  CRC: 0xCEE97F4C
	1683314960,	 // (0x64555910) // 100 (0x64) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0xC71FD70E
	235955541,	 // (0xe106555) // 14 (0x0e) 16 (0x10) 101 (0x65) 85 (0x55)  CRC: 0x442DB6AF
	1494224656,	 // (0x59100f10) // 89 (0x59) 16 (0x10) 15 (0x0f) 16 (0x10)  CRC: 0xB691D9BE
	1716869392,	 // (0x66555910) // 102 (0x66) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x622B057A
	269510485,	 // (0x10106755) // 16 (0x10) 16 (0x10) 103 (0x67) 85 (0x55)  CRC: 0x7AB009FA
	1494225168,	 // (0x59101110) // 89 (0x59) 16 (0x10) 17 (0x11) 16 (0x10)  CRC: 0x1CFD70DA
	1750423824,	 // (0x68555910) // 104 (0x68) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x561CD530
	303065429,	 // (0x12106955) // 18 (0x12) 16 (0x10) 105 (0x69) 85 (0x55)  CRC: 0xF32F0C8A
	1494225680,	 // (0x59101310) // 89 (0x59) 16 (0x10) 19 (0x13) 16 (0x10)  CRC: 0x11B643BB
	1783978256,	 // (0x6a555910) // 106 (0x6a) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x96163951
	336620373,	 // (0x14106b55) // 20 (0x14) 16 (0x10) 107 (0x6b) 85 (0x55)  CRC: 0x14F8B361
	1494226192,	 // (0x59101510) // 89 (0x59) 16 (0x10) 21 (0x15) 16 (0x10)  CRC: 0xF71CF543
	1817532688,	 // (0x6c555910) // 108 (0x6c) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0xF34CCF6A
	370175317,	 // (0x16106d55) // 22 (0x16) 16 (0x10) 109 (0x6d) 85 (0x55)  CRC: 0x0D89B73B
	1494226704,	 // (0x59101710) // 89 (0x59) 16 (0x10) 23 (0x17) 16 (0x10)  CRC: 0x656B0AFC
	1851087120,	 // (0x6e555910) // 110 (0x6e) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x8957E6AC
	403730261,	 // (0x18106f55) // 24 (0x18) 16 (0x10) 111 (0x6f) 85 (0x55)  CRC: 0x957035A9
	1494227216,	 // (0x59101910) // 89 (0x59) 16 (0x10) 25 (0x19) 16 (0x10)  CRC: 0x7A7BB96A
	1884641552,	 // (0x70555910) // 112 (0x70) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x09304236
	437285205,	 // (0x1a107155) // 26 (0x1a) 16 (0x10) 113 (0x71) 85 (0x55)  CRC: 0x8821A06A
	1494227728,	 // (0x59101b10) // 89 (0x59) 16 (0x10) 27 (0x1b) 16 (0x10)  CRC: 0xE8FCD3F6
	1918195984,	 // (0x72555910) // 114 (0x72) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x5F4962E7
	470840149,	 // (0x1c107355) // 28 (0x1c) 16 (0x10) 115 (0x73) 85 (0x55)  CRC: 0x1DAEBC6B
	1494228240,	 // (0x59101d10) // 89 (0x59) 16 (0x10) 29 (0x1d) 16 (0x10)  CRC: 0x21217A9A
	1951750416,	 // (0x74555910) // 116 (0x74) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0xFBE261F0
	504395093,	 // (0x1e107555) // 30 (0x1e) 16 (0x10) 117 (0x75) 85 (0x55)  CRC: 0xDB57CD89
	1494228752,	 // (0x59101f10) // 89 (0x59) 16 (0x10) 31 (0x1f) 16 (0x10)  CRC: 0x49F305DD
	1985304848,	 // (0x76555910) // 118 (0x76) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x52C43B2D
	537950037,	 // (0x20107755) // 32 (0x20) 16 (0x10) 119 (0x77) 85 (0x55)  CRC: 0x3DEFBC86
	1494229264,	 // (0x59102110) // 89 (0x59) 16 (0x10) 33 (0x21) 16 (0x10)  CRC: 0x67679F32
	2018859280,	 // (0x78555910) // 120 (0x78) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x0E991DFE
	571504981,	 // (0x22107955) // 34 (0x22) 16 (0x10) 121 (0x79) 85 (0x55)  CRC: 0x27101698
	1494229776,	 // (0x59102310) // 89 (0x59) 16 (0x10) 35 (0x23) 16 (0x10)  CRC: 0x99140AA8
	2052448512,	 // (0x7a55e100) // 122 (0x7a) 85 (0x55) 225 (0xe1) 0 (0x00)  CRC: 0x3AA48CB8
	-1599012864,	 // (0xa0b10000) // 160 (0xa0) 177 (0xb1)  CRC: 0xCFB28227
	-810384857,	// CRC do Jardel: 0xCFB28227
	0,	//	synchronized?, exception table length
//	java.lang.Math
//	4788: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	4792: abs(I)I
	446431240,	 // (0x1a9c0008) // 26 (0x1a) 156 (0x9c) 0 (0x00) 8 (0x08)  CRC: 0xC7C0B4DC
	443852544,	 // (0x1a74a700) // 26 (0x1a) 116 (0x74) 167 (0xa7) 0 (0x00)  CRC: 0xA784CC69
	68856832,	 // (0x41aac00) // 4 (0x04) 26 (0x1a) 172 (0xac)  CRC: 0xCE78A17A
	-830955142,	// CRC do Jardel: 0xCE78A17A
	0,	//	synchronized?, exception table length
//	4797: abs(J)J
	503944348,	 // (0x1e09949c) // 30 (0x1e) 9 (0x09) 148 (0x94) 156 (0x9c)  CRC: 0x0A9D04A9
	532085,	 // (0x81e75) // 0 (0x00) 8 (0x08) 30 (0x1e) 117 (0x75)  CRC: 0xDB33EF95
	-1493171170,	 // (0xa700041e) // 167 (0xa7) 0 (0x00) 4 (0x04) 30 (0x1e)  CRC: 0x77A78DDB
	-1392508928,	 // (0xad000000) // 173 (0xad)  CRC: 0x67EFBA73
	1743764083,	// CRC do Jardel: 0x67EFBA73
	0,	//	synchronized?, exception table length
//	4803: abs(F)F
	571184797,	 // (0x220b969d) // 34 (0x22) 11 (0x0b) 150 (0x96) 157 (0x9d)  CRC: 0x948DAFEB
	592674,	 // (0x90b22) // 0 (0x00) 9 (0x09) 11 (0x0b) 34 (0x22)  CRC: 0x3A6A2601
	1722220548,	 // (0x66a70004) // 102 (0x66) 167 (0xa7) 0 (0x00) 4 (0x04)  CRC: 0x86C59444
	581828608,	 // (0x22ae0000) // 34 (0x22) 174 (0xae)  CRC: 0x56A5DE57
	1453710935,	// CRC do Jardel: 0x56A5DE57
	0,	//	synchronized?, exception table length
//	4809: abs(D)D
	638490781,	 // (0x260e989d) // 38 (0x26) 14 (0x0e) 152 (0x98) 157 (0x9d)  CRC: 0x1AA2B668
	593446,	 // (0x90e26) // 0 (0x00) 9 (0x09) 14 (0x0e) 38 (0x26)  CRC: 0xC352D9B3
	1738997764,	 // (0x67a70004) // 103 (0x67) 167 (0xa7) 0 (0x00) 4 (0x04)  CRC: 0x1FD2E325
	649003008,	 // (0x26af0000) // 38 (0x26) 175 (0xaf)  CRC: 0x15539092
	357798034,	// CRC do Jardel: 0x15539092
	0,	//	synchronized?, exception table length
//	4815: min(II)I
	438018560,	 // (0x1a1ba200) // 26 (0x1a) 27 (0x1b) 162 (0xa2) 0 (0x00)  CRC: 0x5F9B005A
	119187200,	 // (0x71aa700) // 7 (0x07) 26 (0x1a) 167 (0xa7) 0 (0x00)  CRC: 0x9FE63EB9
	68922368,	 // (0x41bac00) // 4 (0x04) 27 (0x1b) 172 (0xac)  CRC: 0xF4A8B7D7
	-190269481,	// CRC do Jardel: 0xF4A8B7D7
	0,	//	synchronized?, exception table length
//	4820: min(JJ)J
	505451676,	 // (0x1e20949c) // 30 (0x1e) 32 (0x20) 148 (0x94) 156 (0x9c)  CRC: 0x726FB001
	466599,	 // (0x71ea7) // 0 (0x00) 7 (0x07) 30 (0x1e) 167 (0xa7)  CRC: 0xF06595EE
	270509,	 // (0x420ad) // 0 (0x00) 4 (0x04) 32 (0x20) 173 (0xad)  CRC: 0xB607C831
	-1241003983,	// CRC do Jardel: 0xB607C831
	0,	//	synchronized?, exception table length
//	4825: min(FF)F
	572691865,	 // (0x22229599) // 34 (0x22) 34 (0x22) 149 (0x95) 153 (0x99)  CRC: 0x92E3A2CF
	336558,	 // (0x522ae) // 0 (0x00) 5 (0x05) 34 (0x22) 174 (0xae)  CRC: 0xF362CC7A
	571184538,	 // (0x220b959a) // 34 (0x22) 11 (0x0b) 149 (0x95) 154 (0x9a)  CRC: 0x0D0E254D
	992011,	 // (0xf230b) // 0 (0x00) 15 (0x0f) 35 (0x23) 11 (0x0b)  CRC: 0xFCD79340
	-1785069559,	 // (0x959a0009) // 149 (0x95) 154 (0x9a) 0 (0x00) 9 (0x09)  CRC: 0x16635F01
	578167654,	 // (0x22762366) // 34 (0x22) 118 (0x76) 35 (0x23) 102 (0x66)  CRC: 0x5757FE56
	1991123491,	 // (0x76ae2223) // 118 (0x76) 174 (0xae) 34 (0x22) 35 (0x23)  CRC: 0x2F219176
	-1768161273,	 // (0x969c0007) // 150 (0x96) 156 (0x9c) 0 (0x00) 7 (0x07)  CRC: 0xF11267C2
	581369860,	 // (0x22a70004) // 34 (0x22) 167 (0xa7) 0 (0x00) 4 (0x04)  CRC: 0xD2C8137B
	598605824,	 // (0x23ae0000) // 35 (0x23) 174 (0xae)  CRC: 0x59D73E7F
	1507278463,	// CRC do Jardel: 0x59D73E7F
	0,	//	synchronized?, exception table length
//	4837: min(DD)D
	640063385,	 // (0x26269799) // 38 (0x26) 38 (0x26) 151 (0x97) 153 (0x99)  CRC: 0xC772ACB4
	337583,	 // (0x526af) // 0 (0x00) 5 (0x05) 38 (0x26) 175 (0xaf)  CRC: 0xFA978290
	638490522,	 // (0x260e979a) // 38 (0x26) 14 (0x0e) 151 (0x97) 154 (0x9a)  CRC: 0xD1A2AC0B
	993294,	 // (0xf280e) // 0 (0x00) 15 (0x0f) 40 (0x28) 14 (0x0e)  CRC: 0x7F24E230
	-1751515127,	 // (0x979a0009) // 151 (0x97) 154 (0x9a) 0 (0x00) 9 (0x09)  CRC: 0x24E23907
	645343335,	 // (0x26772867) // 38 (0x26) 119 (0x77) 40 (0x28) 103 (0x67)  CRC: 0x945746A2
	2007967272,	 // (0x77af2628) // 119 (0x77) 175 (0xaf) 38 (0x26) 40 (0x28)  CRC: 0xD20E7769
	-1734606841,	 // (0x989c0007) // 152 (0x98) 156 (0x9c) 0 (0x00) 7 (0x07)  CRC: 0xBCDCA7BE
	648478724,	 // (0x26a70004) // 38 (0x26) 167 (0xa7) 0 (0x00) 4 (0x04)  CRC: 0xCFB46477
	682557440,	 // (0x28af0000) // 40 (0x28) 175 (0xaf)  CRC: 0x2487DCCA
	612883658,	// CRC do Jardel: 0x2487DCCA
	0,	//	synchronized?, exception table length
//	4849: max(II)I
	438019072,	 // (0x1a1ba400) // 26 (0x1a) 27 (0x1b) 164 (0xa4) 0 (0x00)  CRC: 0x5B48EB48
	119187200,	 // (0x71aa700) // 7 (0x07) 26 (0x1a) 167 (0xa7) 0 (0x00)  CRC: 0x38D45368
	68922368,	 // (0x41bac00) // 4 (0x04) 27 (0x1b) 172 (0xac)  CRC: 0xE8C19CDD
	-389964579,	// CRC do Jardel: 0xE8C19CDD
	0,	//	synchronized?, exception table length
//	4854: max(JJ)J
	505451678,	 // (0x1e20949e) // 30 (0x1e) 32 (0x20) 148 (0x94) 158 (0x9e)  CRC: 0xCE7598D8
	466599,	 // (0x71ea7) // 0 (0x00) 7 (0x07) 30 (0x1e) 167 (0xa7)  CRC: 0x47262C7A
	270509,	 // (0x420ad) // 0 (0x00) 4 (0x04) 32 (0x20) 173 (0xad)  CRC: 0xB9EA0E3D
	-1175843267,	// CRC do Jardel: 0xB9EA0E3D
	0,	//	synchronized?, exception table length
//	4859: max(FF)F
	572691865,	 // (0x22229599) // 34 (0x22) 34 (0x22) 149 (0x95) 153 (0x99)  CRC: 0x92E3A2CF
	336558,	 // (0x522ae) // 0 (0x00) 5 (0x05) 34 (0x22) 174 (0xae)  CRC: 0xF362CC7A
	571184538,	 // (0x220b959a) // 34 (0x22) 11 (0x0b) 149 (0x95) 154 (0x9a)  CRC: 0x0D0E254D
	926475,	 // (0xe230b) // 0 (0x00) 14 (0x0e) 35 (0x23) 11 (0x0b)  CRC: 0x2ECE529C
	-1785069560,	 // (0x959a0008) // 149 (0x95) 154 (0x9a) 0 (0x00) 8 (0x08)  CRC: 0xD126C8CE
	572749414,	 // (0x22237666) // 34 (0x22) 35 (0x23) 118 (0x76) 102 (0x66)  CRC: 0x275762FA
	-1373494379,	 // (0xae222395) // 174 (0xae) 34 (0x22) 35 (0x23) 149 (0x95)  CRC: 0x7A02044D
	-1644165342,	 // (0x9e000722) // 158 (0x9e) 0 (0x00) 7 (0x07) 34 (0x22)  CRC: 0x80AB77FE
	-1493171165,	 // (0xa7000423) // 167 (0xa7) 0 (0x00) 4 (0x04) 35 (0x23)  CRC: 0xECD0DD44
	-1375731712,	 // (0xae000000) // 174 (0xae)  CRC: 0xBB39E9C9
	-1153832503,	// CRC do Jardel: 0xBB39E9C9
	0,	//	synchronized?, exception table length
//	4871: max(DD)D
	640063385,	 // (0x26269799) // 38 (0x26) 38 (0x26) 151 (0x97) 153 (0x99)  CRC: 0xC772ACB4
	337583,	 // (0x526af) // 0 (0x00) 5 (0x05) 38 (0x26) 175 (0xaf)  CRC: 0xFA978290
	638490522,	 // (0x260e979a) // 38 (0x26) 14 (0x0e) 151 (0x97) 154 (0x9a)  CRC: 0xD1A2AC0B
	927758,	 // (0xe280e) // 0 (0x00) 14 (0x0e) 40 (0x28) 14 (0x0e)  CRC: 0xAD3D23EC
	-1751515128,	 // (0x979a0008) // 151 (0x97) 154 (0x9a) 0 (0x00) 8 (0x08)  CRC: 0xE3A7AEC8
	640186215,	 // (0x26287767) // 38 (0x26) 40 (0x28) 119 (0x77) 103 (0x67)  CRC: 0xC3993A65
	-1356453737,	 // (0xaf262897) // 175 (0xaf) 38 (0x26) 40 (0x28) 151 (0x97)  CRC: 0x3CDEF9C3
	-1644165338,	 // (0x9e000726) // 158 (0x9e) 0 (0x00) 7 (0x07) 38 (0x26)  CRC: 0xD83D4944
	-1493171160,	 // (0xa7000428) // 167 (0xa7) 0 (0x00) 4 (0x04) 40 (0x28)  CRC: 0x9277B857
	-1358954496,	 // (0xaf000000) // 175 (0xaf)  CRC: 0x2FD120EC
	802234604,	// CRC do Jardel: 0x2FD120EC
	0,	//	synchronized?, exception table length
//	4883: round(F)I
	582483970,	 // (0x22b80002) // 34 (0x22) 184 (0xb8) 0 (0x00) 2 (0x02)  CRC: 0x158D93A8
	-1207958612,	 // (0xb80003ac) // 184 (0xb8) 0 (0x00) 3 (0x03) 172 (0xac)  CRC: 0xD4FB5F70
	-721723536,	// CRC do Jardel: 0xD4FB5F70
	0,	//	synchronized?, exception table length
//	java.lang.CharSequence
//	4887: charAt(I)C
//	abstract
//	4887: length()I
//	abstract
//	4887: subSequence(II)Ljava/lang/CharSequence;
//	abstract
//	4887: toString()Ljava/lang/String;
//	abstract
//	com.jopdesign.sys.SoftFloat
//	4887: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	4891: shift32RightJamming(II)I
	463077384,	 // (0x1b9a0008) // 27 (0x1b) 154 (0x9a) 0 (0x00) 8 (0x08)  CRC: 0x26D716CD
	440248064,	 // (0x1a3da700) // 26 (0x1a) 61 (0x3d) 167 (0xa7) 0 (0x00)  CRC: 0xAD6E6A36
	706416672,	 // (0x2a1b1020) // 42 (0x2a) 27 (0x1b) 16 (0x10) 32 (0x20)  CRC: 0x7F86C56E
	-1577051622,	 // (0xa2001a1a) // 162 (0xa2) 0 (0x00) 26 (0x1a) 26 (0x1a)  CRC: 0x5F68029E
	461117979,	 // (0x1b7c1a1b) // 27 (0x1b) 124 (0x7c) 26 (0x1a) 27 (0x1b)  CRC: 0x9E004A06
	1947213694,	 // (0x74101f7e) // 116 (0x74) 16 (0x10) 31 (0x1f) 126 (0x7e)  CRC: 0x19C30CEF
	2023292935,	 // (0x78990007) // 120 (0x78) 153 (0x99) 0 (0x00) 7 (0x07)  CRC: 0x68BF8ED9
	78053380,	 // (0x4a70004) // 4 (0x04) 167 (0xa7) 0 (0x00) 4 (0x04)  CRC: 0x27464384
	58736039,	 // (0x3803da7) // 3 (0x03) 128 (0x80) 61 (0x3d) 167 (0xa7)  CRC: 0x3C948E10
	858777,	 // (0xd1a99) // 0 (0x00) 13 (0x0d) 26 (0x1a) 153 (0x99)  CRC: 0xB6A13DCF
	459943,	 // (0x704a7) // 0 (0x00) 7 (0x07) 4 (0x04) 167 (0xa7)  CRC: 0x850D27A3
	262973,	 // (0x4033d) // 0 (0x00) 4 (0x04) 3 (0x03) 61 (0x3d)  CRC: 0xE6C3584D
	481034240,	 // (0x1cac0000) // 28 (0x1c) 172 (0xac)  CRC: 0x0FAD9654
	263034452,	// CRC do Jardel: 0x0FAD9654
	0,	//	synchronized?, exception table length
//	4906: countLeadingZeros32(I)I
	54270736,	 // (0x33c1b10) // 3 (0x03) 60 (0x3c) 27 (0x1b) 16 (0x10)  CRC: 0x14EF9D75
	547487765,	 // (0x20a20015) // 32 (0x20) 162 (0xa2) 0 (0x00) 21 (0x15)  CRC: 0x94EC1BCB
	446431238,	 // (0x1a9c0006) // 26 (0x1a) 156 (0x9c) 0 (0x00) 6 (0x06)  CRC: 0xE53EEC5F
	-1493168614,	 // (0xa7000e1a) // 167 (0xa7) 0 (0x00) 14 (0x0e) 26 (0x1a)  CRC: 0x2A4A0853
	74988315,	 // (0x4783b1b) // 4 (0x04) 120 (0x78) 59 (0x3b) 27 (0x1b)  CRC: 0x87981E49
	73415847,	 // (0x4603ca7) // 4 (0x04) 96 (0x60) 60 (0x3c) 167 (0xa7)  CRC: 0x21A9ECA4
	-1369172,	 // (0xffeb1bac) // 255 (0xff) 235 (0xeb) 27 (0x1b) 172 (0xac)  CRC: 0x52FF2FA7
	1392455591,	// CRC do Jardel: 0x52FF2FA7
	0,	//	synchronized?, exception table length
//	4915: roundAndPackFloat32(III)I
	272645660,	 // (0x10403e1c) // 16 (0x10) 64 (0x40) 62 (0x3e) 28 (0x1c)  CRC: 0x53D5992A
	276790838,	 // (0x107f7e36) // 16 (0x10) 127 (0x7f) 126 (0x7e) 54 (0x36)  CRC: 0xBD8AC4D5
	68223229,	 // (0x41100fd) // 4 (0x04) 17 (0x11) 0 (0x00) 253 (0xfd)  CRC: 0x61CD770F
	454165118,	 // (0x1b12027e) // 27 (0x1b) 18 (0x12) 2 (0x02) 126 (0x7e)  CRC: 0x2A021D9C
	-1560265711,	 // (0xa3003c11) // 163 (0xa3) 0 (0x00) 60 (0x3c) 17 (0x11)  CRC: 0x49B07E95
	16587681,	 // (0xfd1ba1) // 0 (0x00) 253 (0xfd) 27 (0x1b) 161 (0xa1)  CRC: 0x7DA6E6DC
	1055505,	 // (0x101b11) // 0 (0x00) 16 (0x10) 27 (0x1b) 17 (0x11)  CRC: 0x4E2A15D2
	16621568,	 // (0xfda000) // 0 (0x00) 253 (0xfd) 160 (0xa0) 0 (0x00)  CRC: 0x780CA312
	454827360,	 // (0x1b1c1d60) // 27 (0x1b) 28 (0x1c) 29 (0x1d) 96 (0x60)  CRC: 0x3F9C69D4
	-1677716198,	 // (0x9c00151a) // 156 (0x9c) 0 (0x00) 21 (0x15) 26 (0x1a)  CRC: 0x82005E57
	270497810,	 // (0x101f7812) // 16 (0x10) 31 (0x1f) 120 (0x78) 18 (0x12)  CRC: 0xB61D8034
	56630682,	 // (0x3601d9a) // 3 (0x03) 96 (0x60) 29 (0x1d) 154 (0x9a)  CRC: 0x46EA2D99
	459943,	 // (0x704a7) // 0 (0x00) 7 (0x07) 4 (0x04) 167 (0xa7)  CRC: 0xE7C22C6E
	263012,	 // (0x40364) // 0 (0x00) 4 (0x04) 3 (0x03) 100 (0x64)  CRC: 0x67F4525D
	-1407476736,	 // (0xac1b9c00) // 172 (0xac) 27 (0x1b) 156 (0x9c) 0 (0x00)  CRC: 0xF0EDF3AB
	303831924,	 // (0x121c1b74) // 18 (0x12) 28 (0x1c) 27 (0x1b) 116 (0x74)  CRC: 0xA33B6271
	-1207958467,	 // (0xb800043d) // 184 (0xb8) 0 (0x00) 4 (0x04) 61 (0x3d)  CRC: 0xFBF233A6
	54270992,	 // (0x33c1c10) // 3 (0x03) 60 (0x3c) 28 (0x1c) 16 (0x10)  CRC: 0xF492BC1A
	2138977796,	 // (0x7f7e3604) // 127 (0x7f) 126 (0x7e) 54 (0x36) 4 (0x04)  CRC: 0x62712041
	471687184,	 // (0x1c1d6010) // 28 (0x1c) 29 (0x1d) 96 (0x60) 16 (0x10)  CRC: 0x087B94EF
	125582620,	 // (0x77c3d1c) // 7 (0x07) 124 (0x7c) 61 (0x3d) 28 (0x1c)  CRC: 0x7399A115
	352587840,	 // (0x15041040) // 21 (0x15) 4 (0x04) 16 (0x10) 64 (0x40)  CRC: 0xABD35CC8
	-2103836665,	 // (0x829a0007) // 130 (0x82) 154 (0x9a) 0 (0x00) 7 (0x07)  CRC: 0x719E5D89
	78053380,	 // (0x4a70004) // 4 (0x04) 167 (0xa7) 0 (0x00) 4 (0x04)  CRC: 0x16FF8BEE
	50496126,	 // (0x302827e) // 3 (0x03) 2 (0x02) 130 (0x82) 126 (0x7e)  CRC: 0xB462B7E1
	1025284608,	 // (0x3d1c9a00) // 61 (0x3d) 28 (0x1c) 154 (0x9a) 0 (0x00)  CRC: 0x0BD26610
	84098074,	 // (0x5033c1a) // 5 (0x05) 3 (0x03) 60 (0x3c) 26 (0x1a)  CRC: 0x2D0BC09A
	270497819,	 // (0x101f781b) // 16 (0x10) 31 (0x1f) 120 (0x78) 27 (0x1b)  CRC: 0xA755A780
	269973600,	 // (0x10177860) // 16 (0x10) 23 (0x17) 120 (0x78) 96 (0x60)  CRC: 0xCF7EF753
	476097536,	 // (0x1c60ac00) // 28 (0x1c) 96 (0x60) 172 (0xac)  CRC: 0xBF00C82C
	-1090467796,	// CRC do Jardel: 0xBF00C82C
	0,	//	synchronized?, exception table length
//	4947: normalizeRoundAndPackFloat32(III)I
	473302019,	 // (0x1c360403) // 28 (0x1c) 54 (0x36) 4 (0x04) 3 (0x03)  CRC: 0xCB2C52F5
	1042092064,	 // (0x3e1d1020) // 62 (0x3e) 29 (0x1d) 16 (0x10) 32 (0x20)  CRC: 0xA1B945F5
	-1577052139,	 // (0xa2001815) // 162 (0xa2) 0 (0x00) 24 (0x18) 21 (0x15)  CRC: 0xA1DE1296
	77332486,	 // (0x49c0006) // 4 (0x04) 156 (0x9c) 0 (0x00) 6 (0x06)  CRC: 0x1CE18401
	-1493168107,	 // (0xa7001015) // 167 (0xa7) 0 (0x00) 16 (0x10) 21 (0x15)  CRC: 0xB4BC7667
	67401782,	 // (0x4047836) // 4 (0x04) 4 (0x04) 120 (0x78) 54 (0x36)  CRC: 0xF7437AA0
	69010528,	 // (0x41d0460) // 4 (0x04) 29 (0x1d) 4 (0x04) 96 (0x60)  CRC: 0x8A518C42
	1051197416,	 // (0x3ea7ffe8) // 62 (0x3e) 167 (0xa7) 255 (0xff) 232 (0xe8)  CRC: 0x570D0E13
	486694974,	 // (0x1d02603e) // 29 (0x1d) 2 (0x02) 96 (0x60) 62 (0x3e)  CRC: 0xA8DEDD6B
	437984612,	 // (0x1a1b1d64) // 26 (0x1a) 27 (0x1b) 29 (0x1d) 100 (0x64)  CRC: 0xA897E5AC
	471693496,	 // (0x1c1d78b8) // 28 (0x1c) 29 (0x1d) 120 (0x78) 184 (0xb8)  CRC: 0x99FC2B63
	371712,	 // (0x5ac00) // 0 (0x00) 5 (0x05) 172 (0xac)  CRC: 0xF10FD12F
	-250621649,	// CRC do Jardel: 0xF10FD12F
	0,	//	synchronized?, exception table length
//	4961: int32_to_float32(I)I
	446300165,	 // (0x1a9a0005) // 26 (0x1a) 154 (0x9a) 0 (0x00) 5 (0x05)  CRC: 0x7B6445C2
	61610514,	 // (0x3ac1a12) // 3 (0x03) 172 (0xac) 26 (0x1a) 18 (0x12)  CRC: 0xA6ACAF31
	111149062,	 // (0x6a00006) // 6 (0x06) 160 (0xa0) 0 (0x00) 6 (0x06)  CRC: 0xE5197E15
	302492698,	 // (0x1207ac1a) // 18 (0x12) 7 (0x07) 172 (0xac) 26 (0x1a)  CRC: 0x74B1B602
	270498876,	 // (0x101f7c3c) // 16 (0x10) 31 (0x1f) 124 (0x7c) 60 (0x3c)  CRC: 0x05169C92
	454099100,	 // (0x1b11009c) // 27 (0x1b) 17 (0x11) 0 (0x00) 156 (0x9c)  CRC: 0xB9105A3F
	463011848,	 // (0x1b990008) // 27 (0x1b) 153 (0x99) 0 (0x00) 8 (0x08)  CRC: 0x40FA2FB3
	443852544,	 // (0x1a74a700) // 26 (0x1a) 116 (0x74) 167 (0xa7) 0 (0x00)  CRC: 0xC89F4E99
	68859904,	 // (0x41ab800) // 4 (0x04) 26 (0x1a) 184 (0xb8) 0 (0x00)  CRC: 0xB0E2898C
	145489920,	 // (0x8ac0000) // 8 (0x08) 172 (0xac)  CRC: 0xD454BD80
	-732643968,	// CRC do Jardel: 0xD454BD80
	0,	//	synchronized?, exception table length
//	4973: float32_to_int32(I)I
	437389694,	 // (0x1a12097e) // 26 (0x1a) 18 (0x12) 9 (0x09) 126 (0x7e)  CRC: 0x29CEC7D4
	906238480,	 // (0x36041a10) // 54 (0x36) 4 (0x04) 26 (0x1a) 16 (0x10)  CRC: 0xC5E587D3
	394006784,	 // (0x177c1100) // 23 (0x17) 124 (0x7c) 17 (0x11) 0 (0x00)  CRC: 0x29F81013
	-8504038,	 // (0xff7e3d1a) // 255 (0xff) 126 (0x7e) 61 (0x3d) 26 (0x1a)  CRC: 0x1F93BE64
	270498876,	 // (0x101f7c3c) // 16 (0x10) 31 (0x1f) 124 (0x7c) 60 (0x3c)  CRC: 0xA3BE61CB
	470876318,	 // (0x1c11009e) // 28 (0x1c) 17 (0x11) 0 (0x00) 158 (0x9e)  CRC: 0xFA386B45
	1681792411,	 // (0x643e1d9b) // 100 (0x64) 62 (0x3e) 29 (0x1d) 155 (0x9b)  CRC: 0x80F07E15
	1776657,	 // (0x1b1c11) // 0 (0x00) 27 (0x1b) 28 (0x1c) 17 (0x11)  CRC: 0x885CA489
	16752640,	 // (0xffa000) // 0 (0x00) 255 (0xff) 160 (0xa0) 0 (0x00)  CRC: 0x0838B2DC
	169149593,	 // (0xa150499) // 10 (0x0a) 21 (0x15) 4 (0x04) 153 (0x99)  CRC: 0x3C5A9222
	328620,	 // (0x503ac) // 0 (0x00) 5 (0x05) 3 (0x03) 172 (0xac)  CRC: 0x01FD81CE
	463011846,	 // (0x1b990006) // 27 (0x1b) 153 (0x99) 0 (0x00) 6 (0x06)  CRC: 0x345846DB
	302427154,	 // (0x1206ac12) // 18 (0x12) 6 (0x06) 172 (0xac) 18 (0x12)  CRC: 0xAF83A63B
	179051792,	 // (0xaac1d10) // 10 (0x0a) 172 (0xac) 29 (0x1d) 16 (0x10)  CRC: 0x5FF0998E
	-543162348,	 // (0xdfa00014) // 223 (0xdf) 160 (0xa0) 0 (0x00) 20 (0x14)  CRC: 0xE09919EA
	463077390,	 // (0x1b9a000e) // 27 (0x1b) 154 (0x9a) 0 (0x00) 14 (0x0e)  CRC: 0x27C633D5
	352588297,	 // (0x15041209) // 21 (0x15) 4 (0x04) 18 (0x12) 9 (0x09)  CRC: 0x09CEE1DD
	-1610610940,	 // (0xa0000704) // 160 (0xa0) 0 (0x00) 7 (0x07) 4 (0x04)  CRC: 0x2C1B3C5D
	-1493171197,	 // (0xa7000403) // 167 (0xa7) 0 (0x00) 4 (0x04) 3 (0x03)  CRC: 0x40692F5C
	-1407381281,	 // (0xac1d10df) // 172 (0xac) 29 (0x1d) 16 (0x10) 223 (0xdf)  CRC: 0xF28B0903
	-1577057021,	 // (0xa2000503) // 162 (0xa2) 0 (0x00) 5 (0x05) 3 (0x03)  CRC: 0xFD9A5930
	-1407908846,	 // (0xac150412) // 172 (0xac) 21 (0x15) 4 (0x04) 18 (0x12)  CRC: 0x1D85274F
	192951812,	 // (0xb803604) // 11 (0x0b) 128 (0x80) 54 (0x36) 4 (0x04)  CRC: 0xA85157E8
	352587783,	 // (0x15041007) // 21 (0x15) 4 (0x04) 16 (0x10) 7 (0x07)  CRC: 0x451D439C
	2016805909,	 // (0x78360415) // 120 (0x78) 54 (0x36) 4 (0x04) 21 (0x15)  CRC: 0x04B4CC90
	69039108,	 // (0x41d7404) // 4 (0x04) 29 (0x1d) 116 (0x74) 4 (0x04)  CRC: 0xADE6C119
	1685861894,	 // (0x647c3606) // 100 (0x64) 124 (0x7c) 54 (0x36) 6 (0x06)  CRC: 0x2C17B606
	352591220,	 // (0x15041d74) // 21 (0x15) 4 (0x04) 29 (0x1d) 116 (0x74)  CRC: 0x81470EC1
	269051064,	 // (0x100964b8) // 16 (0x10) 9 (0x09) 100 (0x64) 184 (0xb8)  CRC: 0x239324A2
	266496,	 // (0x41100) // 0 (0x00) 4 (0x04) 17 (0x11) 0 (0x00)  CRC: 0xBD77B557
	-8505852,	 // (0xff7e3604) // 255 (0xff) 126 (0x7e) 54 (0x36) 4 (0x04)  CRC: 0x0521CA56
	463077419,	 // (0x1b9a002b) // 27 (0x1b) 154 (0x9a) 0 (0x00) 43 (0x2b)  CRC: 0xBD7D87BB
	352588032,	 // (0x15041100) // 21 (0x15) 4 (0x04) 17 (0x11) 0 (0x00)  CRC: 0x9B360EBC
	-2136932340,	 // (0x80a1000c) // 128 (0x80) 161 (0xa1) 0 (0x00) 12 (0x0c)  CRC: 0x91AA7835
	352715872,	 // (0x15060460) // 21 (0x15) 6 (0x06) 4 (0x04) 96 (0x60)  CRC: 0xED398B8A
	906405632,	 // (0x3606a700) // 54 (0x36) 6 (0x06) 167 (0xa7) 0 (0x00)  CRC: 0x286FCC7E
	1159467264,	 // (0x451c1100) // 69 (0x45) 28 (0x1c) 17 (0x11) 0 (0x00)  CRC: 0x6543A1B7
	-1767899074,	 // (0x96a0003e) // 150 (0x96) 160 (0xa0) 0 (0x00) 62 (0x3e)  CRC: 0x85232950
	352715902,	 // (0x1506047e) // 21 (0x15) 6 (0x06) 4 (0x04) 126 (0x7e)  CRC: 0x73EC2B19
	-1728039147,	 // (0x99003715) // 153 (0x99) 0 (0x00) 55 (0x37) 21 (0x15)  CRC: 0xC14243B0
	100950070,	 // (0x6046036) // 6 (0x06) 4 (0x04) 96 (0x60) 54 (0x36)  CRC: 0x9F1F2365
	111607854,	 // (0x6a7002e) // 6 (0x06) 167 (0xa7) 0 (0x00) 46 (0x2e)  CRC: 0x177C3E5A
	352588032,	 // (0x15041100) // 21 (0x15) 4 (0x04) 17 (0x11) 0 (0x00)  CRC: 0xB856A5E9
	-2136735732,	 // (0x80a4000c) // 128 (0x80) 164 (0xa4) 0 (0x00) 12 (0x0c)  CRC: 0xF4E9EFAC
	352715872,	 // (0x15060460) // 21 (0x15) 6 (0x06) 4 (0x04) 96 (0x60)  CRC: 0xA0DFA9B5
	906405632,	 // (0x3606a700) // 54 (0x36) 6 (0x06) 167 (0xa7) 0 (0x00)  CRC: 0x69997325
	488378624,	 // (0x1d1c1100) // 29 (0x1d) 28 (0x1c) 17 (0x11) 0 (0x00)  CRC: 0xD2B614CB
	-1767899114,	 // (0x96a00016) // 150 (0x96) 160 (0xa0) 0 (0x00) 22 (0x16)  CRC: 0x7B1A689F
	352584864,	 // (0x150404a0) // 21 (0x15) 4 (0x04) 4 (0x04) 160 (0xa0)  CRC: 0xE6EFE37C
	1053958,	 // (0x101506) // 0 (0x00) 16 (0x10) 21 (0x15) 6 (0x06)  CRC: 0x78E12CEE
	75405568,	 // (0x47e9900) // 4 (0x04) 126 (0x7e) 153 (0x99) 0 (0x00)  CRC: 0x70B3E79A
	152372738,	 // (0x9150602) // 9 (0x09) 21 (0x15) 6 (0x06) 2 (0x02)  CRC: 0xC7134CFC
	1614153243,	 // (0x6036061b) // 96 (0x60) 54 (0x36) 6 (0x06) 27 (0x1b)  CRC: 0x55D13ED1
	-1728051179,	 // (0x99000815) // 153 (0x99) 0 (0x00) 8 (0x08) 21 (0x15)  CRC: 0x141B3ED4
	108279302,	 // (0x6743606) // 6 (0x06) 116 (0x74) 54 (0x36) 6 (0x06)  CRC: 0x0B812EAF
	352758784,	 // (0x1506ac00) // 21 (0x15) 6 (0x06) 172 (0xac)  CRC: 0x92A8EEFB
	-1834422533,	// CRC do Jardel: 0x92A8EEFB
	0,	//	synchronized?, exception table length
//	5031: float32_to_int32_round_to_zero(I)I
	437389694,	 // (0x1a12097e) // 26 (0x1a) 18 (0x12) 9 (0x09) 126 (0x7e)  CRC: 0x29CEC7D4
	906238480,	 // (0x36041a10) // 54 (0x36) 4 (0x04) 26 (0x1a) 16 (0x10)  CRC: 0xC5E587D3
	394006784,	 // (0x177c1100) // 23 (0x17) 124 (0x7c) 17 (0x11) 0 (0x00)  CRC: 0x29F81013
	-8504038,	 // (0xff7e3d1a) // 255 (0xff) 126 (0x7e) 61 (0x3d) 26 (0x1a)  CRC: 0x1F93BE64
	270498876,	 // (0x101f7c3c) // 16 (0x10) 31 (0x1f) 124 (0x7c) 60 (0x3c)  CRC: 0xA3BE61CB
	470876318,	 // (0x1c11009e) // 28 (0x1c) 17 (0x11) 0 (0x00) 158 (0x9e)  CRC: 0xFA386B45
	1681785629,	 // (0x643e031d) // 100 (0x64) 62 (0x3e) 3 (0x03) 29 (0x1d)  CRC: 0xF165608E
	-1560274148,	 // (0xa3001b1c) // 163 (0xa3) 0 (0x00) 27 (0x1b) 28 (0x1c)  CRC: 0x56C73922
	285278112,	 // (0x1100ffa0) // 17 (0x11) 0 (0x00) 255 (0xff) 160 (0xa0)  CRC: 0x336FFA9C
	660740,	 // (0xa1504) // 0 (0x00) 10 (0x0a) 21 (0x15) 4 (0x04)  CRC: 0xBF966844
	-1728051965,	 // (0x99000503) // 153 (0x99) 0 (0x00) 5 (0x05) 3 (0x03)  CRC: 0x064A283B
	-1407477248,	 // (0xac1b9a00) // 172 (0xac) 27 (0x1b) 154 (0x9a) 0 (0x00)  CRC: 0x3E5B5791
	101845676,	 // (0x6120aac) // 6 (0x06) 18 (0x12) 10 (0x0a) 172 (0xac)  CRC: 0x6AB09AF2
	302427164,	 // (0x1206ac1c) // 18 (0x12) 6 (0x06) 172 (0xac) 28 (0x1c)  CRC: 0x80348686
	276734720,	 // (0x107ea300) // 16 (0x10) 126 (0x7e) 163 (0xa3) 0 (0x00)  CRC: 0x14DADDE7
	84126741,	 // (0x503ac15) // 5 (0x05) 3 (0x03) 172 (0xac) 21 (0x15)  CRC: 0xF824C6D1
	68291456,	 // (0x4120b80) // 4 (0x04) 18 (0x12) 11 (0x0b) 128 (0x80)  CRC: 0x953EFEAC
	268990518,	 // (0x10087836) // 16 (0x10) 8 (0x08) 120 (0x78) 54 (0x36)  CRC: 0xC05CB30D
	68486173,	 // (0x415041d) // 4 (0x04) 21 (0x15) 4 (0x04) 29 (0x1d)  CRC: 0xD9C7E2CC
	1954297349,	 // (0x747c3605) // 116 (0x74) 124 (0x7c) 54 (0x36) 5 (0x05)  CRC: 0xDEB11D0A
	463011848,	 // (0x1b990008) // 27 (0x1b) 153 (0x99) 0 (0x00) 8 (0x08)  CRC: 0x04676C56
	352678966,	 // (0x15057436) // 21 (0x15) 5 (0x05) 116 (0x74) 54 (0x36)  CRC: 0xBE75F038
	85263788,	 // (0x51505ac) // 5 (0x05) 21 (0x15) 5 (0x05) 172 (0xac)  CRC: 0x8A11F5EE
	-1978534418,	// CRC do Jardel: 0x8A11F5EE
	0,	//	synchronized?, exception table length
//	5056: addFloat32Sigs(III)I
	437389694,	 // (0x1a12097e) // 26 (0x1a) 18 (0x12) 9 (0x09) 126 (0x7e)  CRC: 0x29CEC7D4
	906369552,	 // (0x36061a10) // 54 (0x36) 6 (0x06) 26 (0x1a) 16 (0x10)  CRC: 0x651719DC
	394006784,	 // (0x177c1100) // 23 (0x17) 124 (0x7c) 17 (0x11) 0 (0x00)  CRC: 0x1FA80AE3
	-8503781,	 // (0xff7e3e1b) // 255 (0xff) 126 (0x7e) 62 (0x3e) 27 (0x1b)  CRC: 0xC4778C23
	302612022,	 // (0x12097e36) // 18 (0x12) 9 (0x09) 126 (0x7e) 54 (0x36)  CRC: 0x1C4D6EB6
	119214103,	 // (0x71b1017) // 7 (0x07) 27 (0x1b) 16 (0x10) 23 (0x17)  CRC: 0xA53508B2
	2081489151,	 // (0x7c1100ff) // 124 (0x7c) 17 (0x11) 0 (0x00) 255 (0xff)  CRC: 0x6AD66220
	2117469213,	 // (0x7e36041d) // 126 (0x7e) 54 (0x36) 4 (0x04) 29 (0x1d)  CRC: 0x04002BA9
	352609334,	 // (0x15046436) // 21 (0x15) 4 (0x04) 100 (0x64) 54 (0x36)  CRC: 0xFEAD5DA3
	152372752,	 // (0x9150610) // 9 (0x09) 21 (0x15) 6 (0x06) 16 (0x10)  CRC: 0x6A5DFA78
	108541446,	 // (0x6783606) // 6 (0x06) 120 (0x78) 54 (0x36) 6 (0x06)  CRC: 0x0133D940
	352784390,	 // (0x15071006) // 21 (0x15) 7 (0x07) 16 (0x10) 6 (0x06)  CRC: 0xF6A9885D
	2016806659,	 // (0x78360703) // 120 (0x78) 54 (0x36) 7 (0x07) 3 (0x03)  CRC: 0x45C31830
	352952832,	 // (0x1509a200) // 21 (0x15) 9 (0x09) 162 (0xa2) 0 (0x00)  CRC: 0x70C3DC04
	807211264,	 // (0x301d1100) // 48 (0x30) 29 (0x1d) 17 (0x11) 0 (0x00)  CRC: 0x9E4D667D
	-6291451,	 // (0xffa00005) // 255 (0xff) 160 (0xa0) 0 (0x00) 5 (0x05)  CRC: 0xF0A9B14B
	447485188,	 // (0x1aac1504) // 26 (0x1a) 172 (0xac) 21 (0x15) 4 (0x04)  CRC: 0xA4E1C9AF
	-1711272939,	 // (0x9a000c15) // 154 (0x9a) 0 (0x00) 12 (0x0c) 21 (0x15)  CRC: 0x960D745A
	151150646,	 // (0x9026036) // 9 (0x09) 2 (0x02) 96 (0x60) 54 (0x36)  CRC: 0xE8F8436E
	161939466,	 // (0x9a7000a) // 9 (0x09) 167 (0xa7) 0 (0x00) 10 (0x0a)  CRC: 0x878EA841
	352784908,	 // (0x1507120c) // 21 (0x15) 7 (0x07) 18 (0x12) 12 (0x0c)  CRC: 0xB33B44E0
	-2143942891,	 // (0x80360715) // 128 (0x80) 54 (0x36) 7 (0x07) 21 (0x15)  CRC: 0xDE3B0865
	118819256,	 // (0x71509b8) // 7 (0x07) 21 (0x15) 9 (0x09) 184 (0xb8)  CRC: 0x7638762B
	275975,	 // (0x43607) // 0 (0x00) 4 (0x04) 54 (0x36) 7 (0x07)  CRC: 0x78BBCC6D
	490079655,	 // (0x1d3605a7) // 29 (0x1d) 54 (0x36) 5 (0x05) 167 (0xa7)  CRC: 0x9C60ABEB
	8525065,	 // (0x821509) // 0 (0x00) 130 (0x82) 21 (0x15) 9 (0x09)  CRC: 0x3174F877
	-1677705451,	 // (0x9c003f15) // 156 (0x9c) 0 (0x00) 63 (0x3f) 21 (0x15)  CRC: 0x7B090D2E
	68223231,	 // (0x41100ff) // 4 (0x04) 17 (0x11) 0 (0x00) 255 (0xff)  CRC: 0xBD9A2079
	-1610608107,	 // (0xa0001215) // 160 (0xa0) 0 (0x00) 18 (0x12) 21 (0x15)  CRC: 0x4487499E
	127467525,	 // (0x7990005) // 7 (0x07) 153 (0x99) 0 (0x00) 5 (0x05)  CRC: 0x306CEAA1
	464264208,	 // (0x1bac1c10) // 27 (0x1b) 172 (0xac) 28 (0x1c) 16 (0x10)  CRC: 0x8C79B7E3
	527962627,	 // (0x1f781203) // 31 (0x1f) 120 (0x78) 18 (0x12) 3 (0x03)  CRC: 0xC0E5947C
	1621892506,	 // (0x60ac1d9a) // 96 (0x60) 172 (0xac) 29 (0x1d) 154 (0x9a)  CRC: 0x1277FDBE
	791817,	 // (0xc1509) // 0 (0x00) 12 (0x0c) 21 (0x15) 9 (0x09)  CRC: 0x80971AA0
	73414153,	 // (0x4603609) // 4 (0x04) 96 (0x60) 54 (0x36) 9 (0x09)  CRC: 0xECDF7CB1
	-1493169643,	 // (0xa7000a15) // 167 (0xa7) 0 (0x00) 10 (0x0a) 21 (0x15)  CRC: 0x268D454C
	101846144,	 // (0x6120c80) // 6 (0x06) 18 (0x12) 12 (0x0c) 128 (0x80)  CRC: 0x1CBADFB3
	906368262,	 // (0x36061506) // 54 (0x36) 6 (0x06) 21 (0x15) 6 (0x06)  CRC: 0x9B6A4B71
	352941240,	 // (0x150974b8) // 21 (0x15) 9 (0x09) 116 (0x74) 184 (0xb8)  CRC: 0xC317F1CD
	275974,	 // (0x43606) // 0 (0x00) 4 (0x04) 54 (0x36) 6 (0x06)  CRC: 0xE5E2A843
	352597509,	 // (0x15043605) // 21 (0x15) 4 (0x04) 54 (0x36) 5 (0x05)  CRC: 0x12DB9965
	-1493155555,	 // (0xa700411d) // 167 (0xa7) 0 (0x00) 65 (0x41) 29 (0x1d)  CRC: 0x8744BA55
	285278112,	 // (0x1100ffa0) // 17 (0x11) 0 (0x00) 255 (0xff) 160 (0xa0)  CRC: 0x8F489C60
	1185030,	 // (0x121506) // 0 (0x00) 18 (0x12) 21 (0x15) 6 (0x06)  CRC: 0xA1084E48
	-1711273963,	 // (0x9a000815) // 154 (0x9a) 0 (0x00) 8 (0x08) 21 (0x15)  CRC: 0xF12FFA75
	127467526,	 // (0x7990006) // 7 (0x07) 153 (0x99) 0 (0x00) 6 (0x06)  CRC: 0xBC69A80C
	302885914,	 // (0x120dac1a) // 18 (0x12) 13 (0x0d) 172 (0xac) 26 (0x1a)  CRC: 0x55AA165A
	-1407346176,	 // (0xac1d9a00) // 172 (0xac) 29 (0x1d) 154 (0x9a) 0 (0x00)  CRC: 0xCB9D9FEE
	287051807,	 // (0x111c101f) // 17 (0x11) 28 (0x1c) 16 (0x10) 31 (0x1f)  CRC: 0x59AD3232
	2014643733,	 // (0x78150615) // 120 (0x78) 21 (0x15) 6 (0x06) 21 (0x15)  CRC: 0x8383E876
	123736070,	 // (0x7601006) // 7 (0x07) 96 (0x60) 16 (0x10) 6 (0x06)  CRC: 0x197A0E4C
	2086710290,	 // (0x7c60ac12) // 124 (0x7c) 96 (0x60) 172 (0xac) 18 (0x12)  CRC: 0xC0F0A048
	236258912,	 // (0xe150660) // 14 (0x0e) 21 (0x15) 6 (0x06) 96 (0x60)  CRC: 0xFF7D0233
	352804918,	 // (0x15076036) // 21 (0x15) 7 (0x07) 96 (0x60) 54 (0x36)  CRC: 0x521F0601
	136132101,	 // (0x81d3605) // 8 (0x08) 29 (0x1d) 54 (0x36) 5 (0x05)  CRC: 0xC4B66C5F
	471139605,	 // (0x1c150515) // 28 (0x1c) 21 (0x15) 5 (0x05) 21 (0x15)  CRC: 0x840CE19C
	146276357,	 // (0x8b80005) // 8 (0x08) 184 (0xb8) 0 (0x00) 5 (0x05)  CRC: 0x4C73491D
	-1407908334,	 // (0xac150612) // 172 (0xac) 21 (0x15) 6 (0x06) 18 (0x12)  CRC: 0x6E882386
	209729030,	 // (0xc803606) // 12 (0x0c) 128 (0x80) 54 (0x36) 6 (0x06)  CRC: 0x948D5DC1
	352720135,	 // (0x15061507) // 21 (0x15) 6 (0x06) 21 (0x15) 7 (0x07)  CRC: 0x65B79BF3
	1610905654,	 // (0x60047836) // 96 (0x60) 4 (0x04) 120 (0x78) 54 (0x36)  CRC: 0xD0C72D91
	135595266,	 // (0x8150502) // 8 (0x08) 21 (0x15) 5 (0x05) 2 (0x02)  CRC: 0x1859B68A
	1614152981,	 // (0x60360515) // 96 (0x60) 54 (0x36) 5 (0x05) 21 (0x15)  CRC: 0x53DB591B
	144441360,	 // (0x89c0010) // 8 (0x08) 156 (0x9c) 0 (0x00) 16 (0x10)  CRC: 0x2F9AB0B2
	352720135,	 // (0x15061507) // 21 (0x15) 6 (0x06) 21 (0x15) 7 (0x07)  CRC: 0x4C5B72D6
	1614153749,	 // (0x60360815) // 96 (0x60) 54 (0x36) 8 (0x08) 21 (0x15)  CRC: 0xC9922E5B
	84172854,	 // (0x5046036) // 5 (0x05) 4 (0x04) 96 (0x60) 54 (0x36)  CRC: 0x7E3323D3
	85726469,	 // (0x51c1505) // 5 (0x05) 28 (0x1c) 21 (0x15) 5 (0x05)  CRC: 0xECDD3CD7
	352892928,	 // (0x1508b800) // 21 (0x15) 8 (0x08) 184 (0xb8) 0 (0x00)  CRC: 0x7259B766
	95158272,	 // (0x5ac0000) // 5 (0x05) 172 (0xac)  CRC: 0x5D5C950D
	1566348557,	// CRC do Jardel: 0x5D5C950D
	0,	//	synchronized?, exception table length
//	5128: subFloat32Sigs(III)I
	437389694,	 // (0x1a12097e) // 26 (0x1a) 18 (0x12) 9 (0x09) 126 (0x7e)  CRC: 0x29CEC7D4
	906369552,	 // (0x36061a10) // 54 (0x36) 6 (0x06) 26 (0x1a) 16 (0x10)  CRC: 0x651719DC
	394006784,	 // (0x177c1100) // 23 (0x17) 124 (0x7c) 17 (0x11) 0 (0x00)  CRC: 0x1FA80AE3
	-8503781,	 // (0xff7e3e1b) // 255 (0xff) 126 (0x7e) 62 (0x3e) 27 (0x1b)  CRC: 0xC4778C23
	302612022,	 // (0x12097e36) // 18 (0x12) 9 (0x09) 126 (0x7e) 54 (0x36)  CRC: 0x1C4D6EB6
	119214103,	 // (0x71b1017) // 7 (0x07) 27 (0x1b) 16 (0x10) 23 (0x17)  CRC: 0xA53508B2
	2081489151,	 // (0x7c1100ff) // 124 (0x7c) 17 (0x11) 0 (0x00) 255 (0xff)  CRC: 0x6AD66220
	2117469213,	 // (0x7e36041d) // 126 (0x7e) 54 (0x36) 4 (0x04) 29 (0x1d)  CRC: 0x04002BA9
	352609334,	 // (0x15046436) // 21 (0x15) 4 (0x04) 100 (0x64) 54 (0x36)  CRC: 0xFEAD5DA3
	152372752,	 // (0x9150610) // 9 (0x09) 21 (0x15) 6 (0x06) 16 (0x10)  CRC: 0x6A5DFA78
	125318662,	 // (0x7783606) // 7 (0x07) 120 (0x78) 54 (0x36) 6 (0x06)  CRC: 0x05F2C4F7
	352784391,	 // (0x15071007) // 21 (0x15) 7 (0x07) 16 (0x10) 7 (0x07)  CRC: 0x63C97567
	2016806659,	 // (0x78360703) // 120 (0x78) 54 (0x36) 7 (0x07) 3 (0x03)  CRC: 0xEC626E9C
	352952832,	 // (0x1509a200) // 21 (0x15) 9 (0x09) 162 (0xa2) 0 (0x00)  CRC: 0x9F916907
	1243418880,	 // (0x4a1d1100) // 74 (0x4a) 29 (0x1d) 17 (0x11) 0 (0x00)  CRC: 0x6917232B
	-6291451,	 // (0xffa00005) // 255 (0xff) 160 (0xa0) 0 (0x00) 5 (0x05)  CRC: 0x549C3730
	447485188,	 // (0x1aac1504) // 26 (0x1a) 172 (0xac) 21 (0x15) 4 (0x04)  CRC: 0x189B09F5
	-1711272939,	 // (0x9a000c15) // 154 (0x9a) 0 (0x00) 12 (0x0c) 21 (0x15)  CRC: 0x611E7B79
	151150646,	 // (0x9026036) // 9 (0x09) 2 (0x02) 96 (0x60) 54 (0x36)  CRC: 0xA976EBF7
	161939466,	 // (0x9a7000a) // 9 (0x09) 167 (0xa7) 0 (0x00) 10 (0x0a)  CRC: 0x43030874
	352784910,	 // (0x1507120e) // 21 (0x15) 7 (0x07) 18 (0x12) 14 (0x0e)  CRC: 0x81D05C12
	-2143942891,	 // (0x80360715) // 128 (0x80) 54 (0x36) 7 (0x07) 21 (0x15)  CRC: 0xC83B36D9
	118819256,	 // (0x71509b8) // 7 (0x07) 21 (0x15) 9 (0x09) 184 (0xb8)  CRC: 0x969D788F
	275975,	 // (0x43607) // 0 (0x00) 4 (0x04) 54 (0x36) 7 (0x07)  CRC: 0xB9EB3609
	352719374,	 // (0x1506120e) // 21 (0x15) 6 (0x06) 18 (0x12) 14 (0x0e)  CRC: 0x5D89B76A
	-2143943147,	 // (0x80360615) // 128 (0x80) 54 (0x36) 6 (0x06) 21 (0x15)  CRC: 0x75D78199
	102041444,	 // (0x6150764) // 6 (0x06) 21 (0x15) 7 (0x07) 100 (0x64)  CRC: 0x6625F925
	906501430,	 // (0x36081d36) // 54 (0x36) 8 (0x08) 29 (0x1d) 54 (0x36)  CRC: 0x6E2EA4CA
	85263618,	 // (0x5150502) // 5 (0x05) 21 (0x15) 5 (0x05) 2 (0x02)  CRC: 0x8CFE9AAF
	1614152988,	 // (0x6036051c) // 96 (0x60) 54 (0x36) 5 (0x05) 28 (0x1c)  CRC: 0xE93A1ABE
	352654600,	 // (0x15051508) // 21 (0x15) 5 (0x05) 21 (0x15) 8 (0x08)  CRC: 0x0618F917
	-1207957332,	 // (0xb80008ac) // 184 (0xb8) 0 (0x00) 8 (0x08) 172 (0xac)  CRC: 0x767C7393
	352951296,	 // (0x15099c00) // 21 (0x15) 9 (0x09) 156 (0x9c) 0 (0x00)  CRC: 0x85EDDC03
	1595212817,	 // (0x5f150411) // 95 (0x5f) 21 (0x15) 4 (0x04) 17 (0x11)  CRC: 0x5572609D
	16752640,	 // (0xffa000) // 0 (0x00) 255 (0xff) 160 (0xa0) 0 (0x00)  CRC: 0x39535B94
	336922521,	 // (0x14150799) // 20 (0x14) 21 (0x15) 7 (0x07) 153 (0x99)  CRC: 0x67185016
	334764,	 // (0x51bac) // 0 (0x00) 5 (0x05) 27 (0x1b) 172 (0xac)  CRC: 0x7CBCF34D
	470057488,	 // (0x1c048210) // 28 (0x1c) 4 (0x04) 130 (0x82) 16 (0x10)  CRC: 0x2ACD043A
	527962627,	 // (0x1f781203) // 31 (0x1f) 120 (0x78) 18 (0x12) 3 (0x03)  CRC: 0x7269B3D8
	1621892506,	 // (0x60ac1d9a) // 96 (0x60) 172 (0xac) 29 (0x1d) 154 (0x9a)  CRC: 0x05C07E02
	791817,	 // (0xc1509) // 0 (0x00) 12 (0x0c) 21 (0x15) 9 (0x09)  CRC: 0xDC9604BC
	73414153,	 // (0x4603609) // 4 (0x04) 96 (0x60) 54 (0x36) 9 (0x09)  CRC: 0x48CD9E3C
	-1493169643,	 // (0xa7000a15) // 167 (0xa7) 0 (0x00) 10 (0x0a) 21 (0x15)  CRC: 0x1316991B
	101846656,	 // (0x6120e80) // 6 (0x06) 18 (0x12) 14 (0x0e) 128 (0x80)  CRC: 0x25399722
	906368262,	 // (0x36061506) // 54 (0x36) 6 (0x06) 21 (0x15) 6 (0x06)  CRC: 0xA7FD9DA0
	352941240,	 // (0x150974b8) // 21 (0x15) 9 (0x09) 116 (0x74) 184 (0xb8)  CRC: 0x8C3544CA
	275974,	 // (0x43606) // 0 (0x00) 4 (0x04) 54 (0x36) 6 (0x06)  CRC: 0xD2395244
	352784910,	 // (0x1507120e) // 21 (0x15) 7 (0x07) 18 (0x12) 14 (0x0e)  CRC: 0x883BF42F
	-2143942891,	 // (0x80360715) // 128 (0x80) 54 (0x36) 7 (0x07) 21 (0x15)  CRC: 0x8DE011DA
	118818404,	 // (0x7150664) // 7 (0x07) 21 (0x15) 6 (0x06) 100 (0x64)  CRC: 0x78521C25
	906499332,	 // (0x36081504) // 54 (0x36) 8 (0x08) 21 (0x15) 4 (0x04)  CRC: 0x2EF60E4E
	906304516,	 // (0x36051c04) // 54 (0x36) 5 (0x05) 28 (0x1c) 4 (0x04)  CRC: 0x3D1AD56A
	-2109926139,	 // (0x823d1505) // 130 (0x82) 61 (0x3d) 21 (0x15) 5 (0x05)  CRC: 0x6559DA94
	39859717,	 // (0x2603605) // 2 (0x02) 96 (0x60) 54 (0x36) 5 (0x05)  CRC: 0xDA559AF5
	471139605,	 // (0x1c150515) // 28 (0x1c) 21 (0x15) 5 (0x05) 21 (0x15)  CRC: 0x2157115F
	146276360,	 // (0x8b80008) // 8 (0x08) 184 (0xb8) 0 (0x00) 8 (0x08)  CRC: 0x3D6A7D5B
	-1407381248,	 // (0xac1d1100) // 172 (0xac) 29 (0x1d) 17 (0x11) 0 (0x00)  CRC: 0xEE8D3A6D
	-6291437,	 // (0xffa00013) // 255 (0xff) 160 (0xa0) 0 (0x00) 19 (0x13)  CRC: 0x43AB2FA7
	352754176,	 // (0x15069a00) // 21 (0x15) 6 (0x06) 154 (0x9a) 0 (0x00)  CRC: 0x5A6DD494
	135595929,	 // (0x8150799) // 8 (0x08) 21 (0x15) 7 (0x07) 153 (0x99)  CRC: 0x560A46C2
	397837,	 // (0x6120d) // 0 (0x00) 6 (0x06) 18 (0x12) 13 (0x0d)  CRC: 0xB99BFC61
	-1408102484,	 // (0xac120fac) // 172 (0xac) 18 (0x12) 15 (0x0f) 172 (0xac)  CRC: 0x4182AAB1
	496631816,	 // (0x1d9a0008) // 29 (0x1d) 154 (0x9a) 0 (0x00) 8 (0x08)  CRC: 0xEFA2E839
	71173174,	 // (0x43e0436) // 4 (0x04) 62 (0x3e) 4 (0x04) 54 (0x36)  CRC: 0xA544C106
	68486933,	 // (0x4150715) // 4 (0x04) 21 (0x15) 7 (0x07) 21 (0x15)  CRC: 0x5064B706
	111280156,	 // (0x6a2001c) // 6 (0x06) 162 (0xa2) 0 (0x00) 28 (0x1c)  CRC: 0x993C3C00
	352720135,	 // (0x15061507) // 21 (0x15) 6 (0x06) 21 (0x15) 7 (0x07)  CRC: 0x1D637444
	1681262621,	 // (0x6436081d) // 100 (0x64) 54 (0x36) 8 (0x08) 29 (0x1d)  CRC: 0x38056432
	906302725,	 // (0x36051505) // 54 (0x36) 5 (0x05) 21 (0x15) 5 (0x05)  CRC: 0xF9FD00F0
	39859717,	 // (0x2603605) // 2 (0x02) 96 (0x60) 54 (0x36) 5 (0x05)  CRC: 0x98197DE9
	471139605,	 // (0x1c150515) // 28 (0x1c) 21 (0x15) 5 (0x05) 21 (0x15)  CRC: 0x9E69E2AB
	146276360,	 // (0x8b80008) // 8 (0x08) 184 (0xb8) 0 (0x00) 8 (0x08)  CRC: 0x54FF5728
	-1407908331,	 // (0xac150615) // 172 (0xac) 21 (0x15) 6 (0x06) 21 (0x15)  CRC: 0x253D9CFC
	128057377,	 // (0x7a20021) // 7 (0x07) 162 (0xa2) 0 (0x00) 33 (0x21)  CRC: 0xAF8A099F
	352785670,	 // (0x15071506) // 21 (0x15) 7 (0x07) 21 (0x15) 6 (0x06)  CRC: 0xBA821BC0
	1681262613,	 // (0x64360815) // 100 (0x64) 54 (0x36) 8 (0x08) 21 (0x15)  CRC: 0x97B8D6E8
	70649116,	 // (0x436051c) // 4 (0x04) 54 (0x36) 5 (0x05) 28 (0x1c)  CRC: 0xEE014925
	75644181,	 // (0x4823d15) // 4 (0x04) 130 (0x82) 61 (0x3d) 21 (0x15)  CRC: 0x7B2661C8
	84041782,	 // (0x5026036) // 5 (0x05) 2 (0x02) 96 (0x60) 54 (0x36)  CRC: 0x85D007CC
	85726469,	 // (0x51c1505) // 5 (0x05) 28 (0x1c) 21 (0x15) 5 (0x05)  CRC: 0xAD90A6C2
	352892928,	 // (0x1508b800) // 21 (0x15) 8 (0x08) 184 (0xb8) 0 (0x00)  CRC: 0xE2C0C82A
	145490860,	 // (0x8ac03ac) // 8 (0x08) 172 (0xac) 3 (0x03) 172 (0xac)  CRC: 0xC5620D07
	-983429881,	// CRC do Jardel: 0xC5620D07
	0,	//	synchronized?, exception table length
//	5212: float32_add(II)I
	437264252,	 // (0x1a101f7c) // 26 (0x1a) 16 (0x10) 31 (0x1f) 124 (0x7c)  CRC: 0x2C7F5260
	1025183775,	 // (0x3d1b101f) // 61 (0x3d) 27 (0x1b) 16 (0x10) 31 (0x1f)  CRC: 0x6B3788A7
	2084445213,	 // (0x7c3e1c1d) // 124 (0x7c) 62 (0x3e) 28 (0x1c) 29 (0x1d)  CRC: 0x56C0D409
	-1610610150,	 // (0xa0000a1a) // 160 (0xa0) 0 (0x00) 10 (0x0a) 26 (0x1a)  CRC: 0x865CB343
	454866944,	 // (0x1b1cb800) // 27 (0x1b) 28 (0x1c) 184 (0xb8) 0 (0x00)  CRC: 0x81348C54
	279714331,	 // (0x10ac1a1b) // 16 (0x10) 172 (0xac) 26 (0x1a) 27 (0x1b)  CRC: 0x22208F2A
	481820689,	 // (0x1cb80011) // 28 (0x1c) 184 (0xb8) 0 (0x00) 17 (0x11)  CRC: 0x8F16BAB1
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0xBFCF8D4D
	-1076916915,	// CRC do Jardel: 0xBFCF8D4D
	0,	//	synchronized?, exception table length
//	5222: float32_sub(II)I
	437264252,	 // (0x1a101f7c) // 26 (0x1a) 16 (0x10) 31 (0x1f) 124 (0x7c)  CRC: 0x2C7F5260
	1025183775,	 // (0x3d1b101f) // 61 (0x3d) 27 (0x1b) 16 (0x10) 31 (0x1f)  CRC: 0x6B3788A7
	2084445213,	 // (0x7c3e1c1d) // 124 (0x7c) 62 (0x3e) 28 (0x1c) 29 (0x1d)  CRC: 0x56C0D409
	-1610610150,	 // (0xa0000a1a) // 160 (0xa0) 0 (0x00) 10 (0x0a) 26 (0x1a)  CRC: 0x865CB343
	454866944,	 // (0x1b1cb800) // 27 (0x1b) 28 (0x1c) 184 (0xb8) 0 (0x00)  CRC: 0x81348C54
	296491547,	 // (0x11ac1a1b) // 17 (0x11) 172 (0xac) 26 (0x1a) 27 (0x1b)  CRC: 0x26E1929D
	481820688,	 // (0x1cb80010) // 28 (0x1c) 184 (0xb8) 0 (0x00) 16 (0x10)  CRC: 0x1A76478B
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x166EFBE1
	376372193,	// CRC do Jardel: 0x166EFBE1
	0,	//	synchronized?, exception table length
//	5232: float32_mul(II)I
	437389694,	 // (0x1a12097e) // 26 (0x1a) 18 (0x12) 9 (0x09) 126 (0x7e)  CRC: 0x29CEC7D4
	906500624,	 // (0x36081a10) // 54 (0x36) 8 (0x08) 26 (0x1a) 16 (0x10)  CRC: 0x0A89E528
	394006784,	 // (0x177c1100) // 23 (0x17) 124 (0x7c) 17 (0x11) 0 (0x00)  CRC: 0x9C184E33
	-8505851,	 // (0xff7e3605) // 255 (0xff) 126 (0x7e) 54 (0x36) 5 (0x05)  CRC: 0x1D02AB01
	437264252,	 // (0x1a101f7c) // 26 (0x1a) 16 (0x10) 31 (0x1f) 124 (0x7c)  CRC: 0xDFE587FD
	1025184265,	 // (0x3d1b1209) // 61 (0x3d) 27 (0x1b) 18 (0x12) 9 (0x09)  CRC: 0xF9DC289B
	2117470491,	 // (0x7e36091b) // 126 (0x7e) 54 (0x36) 9 (0x09) 27 (0x1b)  CRC: 0x0DE85D3E
	269974545,	 // (0x10177c11) // 16 (0x10) 23 (0x17) 124 (0x7c) 17 (0x11)  CRC: 0x4BE467BB
	16743990,	 // (0xff7e36) // 0 (0x00) 255 (0xff) 126 (0x7e) 54 (0x36)  CRC: 0xE7D445BF
	102436895,	 // (0x61b101f) // 6 (0x06) 27 (0x1b) 16 (0x10) 31 (0x1f)  CRC: 0xAF83F896
	2084445213,	 // (0x7c3e1c1d) // 124 (0x7c) 62 (0x3e) 28 (0x1c) 29 (0x1d)  CRC: 0x312C2D16
	-2110389227,	 // (0x82360415) // 130 (0x82) 54 (0x36) 4 (0x04) 21 (0x15)  CRC: 0x7D2734FC
	85000447,	 // (0x51100ff) // 5 (0x05) 17 (0x11) 0 (0x00) 255 (0xff)  CRC: 0x380D19E4
	-1610601195,	 // (0xa0002d15) // 160 (0xa0) 0 (0x00) 45 (0x2d) 21 (0x15)  CRC: 0xE70C879F
	144244741,	 // (0x8990005) // 8 (0x08) 153 (0x99) 0 (0x00) 5 (0x05)  CRC: 0x6C341938
	447485190,	 // (0x1aac1506) // 26 (0x1a) 172 (0xac) 21 (0x15) 6 (0x06)  CRC: 0xF0254246
	285278112,	 // (0x1100ffa0) // 17 (0x11) 0 (0x00) 255 (0xff) 160 (0xa0)  CRC: 0x2BE023B1
	660745,	 // (0xa1509) // 0 (0x00) 10 (0x0a) 21 (0x15) 9 (0x09)  CRC: 0x2DA66E02
	-1728051941,	 // (0x9900051b) // 153 (0x99) 0 (0x00) 5 (0x05) 27 (0x1b)  CRC: 0x08157F06
	-1407908331,	 // (0xac150615) // 172 (0xac) 21 (0x15) 6 (0x06) 21 (0x15)  CRC: 0x247F590D
	159422976,	 // (0x9809a00) // 9 (0x09) 128 (0x80) 154 (0x9a) 0 (0x00)  CRC: 0xA9003D5A
	101846956,	 // (0x6120fac) // 6 (0x06) 18 (0x12) 15 (0x0f) 172 (0xac)  CRC: 0x7BE9CE72
	352587807,	 // (0x1504101f) // 21 (0x15) 4 (0x04) 16 (0x10) 31 (0x1f)  CRC: 0xAF6297D5
	2014446464,	 // (0x78120380) // 120 (0x78) 18 (0x12) 3 (0x03) 128 (0x80)  CRC: 0x9634D507
	-1407908335,	 // (0xac150611) // 172 (0xac) 21 (0x15) 6 (0x06) 17 (0x11)  CRC: 0x86E4EB53
	16752640,	 // (0xffa000) // 0 (0x00) 255 (0xff) 160 (0xa0) 0 (0x00)  CRC: 0x37E1FD79
	504695193,	 // (0x1e150999) // 30 (0x1e) 21 (0x15) 9 (0x09) 153 (0x99)  CRC: 0x01644690
	334764,	 // (0x51bac) // 0 (0x00) 5 (0x05) 27 (0x1b) 172 (0xac)  CRC: 0x58B767A8
	352654600,	 // (0x15051508) // 21 (0x15) 5 (0x05) 21 (0x15) 8 (0x08)  CRC: 0xBF11F850
	-2137391098,	 // (0x809a0006) // 128 (0x80) 154 (0x9a) 0 (0x00) 6 (0x06)  CRC: 0x5242BF89
	303016981,	 // (0x120fac15) // 18 (0x12) 15 (0x0f) 172 (0xac) 21 (0x15)  CRC: 0xDAC796E6
	68165496,	 // (0x4101f78) // 4 (0x04) 16 (0x10) 31 (0x1f) 120 (0x78)  CRC: 0xD256E714
	302219436,	 // (0x120380ac) // 18 (0x12) 3 (0x03) 128 (0x80) 172 (0xac)  CRC: 0xCA04A81A
	352688640,	 // (0x15059a00) // 21 (0x15) 5 (0x05) 154 (0x9a) 0 (0x00)  CRC: 0x4EDAE965
	622135450,	 // (0x2515089a) // 37 (0x25) 21 (0x15) 8 (0x08) 154 (0x9a)  CRC: 0x708034BD
	595204,	 // (0x91504) // 0 (0x00) 9 (0x09) 21 (0x15) 4 (0x04)  CRC: 0xE60927D6
	270497964,	 // (0x101f78ac) // 16 (0x10) 31 (0x1f) 120 (0x78) 172 (0xac)  CRC: 0x3839C61D
	352892928,	 // (0x1508b800) // 21 (0x15) 8 (0x08) 184 (0xb8) 0 (0x00)  CRC: 0x83C5B9C7
	303040612,	 // (0x12100864) // 18 (0x12) 16 (0x10) 8 (0x08) 100 (0x64)  CRC: 0xEFBC4183
	906761480,	 // (0x360c1508) // 54 (0x36) 12 (0x0c) 21 (0x15) 8 (0x08)  CRC: 0xAF082773
	353138742,	 // (0x150c7836) // 21 (0x15) 12 (0x0c) 120 (0x78) 54 (0x36)  CRC: 0x4AE2CAD1
	134485260,	 // (0x804150c) // 8 (0x08) 4 (0x04) 21 (0x15) 12 (0x0c)  CRC: 0x37137A0A
	1681261845,	 // (0x64360515) // 100 (0x64) 54 (0x36) 5 (0x05) 21 (0x15)  CRC: 0x51AB2560
	110755877,	 // (0x69a0025) // 6 (0x06) 154 (0x9a) 0 (0x00) 37 (0x25)  CRC: 0xD22E3673
	352950784,	 // (0x15099a00) // 21 (0x15) 9 (0x09) 154 (0x9a) 0 (0x00)  CRC: 0xCA061A06
	152372240,	 // (0x9150410) // 9 (0x09) 21 (0x15) 4 (0x04) 16 (0x10)  CRC: 0x4368E9A3
	528002069,	 // (0x1f78ac15) // 31 (0x1f) 120 (0x78) 172 (0xac) 21 (0x15)  CRC: 0xB3019D3B
	163053586,	 // (0x9b80012) // 9 (0x09) 184 (0xb8) 0 (0x00) 18 (0x12)  CRC: 0xFB94CD71
	268985398,	 // (0x10086436) // 16 (0x10) 8 (0x08) 100 (0x64) 54 (0x36)  CRC: 0x6EF656A1
	202705173,	 // (0xc150915) // 12 (0x0c) 21 (0x15) 9 (0x09) 21 (0x15)  CRC: 0x11102B5C
	209204745,	 // (0xc783609) // 12 (0x0c) 120 (0x78) 54 (0x36) 9 (0x09)  CRC: 0x6A53CDD0
	68488292,	 // (0x4150c64) // 4 (0x04) 21 (0x15) 12 (0x0c) 100 (0x64)  CRC: 0x0226676B
	906368261,	 // (0x36061505) // 54 (0x36) 6 (0x06) 21 (0x15) 5 (0x05)  CRC: 0xC2D2E510
	352739344,	 // (0x15066010) // 21 (0x15) 6 (0x06) 96 (0x60) 16 (0x10)  CRC: 0x73C45C66
	2137273863,	 // (0x7f643607) // 127 (0x7f) 100 (0x64) 54 (0x36) 7 (0x07)  CRC: 0xDB2A11C4
	352850443,	 // (0x1508120b) // 21 (0x15) 8 (0x08) 18 (0x12) 11 (0x0b)  CRC: 0xF5E1F380
	-2143942635,	 // (0x80360815) // 128 (0x80) 54 (0x36) 8 (0x08) 21 (0x15)  CRC: 0x679E8507
	152177536,	 // (0x9120b80) // 9 (0x09) 18 (0x12) 11 (0x0b) 128 (0x80)  CRC: 0xEF641D42
	906564872,	 // (0x36091508) // 54 (0x36) 9 (0x09) 21 (0x15) 8 (0x08)  CRC: 0x76371184
	-2062547079,	 // (0x85100779) // 133 (0x85) 16 (0x10) 7 (0x07) 121 (0x79)  CRC: 0x152FE29A
	352945424,	 // (0x15098510) // 21 (0x15) 9 (0x09) 133 (0x85) 16 (0x10)  CRC: 0x3026FBC4
	142174519,	 // (0x8796937) // 8 (0x08) 121 (0x79) 105 (0x69) 55 (0x37)  CRC: 0x2B9FB16C
	168367626,	 // (0xa09160a) // 10 (0x0a) 9 (0x09) 22 (0x16) 10 (0x0a)  CRC: 0x5BDAEAA3
	75076765,	 // (0x479949d) // 4 (0x04) 121 (0x79) 148 (0x94) 157 (0x9d)  CRC: 0xC4797D2D
	988682,	 // (0xf160a) // 0 (0x00) 15 (0x0f) 22 (0x16) 10 (0x0a)  CRC: 0x70A8AC56
	75052810,	 // (0x479370a) // 4 (0x04) 121 (0x79) 55 (0x37) 10 (0x0a)  CRC: 0x46BFBC52
	352780896,	 // (0x15070260) // 21 (0x15) 7 (0x07) 2 (0x02) 96 (0x60)  CRC: 0x88AC0AC0
	906434058,	 // (0x3607160a) // 54 (0x36) 7 (0x07) 22 (0x16) 10 (0x0a)  CRC: 0x530A207E
	-2003238893,	 // (0x88990013) // 136 (0x88) 153 (0x99) 0 (0x00) 19 (0x13)  CRC: 0xA576EAFB
	369758240,	 // (0x160a1020) // 22 (0x16) 10 (0x0a) 16 (0x10) 32 (0x20)  CRC: 0x589E93C5
	2100759062,	 // (0x7d370a16) // 125 (0x7d) 55 (0x37) 10 (0x0a) 22 (0x16)  CRC: 0x6295FABE
	168460599,	 // (0xa0a8137) // 10 (0x0a) 10 (0x0a) 129 (0x81) 55 (0x37)  CRC: 0xC175F36B
	178716682,	 // (0xaa7000a) // 10 (0x0a) 167 (0xa7) 0 (0x00) 10 (0x0a)  CRC: 0x0431ED31
	369758240,	 // (0x160a1020) // 22 (0x16) 10 (0x0a) 16 (0x10) 32 (0x20)  CRC: 0xFE132CFE
	2100759061,	 // (0x7d370a15) // 125 (0x7d) 55 (0x37) 10 (0x0a) 21 (0x15)  CRC: 0x9AAB80B7
	68486934,	 // (0x4150716) // 4 (0x04) 21 (0x15) 7 (0x07) 22 (0x16)  CRC: 0x4880E40F
	176732160,	 // (0xa88b800) // 10 (0x0a) 136 (0x88) 184 (0xb8) 0 (0x00)  CRC: 0xB9EF670D
	95158272,	 // (0x5ac0000) // 5 (0x05) 172 (0xac)  CRC: 0x295BC012
	693878802,	// CRC do Jardel: 0x295BC012
	0,	//	synchronized?, exception table length
//	5312: float32_div(II)I
	437389694,	 // (0x1a12097e) // 26 (0x1a) 18 (0x12) 9 (0x09) 126 (0x7e)  CRC: 0x29CEC7D4
	906500624,	 // (0x36081a10) // 54 (0x36) 8 (0x08) 26 (0x1a) 16 (0x10)  CRC: 0x0A89E528
	394006784,	 // (0x177c1100) // 23 (0x17) 124 (0x7c) 17 (0x11) 0 (0x00)  CRC: 0x9C184E33
	-8505851,	 // (0xff7e3605) // 255 (0xff) 126 (0x7e) 54 (0x36) 5 (0x05)  CRC: 0x1D02AB01
	437264252,	 // (0x1a101f7c) // 26 (0x1a) 16 (0x10) 31 (0x1f) 124 (0x7c)  CRC: 0xDFE587FD
	1025184265,	 // (0x3d1b1209) // 61 (0x3d) 27 (0x1b) 18 (0x12) 9 (0x09)  CRC: 0xF9DC289B
	2117470491,	 // (0x7e36091b) // 126 (0x7e) 54 (0x36) 9 (0x09) 27 (0x1b)  CRC: 0x0DE85D3E
	269974545,	 // (0x10177c11) // 16 (0x10) 23 (0x17) 124 (0x7c) 17 (0x11)  CRC: 0x4BE467BB
	16743990,	 // (0xff7e36) // 0 (0x00) 255 (0xff) 126 (0x7e) 54 (0x36)  CRC: 0xE7D445BF
	102436895,	 // (0x61b101f) // 6 (0x06) 27 (0x1b) 16 (0x10) 31 (0x1f)  CRC: 0xAF83F896
	2084445213,	 // (0x7c3e1c1d) // 124 (0x7c) 62 (0x3e) 28 (0x1c) 29 (0x1d)  CRC: 0x312C2D16
	-2110389227,	 // (0x82360415) // 130 (0x82) 54 (0x36) 4 (0x04) 21 (0x15)  CRC: 0x7D2734FC
	85000447,	 // (0x51100ff) // 5 (0x05) 17 (0x11) 0 (0x00) 255 (0xff)  CRC: 0x380D19E4
	-1610603243,	 // (0xa0002515) // 160 (0xa0) 0 (0x00) 37 (0x25) 21 (0x15)  CRC: 0xE9C9E3A7
	144244741,	 // (0x8990005) // 8 (0x08) 153 (0x99) 0 (0x00) 5 (0x05)  CRC: 0x1F0D62DE
	447485190,	 // (0x1aac1506) // 26 (0x1a) 172 (0xac) 21 (0x15) 6 (0x06)  CRC: 0x23062D33
	285278112,	 // (0x1100ffa0) // 17 (0x11) 0 (0x00) 255 (0xff) 160 (0xa0)  CRC: 0xD9196593
	857353,	 // (0xd1509) // 0 (0x00) 13 (0x0d) 21 (0x15) 9 (0x09)  CRC: 0x4AB552B0
	-1728051941,	 // (0x9900051b) // 153 (0x99) 0 (0x00) 5 (0x05) 27 (0x1b)  CRC: 0x7BAC13EE
	-1408102996,	 // (0xac120dac) // 172 (0xac) 18 (0x12) 13 (0x0d) 172 (0xac)  CRC: 0xA5E58BA2
	352587807,	 // (0x1504101f) // 21 (0x15) 4 (0x04) 16 (0x10) 31 (0x1f)  CRC: 0xD8C1FA1C
	2014446464,	 // (0x78120380) // 120 (0x78) 18 (0x12) 3 (0x03) 128 (0x80)  CRC: 0x90A16F59
	-1407908335,	 // (0xac150611) // 172 (0xac) 21 (0x15) 6 (0x06) 17 (0x11)  CRC: 0x6DB0B919
	16752640,	 // (0xffa000) // 0 (0x00) 255 (0xff) 160 (0xa0) 0 (0x00)  CRC: 0xB54AA8F9
	269814169,	 // (0x10150999) // 16 (0x10) 21 (0x15) 9 (0x09) 153 (0x99)  CRC: 0x53DF464B
	334764,	 // (0x51bac) // 0 (0x00) 5 (0x05) 27 (0x1b) 172 (0xac)  CRC: 0x3E1FF8AE
	352587807,	 // (0x1504101f) // 21 (0x15) 4 (0x04) 16 (0x10) 31 (0x1f)  CRC: 0x976BC2EE
	2024543494,	 // (0x78ac1506) // 120 (0x78) 172 (0xac) 21 (0x15) 6 (0x06)  CRC: 0xE6DDACC1
	-1711262955,	 // (0x9a003315) // 154 (0x9a) 0 (0x00) 51 (0x33) 21 (0x15)  CRC: 0x9F9EE5DD
	161087511,	 // (0x99a0017) // 9 (0x09) 154 (0x9a) 0 (0x00) 23 (0x17)  CRC: 0x6A6A60A9
	352654600,	 // (0x15051508) // 21 (0x15) 5 (0x05) 21 (0x15) 8 (0x08)  CRC: 0xA2700885
	-2137391098,	 // (0x809a0006) // 128 (0x80) 154 (0x9a) 0 (0x00) 6 (0x06)  CRC: 0x45A4F856
	302885909,	 // (0x120dac15) // 18 (0x12) 13 (0x0d) 172 (0xac) 21 (0x15)  CRC: 0x6B4526F1
	68165496,	 // (0x4101f78) // 4 (0x04) 16 (0x10) 31 (0x1f) 120 (0x78)  CRC: 0xBAEFCFBA
	302219436,	 // (0x120380ac) // 18 (0x12) 3 (0x03) 128 (0x80) 172 (0xac)  CRC: 0xAA8AB66B
	352958464,	 // (0x1509b800) // 21 (0x15) 9 (0x09) 184 (0xb8) 0 (0x00)  CRC: 0xFF123FC9
	303040612,	 // (0x12100864) // 18 (0x12) 16 (0x10) 8 (0x08) 100 (0x64)  CRC: 0x7F65441A
	906761481,	 // (0x360c1509) // 54 (0x36) 12 (0x0c) 21 (0x15) 9 (0x09)  CRC: 0x3A94E411
	353138742,	 // (0x150c7836) // 21 (0x15) 12 (0x0c) 120 (0x78) 54 (0x36)  CRC: 0x57F547F7
	151262476,	 // (0x904150c) // 9 (0x09) 4 (0x04) 21 (0x15) 12 (0x0c)  CRC: 0x98690BAE
	1681262101,	 // (0x64360615) // 100 (0x64) 54 (0x36) 6 (0x06) 21 (0x15)  CRC: 0xE6E3A975
	93978661,	 // (0x59a0025) // 5 (0x05) 154 (0x9a) 0 (0x00) 37 (0x25)  CRC: 0x162EF70E
	352885248,	 // (0x15089a00) // 21 (0x15) 8 (0x08) 154 (0x9a) 0 (0x00)  CRC: 0xD3B5D4AB
	152372240,	 // (0x9150410) // 9 (0x09) 21 (0x15) 4 (0x04) 16 (0x10)  CRC: 0x35EDB0D9
	528002069,	 // (0x1f78ac15) // 31 (0x1f) 120 (0x78) 172 (0xac) 21 (0x15)  CRC: 0x9394E11B
	146276370,	 // (0x8b80012) // 8 (0x08) 184 (0xb8) 0 (0x00) 18 (0x12)  CRC: 0xC421163E
	268985398,	 // (0x10086436) // 16 (0x10) 8 (0x08) 100 (0x64) 54 (0x36)  CRC: 0x7DE1A095
	202704917,	 // (0xc150815) // 12 (0x0c) 21 (0x15) 8 (0x08) 21 (0x15)  CRC: 0x4EF22AF8
	209204744,	 // (0xc783608) // 12 (0x0c) 120 (0x78) 54 (0x36) 8 (0x08)  CRC: 0xE7BAC650
	68488292,	 // (0x4150c64) // 4 (0x04) 21 (0x15) 12 (0x0c) 100 (0x64)  CRC: 0xC268D2BE
	906302725,	 // (0x36051505) // 54 (0x36) 5 (0x05) 21 (0x15) 5 (0x05)  CRC: 0x98EC0C3B
	352740368,	 // (0x15066410) // 21 (0x15) 6 (0x06) 100 (0x64) 16 (0x10)  CRC: 0x33884918
	2120234503,	 // (0x7e603607) // 126 (0x7e) 96 (0x60) 54 (0x36) 7 (0x07)  CRC: 0x6F068CE0
	352850443,	 // (0x1508120b) // 21 (0x15) 8 (0x08) 18 (0x12) 11 (0x0b)  CRC: 0x04328F9E
	-2143942635,	 // (0x80360815) // 128 (0x80) 54 (0x36) 8 (0x08) 21 (0x15)  CRC: 0x9A225EEB
	152177536,	 // (0x9120b80) // 9 (0x09) 18 (0x12) 11 (0x0b) 128 (0x80)  CRC: 0xC4EDD68F
	906561847,	 // (0x36090937) // 54 (0x36) 9 (0x09) 9 (0x09) 55 (0x37)  CRC: 0x5D9E5B56
	169150597,	 // (0xa150885) // 10 (0x0a) 21 (0x15) 8 (0x08) 133 (0x85)  CRC: 0xEF47D8D8
	270956821,	 // (0x10267915) // 16 (0x10) 38 (0x26) 121 (0x79) 21 (0x15)  CRC: 0xE4553947
	159739191,	 // (0x9856d37) // 9 (0x09) 133 (0x85) 109 (0x6d) 55 (0x37)  CRC: 0xBDD6C906
	169216532,	 // (0xa160a14) // 10 (0x0a) 22 (0x16) 10 (0x0a) 20 (0x14)  CRC: 0xBCC88CCE
	1277705,	 // (0x137f09) // 0 (0x00) 19 (0x13) 127 (0x7f) 9 (0x09)  CRC: 0x9A1F9248
	-1801912301,	 // (0x94990013) // 148 (0x94) 153 (0x99) 0 (0x00) 19 (0x13)  CRC: 0x49111871
	369758216,	 // (0x160a1008) // 22 (0x16) 10 (0x0a) 16 (0x10) 8 (0x08)  CRC: 0x0EE735EB
	2100759062,	 // (0x7d370a16) // 125 (0x7d) 55 (0x37) 10 (0x0a) 22 (0x16)  CRC: 0x3880D589
	168460599,	 // (0xa0a8137) // 10 (0x0a) 10 (0x0a) 129 (0x81) 55 (0x37)  CRC: 0xEEE31E3E
	178716682,	 // (0xaa7000a) // 10 (0x0a) 167 (0xa7) 0 (0x00) 10 (0x0a)  CRC: 0x6FF14CFA
	369758216,	 // (0x160a1008) // 22 (0x16) 10 (0x0a) 16 (0x10) 8 (0x08)  CRC: 0xD3FD181F
	2100759061,	 // (0x7d370a15) // 125 (0x7d) 55 (0x37) 10 (0x0a) 21 (0x15)  CRC: 0x36F04226
	127795225,	 // (0x79e0019) // 7 (0x07) 158 (0x9e) 0 (0x00) 25 (0x19)  CRC: 0x3376FC2B
	369759232,	 // (0x160a1400) // 22 (0x16) 10 (0x0a) 20 (0x14) 0 (0x00)  CRC: 0xC0147C16
	360649728,	 // (0x157f1400) // 21 (0x15) 127 (0x7f) 20 (0x14) 0 (0x00)  CRC: 0x085DD442
	395614720,	 // (0x17949a00) // 23 (0x17) 148 (0x94) 154 (0x9a) 0 (0x00)  CRC: 0x488811FF
	202770954,	 // (0xc160a0a) // 12 (0x0c) 22 (0x16) 10 (0x0a) 10 (0x0a)  CRC: 0x31DA07A8
	-2127099225,	 // (0x81370aa7) // 129 (0x81) 55 (0x37) 10 (0x0a) 167 (0xa7)  CRC: 0x9CF23588
	5248522,	 // (0x50160a) // 0 (0x00) 80 (0x50) 22 (0x16) 10 (0x0a)  CRC: 0x8ECB8397
	335550847,	 // (0x1400197f) // 20 (0x14) 0 (0x00) 25 (0x19) 127 (0x7f)  CRC: 0xA60BEEEF
	335551380,	 // (0x14001b94) // 20 (0x14) 0 (0x00) 27 (0x1b) 148 (0x94)  CRC: 0x9269C395
	-1711272938,	 // (0x9a000c16) // 154 (0x9a) 0 (0x00) 12 (0x0c) 22 (0x16)  CRC: 0x18F98819
	168460599,	 // (0xa0a8137) // 10 (0x0a) 10 (0x0a) 129 (0x81) 55 (0x37)  CRC: 0x32DC86C6
	178716730,	 // (0xaa7003a) // 10 (0x0a) 167 (0xa7) 0 (0x00) 58 (0x3a)  CRC: 0xED861819
	352780960,	 // (0x150702a0) // 21 (0x15) 7 (0x07) 2 (0x02) 160 (0xa0)  CRC: 0xFB8F122E
	1644042,	 // (0x19160a) // 0 (0x00) 25 (0x19) 22 (0x16) 10 (0x0a)  CRC: 0x14AA1589
	335549311,	 // (0x1400137f) // 20 (0x14) 0 (0x00) 19 (0x13) 127 (0x7f)  CRC: 0xF40FE944
	335551892,	 // (0x14001d94) // 20 (0x14) 0 (0x00) 29 (0x1d) 148 (0x94)  CRC: 0xE66EECA1
	-1711272938,	 // (0x9a000c16) // 154 (0x9a) 0 (0x00) 12 (0x0c) 22 (0x16)  CRC: 0xF7FB68CC
	168460599,	 // (0xa0a8137) // 10 (0x0a) 10 (0x0a) 129 (0x81) 55 (0x37)  CRC: 0xAC2EF060
	178716702,	 // (0xaa7001e) // 10 (0x0a) 167 (0xa7) 0 (0x00) 30 (0x1e)  CRC: 0xD3F5F838
	352780962,	 // (0x150702a2) // 21 (0x15) 7 (0x07) 2 (0x02) 162 (0xa2)  CRC: 0x4E3B080F
	1578248,	 // (0x181508) // 0 (0x00) 24 (0x18) 21 (0x15) 8 (0x08)  CRC: 0x08E1CDED
	-2062539143,	 // (0x85102679) // 133 (0x85) 16 (0x10) 38 (0x26) 121 (0x79)  CRC: 0xCBB6E3AA
	352945521,	 // (0x15098571) // 21 (0x15) 9 (0x09) 133 (0x85) 113 (0x71)  CRC: 0x96BF24E9
	160733440,	 // (0x9949900) // 9 (0x09) 148 (0x94) 153 (0x99) 0 (0x00)  CRC: 0xD90C5C44
	152439306,	 // (0x9160a0a) // 9 (0x09) 22 (0x16) 10 (0x0a) 10 (0x0a)  CRC: 0x8AF29E22
	-2127099371,	 // (0x81370a15) // 129 (0x81) 55 (0x37) 10 (0x0a) 21 (0x15)  CRC: 0x00AF34D0
	68486421,	 // (0x4150515) // 4 (0x04) 21 (0x15) 5 (0x05) 21 (0x15)  CRC: 0x7D9EDF88
	107221118,	 // (0x664107e) // 6 (0x06) 100 (0x64) 16 (0x10) 126 (0x7e)  CRC: 0x9968570C
	1612057224,	 // (0x60160a88) // 96 (0x60) 22 (0x16) 10 (0x0a) 136 (0x88)  CRC: 0x6F00AF59
	-1207957332,	 // (0xb80008ac) // 184 (0xb8) 0 (0x00) 8 (0x08) 172 (0xac)  CRC: 0xC7879346
	-947416250,	// CRC do Jardel: 0xC7879346
	0,	//	synchronized?, exception table length
//	5413: float32_rem(II)I
	437389694,	 // (0x1a12097e) // 26 (0x1a) 18 (0x12) 9 (0x09) 126 (0x7e)  CRC: 0x29CEC7D4
	906500624,	 // (0x36081a10) // 54 (0x36) 8 (0x08) 26 (0x1a) 16 (0x10)  CRC: 0x0A89E528
	394006784,	 // (0x177c1100) // 23 (0x17) 124 (0x7c) 17 (0x11) 0 (0x00)  CRC: 0x9C184E33
	-8505851,	 // (0xff7e3605) // 255 (0xff) 126 (0x7e) 54 (0x36) 5 (0x05)  CRC: 0x1D02AB01
	437264252,	 // (0x1a101f7c) // 26 (0x1a) 16 (0x10) 31 (0x1f) 124 (0x7c)  CRC: 0xDFE587FD
	1025184265,	 // (0x3d1b1209) // 61 (0x3d) 27 (0x1b) 18 (0x12) 9 (0x09)  CRC: 0xF9DC289B
	2117470491,	 // (0x7e36091b) // 126 (0x7e) 54 (0x36) 9 (0x09) 27 (0x1b)  CRC: 0x0DE85D3E
	269974545,	 // (0x10177c11) // 16 (0x10) 23 (0x17) 124 (0x7c) 17 (0x11)  CRC: 0x4BE467BB
	16743990,	 // (0xff7e36) // 0 (0x00) 255 (0xff) 126 (0x7e) 54 (0x36)  CRC: 0xE7D445BF
	102436895,	 // (0x61b101f) // 6 (0x06) 27 (0x1b) 16 (0x10) 31 (0x1f)  CRC: 0xAF83F896
	2084443397,	 // (0x7c3e1505) // 124 (0x7c) 62 (0x3e) 21 (0x15) 5 (0x05)  CRC: 0x30CF5000
	285278112,	 // (0x1100ffa0) // 17 (0x11) 0 (0x00) 255 (0xff) 160 (0xa0)  CRC: 0x6EAA79B6
	397837,	 // (0x6120d) // 0 (0x00) 6 (0x06) 18 (0x12) 13 (0x0d)  CRC: 0xF40A277F
	-1407908335,	 // (0xac150611) // 172 (0xac) 21 (0x15) 6 (0x06) 17 (0x11)  CRC: 0xB8FBB525
	16752640,	 // (0xffa000) // 0 (0x00) 255 (0xff) 160 (0xa0) 0 (0x00)  CRC: 0xC1E6DADE
	202705305,	 // (0xc150999) // 12 (0x0c) 21 (0x15) 9 (0x09) 153 (0x99)  CRC: 0x131F0D8A
	334764,	 // (0x51bac) // 0 (0x00) 5 (0x05) 27 (0x1b) 172 (0xac)  CRC: 0x95DFF758
	447485190,	 // (0x1aac1506) // 26 (0x1a) 172 (0xac) 21 (0x15) 6 (0x06)  CRC: 0x323C5D61
	-1711267307,	 // (0x9a002215) // 154 (0x9a) 0 (0x00) 34 (0x22) 21 (0x15)  CRC: 0x0F669DD0
	161087494,	 // (0x99a0006) // 9 (0x09) 154 (0x9a) 0 (0x00) 6 (0x06)  CRC: 0x68F79D13
	302885909,	 // (0x120dac15) // 18 (0x12) 13 (0x0d) 172 (0xac) 21 (0x15)  CRC: 0x648D9382
	163053586,	 // (0x9b80012) // 9 (0x09) 184 (0xb8) 0 (0x00) 18 (0x12)  CRC: 0x726FA7D0
	268985398,	 // (0x10086436) // 16 (0x10) 8 (0x08) 100 (0x64) 54 (0x36)  CRC: 0xE3680EEE
	202705173,	 // (0xc150915) // 12 (0x0c) 21 (0x15) 9 (0x09) 21 (0x15)  CRC: 0xC2D825E4
	209204745,	 // (0xc783609) // 12 (0x0c) 120 (0x78) 54 (0x36) 9 (0x09)  CRC: 0xEAD5651F
	68488292,	 // (0x4150c64) // 4 (0x04) 21 (0x15) 12 (0x0c) 100 (0x64)  CRC: 0x01E7722C
	906368261,	 // (0x36061505) // 54 (0x36) 6 (0x06) 21 (0x15) 5 (0x05)  CRC: 0x94ADC2AD
	-1711267563,	 // (0x9a002115) // 154 (0x9a) 0 (0x00) 33 (0x21) 21 (0x15)  CRC: 0x36372540
	144310277,	 // (0x89a0005) // 8 (0x08) 154 (0x9a) 0 (0x00) 5 (0x05)  CRC: 0x43691373
	447485192,	 // (0x1aac1508) // 26 (0x1a) 172 (0xac) 21 (0x15) 8 (0x08)  CRC: 0x90086B58
	-1207954928,	 // (0xb8001210) // 184 (0xb8) 0 (0x00) 18 (0x12) 16 (0x10)  CRC: 0xEAF7A8C9
	140785164,	 // (0x864360c) // 8 (0x08) 100 (0x64) 54 (0x36) 12 (0x0c)  CRC: 0x93BB1AA3
	352851212,	 // (0x1508150c) // 21 (0x15) 8 (0x08) 21 (0x15) 12 (0x0c)  CRC: 0x7ED4EF45
	2016806916,	 // (0x78360804) // 120 (0x78) 54 (0x36) 8 (0x08) 4 (0x04)  CRC: 0x697B71CA
	353133622,	 // (0x150c6436) // 21 (0x15) 12 (0x0c) 100 (0x64) 54 (0x36)  CRC: 0x903EA440
	85263637,	 // (0x5150515) // 5 (0x05) 21 (0x15) 5 (0x05) 21 (0x15)  CRC: 0x6F698DE3
	107230731,	 // (0x664360b) // 6 (0x06) 100 (0x64) 54 (0x36) 11 (0x0b)  CRC: 0x4E341DD2
	352850443,	 // (0x1508120b) // 21 (0x15) 8 (0x08) 18 (0x12) 11 (0x0b)  CRC: 0x8AEC86EF
	-2143942635,	 // (0x80360815) // 128 (0x80) 54 (0x36) 8 (0x08) 21 (0x15)  CRC: 0x340438E4
	152177536,	 // (0x9120b80) // 9 (0x09) 18 (0x12) 11 (0x0b) 128 (0x80)  CRC: 0x325D7236
	906564875,	 // (0x3609150b) // 54 (0x36) 9 (0x09) 21 (0x15) 11 (0x0b)  CRC: 0xC983F1EF
	-1677716459,	 // (0x9c001415) // 156 (0x9c) 0 (0x00) 20 (0x14) 21 (0x15)  CRC: 0x3DFF7B82
	184721920,	 // (0xb02a200) // 11 (0x0b) 2 (0x02) 162 (0xa2) 0 (0x00)  CRC: 0x4571E5EF
	85634069,	 // (0x51aac15) // 5 (0x05) 26 (0x1a) 172 (0xac) 21 (0x15)  CRC: 0x0D13B903
	100818998,	 // (0x6026036) // 6 (0x06) 2 (0x02) 96 (0x60) 54 (0x36)  CRC: 0x8BA5CFA8
	111607859,	 // (0x6a70033) // 6 (0x06) 167 (0xa7) 0 (0x00) 51 (0x33)  CRC: 0xB504EC82
	353082880,	 // (0x150b9e00) // 21 (0x15) 11 (0x0b) 158 (0x9e) 0 (0x00)  CRC: 0x08D7A128
	538249237,	 // (0x20150815) // 32 (0x20) 21 (0x15) 8 (0x08) 21 (0x15)  CRC: 0xF30D533A
	161546250,	 // (0x9a1000a) // 9 (0x09) 161 (0xa1) 0 (0x00) 10 (0x0a)  CRC: 0xCD4B72A3
	352851209,	 // (0x15081509) // 21 (0x15) 8 (0x08) 21 (0x15) 9 (0x09)  CRC: 0x96015B3F
	1681262613,	 // (0x64360815) // 100 (0x64) 54 (0x36) 8 (0x08) 21 (0x15)  CRC: 0xE6C0DEE7
	134510646,	 // (0x8047836) // 8 (0x08) 4 (0x04) 120 (0x78) 54 (0x36)  CRC: 0x402A969D
	135596802,	 // (0x8150b02) // 8 (0x08) 21 (0x15) 11 (0x0b) 2 (0x02)  CRC: 0x957B5355
	1614154663,	 // (0x60360ba7) // 96 (0x60) 54 (0x36) 11 (0x0b) 167 (0xa7)  CRC: 0xC47C863F
	-2026232,	 // (0xffe11508) // 255 (0xff) 225 (0xe1) 21 (0x15) 8 (0x08)  CRC: 0xBB69B451
	352952576,	 // (0x1509a100) // 21 (0x15) 9 (0x09) 161 (0xa1) 0 (0x00)  CRC: 0x3EB7AA72
	169150485,	 // (0xa150815) // 10 (0x0a) 21 (0x15) 8 (0x08) 21 (0x15)  CRC: 0x7B36ECF2
	157562376,	 // (0x9643608) // 9 (0x09) 100 (0x64) 54 (0x36) 8 (0x08)  CRC: 0x06AEE4CB
	471139861,	 // (0x1c150615) // 28 (0x1c) 21 (0x15) 6 (0x06) 21 (0x15)  CRC: 0x6018EB44
	135267960,	 // (0x8100678) // 8 (0x08) 16 (0x10) 6 (0x06) 120 (0x78)  CRC: 0x13731C80
	-1207957332,	 // (0xb80008ac) // 184 (0xb8) 0 (0x00) 8 (0x08) 172 (0xac)  CRC: 0x2F6CA10F
	795648271,	// CRC do Jardel: 0x2F6CA10F
	0,	//	synchronized?, exception table length
//	5476: float32_cmpg(II)I
	437262204,	 // (0x1a10177c) // 26 (0x1a) 16 (0x10) 23 (0x17) 124 (0x7c)  CRC: 0x22BA3658
	285278078,	 // (0x1100ff7e) // 17 (0x11) 0 (0x00) 255 (0xff) 126 (0x7e)  CRC: 0x10E2C449
	285278112,	 // (0x1100ffa0) // 17 (0x11) 0 (0x00) 255 (0xff) 160 (0xa0)  CRC: 0x769F375E
	662034,	 // (0xa1a12) // 0 (0x00) 10 (0x0a) 26 (0x1a) 18 (0x12)  CRC: 0xC47DC2A5
	159291904,	 // (0x97e9a00) // 9 (0x09) 126 (0x7e) 154 (0x9a) 0 (0x00)  CRC: 0x16528E44
	404426775,	 // (0x181b1017) // 24 (0x18) 27 (0x1b) 16 (0x10) 23 (0x17)  CRC: 0xE18C71E4
	2081489151,	 // (0x7c1100ff) // 124 (0x7c) 17 (0x11) 0 (0x00) 255 (0xff)  CRC: 0x4910C89D
	2115043583,	 // (0x7e1100ff) // 126 (0x7e) 17 (0x11) 0 (0x00) 255 (0xff)  CRC: 0x255E570A
	-1610609637,	 // (0xa0000c1b) // 160 (0xa0) 0 (0x00) 12 (0x0c) 27 (0x1b)  CRC: 0xF4952EC7
	302612121,	 // (0x12097e99) // 18 (0x12) 9 (0x09) 126 (0x7e) 153 (0x99)  CRC: 0xDE7E93D3
	328876,	 // (0x504ac) // 0 (0x00) 5 (0x05) 4 (0x04) 172 (0xac)  CRC: 0x46E706A5
	438024192,	 // (0x1a1bb800) // 26 (0x1a) 27 (0x1b) 184 (0xb8) 0 (0x00)  CRC: 0xF9C63663
	531365888,	 // (0x1fac0000) // 31 (0x1f) 172 (0xac)  CRC: 0xBCFE55A0
	-1124182624,	// CRC do Jardel: 0xBCFE55A0
	0,	//	synchronized?, exception table length
//	5491: float32_cmpl(II)I
	437262204,	 // (0x1a10177c) // 26 (0x1a) 16 (0x10) 23 (0x17) 124 (0x7c)  CRC: 0x22BA3658
	285278078,	 // (0x1100ff7e) // 17 (0x11) 0 (0x00) 255 (0xff) 126 (0x7e)  CRC: 0x10E2C449
	285278112,	 // (0x1100ffa0) // 17 (0x11) 0 (0x00) 255 (0xff) 160 (0xa0)  CRC: 0x769F375E
	662034,	 // (0xa1a12) // 0 (0x00) 10 (0x0a) 26 (0x1a) 18 (0x12)  CRC: 0xC47DC2A5
	159291904,	 // (0x97e9a00) // 9 (0x09) 126 (0x7e) 154 (0x9a) 0 (0x00)  CRC: 0x16528E44
	404426775,	 // (0x181b1017) // 24 (0x18) 27 (0x1b) 16 (0x10) 23 (0x17)  CRC: 0xE18C71E4
	2081489151,	 // (0x7c1100ff) // 124 (0x7c) 17 (0x11) 0 (0x00) 255 (0xff)  CRC: 0x4910C89D
	2115043583,	 // (0x7e1100ff) // 126 (0x7e) 17 (0x11) 0 (0x00) 255 (0xff)  CRC: 0x255E570A
	-1610609637,	 // (0xa0000c1b) // 160 (0xa0) 0 (0x00) 12 (0x0c) 27 (0x1b)  CRC: 0xF4952EC7
	302612121,	 // (0x12097e99) // 18 (0x12) 9 (0x09) 126 (0x7e) 153 (0x99)  CRC: 0xDE7E93D3
	328364,	 // (0x502ac) // 0 (0x00) 5 (0x05) 2 (0x02) 172 (0xac)  CRC: 0x4234EDB7
	438024192,	 // (0x1a1bb800) // 26 (0x1a) 27 (0x1b) 184 (0xb8) 0 (0x00)  CRC: 0x5EF45BB2
	531365888,	 // (0x1fac0000) // 31 (0x1f) 172 (0xac)  CRC: 0xA0977EAA
	-1600684374,	// CRC do Jardel: 0xA0977EAA
	0,	//	synchronized?, exception table length
//	5506: float32_cmp(II)I
	438018048,	 // (0x1a1ba000) // 26 (0x1a) 27 (0x1b) 160 (0xa0) 0 (0x00)  CRC: 0x5C2A5954
	84126746,	 // (0x503ac1a) // 5 (0x05) 3 (0x03) 172 (0xac) 26 (0x1a)  CRC: 0xFE82C0A9
	461374584,	 // (0x1b800478) // 27 (0x1b) 128 (0x80) 4 (0x04) 120 (0x78)  CRC: 0x7B762B0F
	-1711274749,	 // (0x9a000503) // 154 (0x9a) 0 (0x00) 5 (0x05) 3 (0x03)  CRC: 0x8D019586
	-1407578081,	 // (0xac1a101f) // 172 (0xac) 26 (0x1a) 16 (0x10) 31 (0x1f)  CRC: 0x7918D916
	2084379408,	 // (0x7c3d1b10) // 124 (0x7c) 61 (0x3d) 27 (0x1b) 16 (0x10)  CRC: 0x3976928A
	528236060,	 // (0x1f7c3e1c) // 31 (0x1f) 124 (0x7c) 62 (0x3e) 28 (0x1c)  CRC: 0x8CB0FB48
	496959507,	 // (0x1d9f0013) // 29 (0x1d) 159 (0x9f) 0 (0x00) 19 (0x13)  CRC: 0x35C0D660
	479789069,	 // (0x1c99000d) // 28 (0x1c) 153 (0x99) 0 (0x00) 13 (0x0d)  CRC: 0x571346FF
	438009860,	 // (0x1a1b8004) // 26 (0x1a) 27 (0x1b) 128 (0x80) 4 (0x04)  CRC: 0x2BCB688B
	2023292933,	 // (0x78990005) // 120 (0x78) 153 (0x99) 0 (0x00) 5 (0x05)  CRC: 0xE0E74A3B
	44827820,	 // (0x2ac04ac) // 2 (0x02) 172 (0xac) 4 (0x04) 172 (0xac)  CRC: 0x0749E3B8
	438017792,	 // (0x1a1b9f00) // 26 (0x1a) 27 (0x1b) 159 (0x9f) 0 (0x00)  CRC: 0x1E7B889A
	337386011,	 // (0x141c1a1b) // 20 (0x14) 28 (0x1c) 26 (0x1a) 27 (0x1b)  CRC: 0x6E05E9D3
	-1577056508,	 // (0xa2000704) // 162 (0xa2) 0 (0x00) 7 (0x07) 4 (0x04)  CRC: 0x22F63F55
	-1493171197,	 // (0xa7000403) // 167 (0xa7) 0 (0x00) 4 (0x04) 3 (0x03)  CRC: 0x8498E9E2
	-2103902203,	 // (0x82990005) // 130 (0x82) 153 (0x99) 0 (0x00) 5 (0x05)  CRC: 0x58834F8C
	44827820,	 // (0x2ac04ac) // 2 (0x02) 172 (0xac) 4 (0x04) 172 (0xac)  CRC: 0x3BA013CF
	1000346575,	// CRC do Jardel: 0x3BA013CF
	0,	//	synchronized?, exception table length
//	java.lang.Exception
//	5526: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	5530: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	5534: <init>(Ljava/lang/String;Ljava/lang/Throwable;)V
	707472567,	 // (0x2a2b2cb7) // 42 (0x2a) 43 (0x2b) 44 (0x2c) 183 (0xb7)  CRC: 0xFA82A471
	241920,	 // (0x3b100) // 0 (0x00) 3 (0x03) 177 (0xb1)  CRC: 0x7A9B4B44
	2056997700,	// CRC do Jardel: 0x7A9B4B44
	0,	//	synchronized?, exception table length
//	5538: <init>(Ljava/lang/Throwable;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	78708736,	 // (0x4b10000) // 4 (0x04) 177 (0xb1)  CRC: 0xD46C10C9
	-731115319,	// CRC do Jardel: 0xD46C10C9
	0,	//	synchronized?, exception table length
//	util.DbgSerial
//	5542: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	704886016,	 // (0x2a03b500) // 42 (0x2a) 3 (0x03) 181 (0xb5) 0 (0x00)  CRC: 0xB8167442
	11599872,	 // (0xb10000) // 0 (0x00) 177 (0xb1)  CRC: 0x325BF29F
	844886687,	// CRC do Jardel: 0x325BF29F
	0,	//	synchronized?, exception table length
//	5547: <init>(Z)V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	706458880,	 // (0x2a1bb500) // 42 (0x2a) 27 (0x1b) 181 (0xb5) 0 (0x00)  CRC: 0x220FAC03
	11599872,	 // (0xb10000) // 0 (0x00) 177 (0xb1)  CRC: 0x5D5A5368
	1566200680,	// CRC do Jardel: 0x5D5A5368
	0,	//	synchronized?, exception table length
//	5552: dbgWr(I)V
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1728049648,	 // (0x99000e10) // 153 (0x99) 0 (0x00) 14 (0x0e) 16 (0x10)  CRC: 0x3D28EC76
	-1865350018,	 // (0x90d1047e) // 144 (0x90) 209 (0xd1) 4 (0x04) 126 (0x7e)  CRC: 0x717E0126
	-1711274329,	 // (0x9a0006a7) // 154 (0x9a) 0 (0x00) 6 (0x06) 167 (0xa7)  CRC: 0x44542E99
	-517360,	 // (0xfff81b10) // 255 (0xff) 248 (0xf8) 27 (0x1b) 16 (0x10)  CRC: 0xA779E8DA
	-1848501488,	 // (0x91d21b10) // 145 (0x91) 210 (0xd2) 27 (0x1b) 16 (0x10)  CRC: 0xEC938B74
	-1580027648,	 // (0xa1d2b100) // 161 (0xa1) 210 (0xd2) 177 (0xb1)  CRC: 0x2FBFA30B
	801088267,	// CRC do Jardel: 0x2FBFA30B
	0,	//	synchronized?, exception table length
//	5561: dbgReadBuffer([II)I
	61603840,	 // (0x3ac0000) // 3 (0x03) 172 (0xac)  CRC: 0x6000AA9C
	1610656412,	// CRC do Jardel: 0x6000AA9C
	0,	//	synchronized?, exception table length
//	util.DbgUdp
//	5564: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	705758208,	 // (0x2a110400) // 42 (0x2a) 17 (0x11) 4 (0x04) 0 (0x00)  CRC: 0xC3A4C6C9
	-1140137216,	 // (0xbc0ae300) // 188 (0xbc) 10 (0x0a) 227 (0xe3) 0 (0x00)  CRC: 0x9F75D9D0
	2763267,	 // (0x2a2a03) // 0 (0x00) 42 (0x2a) 42 (0x2a) 3 (0x03)  CRC: 0x24CA0377
	1521811458,	 // (0x5ab50002) // 90 (0x5a) 181 (0xb5) 0 (0x00) 2 (0x02)  CRC: 0x43498763
	-1258290767,	 // (0xb50001b1) // 181 (0xb5) 0 (0x00) 1 (0x01) 177 (0xb1)  CRC: 0x10A20B82
	279055234,	// CRC do Jardel: 0x10A20B82
	0,	//	synchronized?, exception table length
//	5572: dbgWr(I)V
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xF4327CCB
	1498268202,	 // (0x594dc22a) // 89 (0x59) 77 (0x4d) 194 (0xc2) 42 (0x2a)  CRC: 0xCB722AF4
	-1275067900,	 // (0xb4000204) // 180 (0xb4) 0 (0x00) 2 (0x02) 4 (0x04)  CRC: 0xFCB62975
	1611727871,	 // (0x601103ff) // 96 (0x60) 17 (0x11) 3 (0x03) 255 (0xff)  CRC: 0x4D6AE999
	2116727808,	 // (0x7e2ab400) // 126 (0x7e) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x6F4F668C
	27262982,	 // (0x1a00006) // 1 (0x01) 160 (0xa0) 0 (0x00) 6 (0x06)  CRC: 0x1D45BB3B
	751022378,	 // (0x2cc3b12a) // 44 (0x2c) 195 (0xc3) 177 (0xb1) 42 (0x2a)  CRC: 0x135514AB
	-503316438,	 // (0xe200002a) // 226 (0xe2) 0 (0x00) 0 (0x00) 42 (0x2a)  CRC: 0x165BA406
	-1275067877,	 // (0xb400021b) // 180 (0xb4) 0 (0x00) 2 (0x02) 27 (0x1b)  CRC: 0x6E7916B0
	1328163508,	 // (0x4f2a2ab4) // 79 (0x4f) 42 (0x2a) 42 (0x2a) 180 (0xb4)  CRC: 0xE2B0A37B
	132192,	 // (0x20460) // 0 (0x00) 2 (0x02) 4 (0x04) 96 (0x60)  CRC: 0x6C9E452C
	285474686,	 // (0x1103ff7e) // 17 (0x11) 3 (0x03) 255 (0xff) 126 (0x7e)  CRC: 0x46872074
	-1258290644,	 // (0xb500022c) // 181 (0xb5) 0 (0x00) 2 (0x02) 44 (0x2c)  CRC: 0xED0E8064
	-1012465656,	 // (0xc3a70008) // 195 (0xc3) 167 (0xa7) 0 (0x00) 8 (0x08)  CRC: 0xCF96FC76
	1311556397,	 // (0x4e2cc32d) // 78 (0x4e) 44 (0x2c) 195 (0xc3) 45 (0x2d)  CRC: 0x6DBC9BA4
	-1078919168,	 // (0xbfb10000) // 191 (0xbf) 177 (0xb1)  CRC: 0xCCA5AE42
	-861557182,	// CRC do Jardel: 0xCCA5AE42
	3,	//	synchronized?, exception table length
	458778,	// start: 7	end: 26
	3670016,	// target: 56	type: 0
	1769525,	// start: 27	end: 53
	3670016,	// target: 56	type: 0
	3670075,	// start: 56	end: 59
	3670016,	// target: 56	type: 0
//	5596: dbgReadBuffer([II)I
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xF4327CCB
	1496975042,	 // (0x593a06c2) // 89 (0x59) 58 (0x3a) 6 (0x06) 194 (0xc2)  CRC: 0x74E03618
	53871644,	 // (0x336041c) // 3 (0x03) 54 (0x36) 4 (0x04) 28 (0x1c)  CRC: 0x03401E03
	906298174,	 // (0x3605033e) // 54 (0x36) 5 (0x05) 3 (0x03) 62 (0x3e)  CRC: 0x1BC870CA
	716439553,	 // (0x2ab40001) // 42 (0x2a) 180 (0xb4) 0 (0x00) 1 (0x01)  CRC: 0x651B280C
	716439554,	 // (0x2ab40002) // 42 (0x2a) 180 (0xb4) 0 (0x00) 2 (0x02)  CRC: 0xE94AAB2C
	-1627373547,	 // (0x9f004015) // 159 (0x9f) 0 (0x00) 64 (0x40) 21 (0x15)  CRC: 0x089276BB
	68159608,	 // (0x4100878) // 4 (0x04) 16 (0x10) 8 (0x08) 120 (0x78)  CRC: 0x310498CE
	906237188,	 // (0x36041504) // 54 (0x36) 4 (0x04) 21 (0x15) 4 (0x04)  CRC: 0x5336E8D6
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xF232072A
	716439553,	 // (0x2ab40001) // 42 (0x2a) 180 (0xb4) 0 (0x00) 1 (0x01)  CRC: 0xEFC45F94
	778057220,	 // (0x2e603604) // 46 (0x2e) 96 (0x60) 54 (0x36) 4 (0x04)  CRC: 0xA41369B6
	707441664,	 // (0x2a2ab400) // 42 (0x2a) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0xC10E3079
	17063953,	 // (0x1046011) // 1 (0x01) 4 (0x04) 96 (0x60) 17 (0x11)  CRC: 0x74A3C222
	67075765,	 // (0x3ff7eb5) // 3 (0x03) 255 (0xff) 126 (0x7e) 181 (0xb5)  CRC: 0x95754229
	72966,	 // (0x11d06) // 0 (0x00) 1 (0x01) 29 (0x1d) 6 (0x06)  CRC: 0xFB3902B8
	2114363392,	 // (0x7e06a000) // 126 (0x7e) 6 (0x06) 160 (0xa0) 0 (0x00)  CRC: 0x0F7C53B3
	254481669,	 // (0xf2b1505) // 15 (0x0f) 43 (0x2b) 21 (0x15) 5 (0x05)  CRC: 0x741D5D7D
	352603925,	 // (0x15044f15) // 21 (0x15) 4 (0x04) 79 (0x4f) 21 (0x15)  CRC: 0x0C6CA253
	84172854,	 // (0x5046036) // 5 (0x05) 4 (0x04) 96 (0x60) 54 (0x36)  CRC: 0x7442BA08
	85787744,	 // (0x51d0460) // 5 (0x05) 29 (0x1d) 4 (0x04) 96 (0x60)  CRC: 0x5D34BD63
	1051197371,	 // (0x3ea7ffbb) // 62 (0x3e) 167 (0xa7) 255 (0xff) 187 (0xbb)  CRC: 0xB893170E
	486964790,	 // (0x1d067e36) // 29 (0x1d) 6 (0x06) 126 (0x7e) 54 (0x36)  CRC: 0xB5EEEEAE
	118818713,	 // (0x7150799) // 7 (0x07) 21 (0x15) 7 (0x07) 153 (0x99)  CRC: 0x19FE0B80
	2036999,	 // (0x1f1507) // 0 (0x00) 31 (0x1f) 21 (0x15) 7 (0x07)  CRC: 0x5FACE830
	128057363,	 // (0x7a20013) // 7 (0x07) 162 (0xa2) 0 (0x00) 19 (0x13)  CRC: 0x2B61CD9A
	352587784,	 // (0x15041008) // 21 (0x15) 4 (0x04) 16 (0x10) 8 (0x08)  CRC: 0x112A4A41
	2016805909,	 // (0x78360415) // 120 (0x78) 54 (0x36) 4 (0x04) 21 (0x15)  CRC: 0x05D56DD2
	117727286,	 // (0x7046036) // 7 (0x07) 4 (0x04) 96 (0x60) 54 (0x36)  CRC: 0x8E1324D1
	128450541,	 // (0x7a7ffed) // 7 (0x07) 167 (0xa7) 255 (0xff) 237 (0xed)  CRC: 0x0838C15E
	722797845,	 // (0x2b150515) // 43 (0x2b) 21 (0x15) 5 (0x05) 21 (0x15)  CRC: 0xE14839CA
	72292614,	 // (0x44f1906) // 4 (0x04) 79 (0x4f) 25 (0x19) 6 (0x06)  CRC: 0x1E811EA9
	-1012465653,	 // (0xc3a7000b) // 195 (0xc3) 167 (0xa7) 0 (0x00) 11 (0x0b)  CRC: 0xD302F374
	973609222,	 // (0x3a081906) // 58 (0x3a) 8 (0x08) 25 (0x19) 6 (0x06)  CRC: 0x32CCDA85
	-1021769537,	 // (0xc31908bf) // 195 (0xc3) 25 (0x19) 8 (0x08) 191 (0xbf)  CRC: 0xFDAA753B
	497811456,	 // (0x1dac0000) // 29 (0x1d) 172 (0xac)  CRC: 0xE02230EF
	-534630161,	// CRC do Jardel: 0xE02230EF
	2,	//	synchronized?, exception table length
	524417,	// start: 8	end: 129
	8650752,	// target: 132	type: 0
	8650889,	// start: 132	end: 137
	8650752,	// target: 132	type: 0
//	java.io.IOException
//	5638: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	5642: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	com.jopdesign.sys.JVMHelp
//	5646: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	5650: interrupt()V
	-536829680,	 // (0xe000a110) // 224 (0xe0) 0 (0x00) 161 (0xa1) 16 (0x10)  CRC: 0xE426743D
	-2033110512,	 // (0x86d13210) // 134 (0x86) 209 (0xd1) 50 (0x32) 16 (0x10)  CRC: 0xAF72B8A7
	-2100219207,	 // (0x82d132b9) // 130 (0x82) 209 (0xd1) 50 (0x32) 185 (0xb9)  CRC: 0xF7826DD0
	196864,	 // (0x30100) // 0 (0x00) 3 (0x03) 1 (0x01) 0 (0x00)  CRC: 0x8755630F
	68190418,	 // (0x41080d2) // 4 (0x04) 16 (0x10) 128 (0x80) 210 (0xd2)  CRC: 0x2FC68A24
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x0BC1FCF2
	197262578,	// CRC do Jardel: 0x0BC1FCF2
	0,	//	synchronized?, exception table length
//	5658: nullPoint()V
	-536828737,	 // (0xe000a4bf) // 224 (0xe0) 0 (0x00) 164 (0xa4) 191 (0xbf)  CRC: 0x4BFB772B
	1274771243,	// CRC do Jardel: 0x4BFB772B
	0,	//	synchronized?, exception table length
//	5661: arrayBound()V
	-536828481,	 // (0xe000a5bf) // 224 (0xe0) 0 (0x00) 165 (0xa5) 191 (0xbf)  CRC: 0x4A23DBAC
	1243863980,	// CRC do Jardel: 0x4A23DBAC
	0,	//	synchronized?, exception table length
//	5664: except()V
	-676134809,	 // (0xd7b30067) // 215 (0xd7) 179 (0xb3) 0 (0x00) 103 (0x67)  CRC: 0xE831195D
	277140228,	 // (0x1084d304) // 16 (0x10) 132 (0x84) 211 (0xd3) 4 (0x04)  CRC: 0x30398210
	-1610611184,	 // (0xa0000610) // 160 (0xa0) 0 (0x00) 6 (0x06) 16 (0x10)  CRC: 0x58F8F625
	1087944704,	 // (0x40d8b800) // 64 (0x40) 216 (0xd8) 184 (0xb8) 0 (0x00)  CRC: 0x5D9B6312
	145817600,	 // (0x8b10000) // 8 (0x08) 177 (0xb1)  CRC: 0x92F75561
	-1829284511,	// CRC do Jardel: 0x92F75561
	0,	//	synchronized?, exception table length
//	5671: noim()V
	275691520,	 // (0x106eb800) // 16 (0x10) 110 (0x6e) 184 (0xb8) 0 (0x00)  CRC: 0x866602C6
	152070584,	 // (0x91069b8) // 9 (0x09) 16 (0x10) 105 (0x69) 184 (0xb8)  CRC: 0xFA509C11
	593952,	 // (0x91020) // 0 (0x00) 9 (0x09) 16 (0x10) 32 (0x20)  CRC: 0xFE0A74C1
	-1207957033,	 // (0xb80009d7) // 184 (0xb8) 0 (0x00) 9 (0x09) 215 (0xd7)  CRC: 0x3BEABCFD
	991561572,	 // (0x3b1a0764) // 59 (0x3b) 26 (0x1a) 7 (0x07) 100 (0x64)  CRC: 0x6A8DDFA7
	-717481210,	 // (0xd53c1b06) // 213 (0xd5) 60 (0x3c) 27 (0x1b) 6 (0x06)  CRC: 0x335E99E1
	1691681892,	 // (0x64d50464) // 100 (0x64) 213 (0xd5) 4 (0x04) 100 (0x64)  CRC: 0xACB31229
	1025234235,	 // (0x3d1bd53b) // 61 (0x3d) 27 (0x1b) 213 (0xd5) 59 (0x3b)  CRC: 0x03D99BC5
	448266251,	 // (0x1ab8000b) // 26 (0x1a) 184 (0xb8) 0 (0x00) 11 (0x0b)  CRC: 0x0A9C6524
	270579712,	 // (0x1020b800) // 16 (0x10) 32 (0x20) 184 (0xb8) 0 (0x00)  CRC: 0x68CA055A
	152752912,	 // (0x91ad310) // 9 (0x09) 26 (0x1a) 211 (0xd3) 16 (0x10)  CRC: 0xFF914827
	175914525,	 // (0xa7c3e1d) // 10 (0x0a) 124 (0x7c) 62 (0x3e) 29 (0x1d)  CRC: 0x21B38F02
	-1207956720,	 // (0xb8000b10) // 184 (0xb8) 0 (0x00) 11 (0x0b) 16 (0x10)  CRC: 0xA82330D5
	548929545,	 // (0x20b80009) // 32 (0x20) 184 (0xb8) 0 (0x00) 9 (0x09)  CRC: 0x3FA7899A
	481820684,	 // (0x1cb8000c) // 28 (0x1c) 184 (0xb8) 0 (0x00) 12 (0x0c)  CRC: 0x3EA38C7C
	270579712,	 // (0x1020b800) // 16 (0x10) 32 (0x20) 184 (0xb8) 0 (0x00)  CRC: 0xC1341FF3
	152902661,	 // (0x91d1c05) // 9 (0x09) 29 (0x1d) 28 (0x1c) 5 (0x05)  CRC: 0x3810A045
	2053165878,	 // (0x7a60d336) // 122 (0x7a) 96 (0x60) 211 (0xd3) 54 (0x36)  CRC: 0x8EA60FE6
	68945534,	 // (0x41c067e) // 4 (0x04) 28 (0x1c) 6 (0x06) 126 (0x7e)  CRC: 0x13DACCAD
	991561378,	 // (0x3b1a06a2) // 59 (0x3b) 26 (0x1a) 6 (0x06) 162 (0xa2)  CRC: 0xE0F056A1
	1119492,	 // (0x111504) // 0 (0x00) 17 (0x11) 21 (0x15) 4 (0x04)  CRC: 0xC55C1208
	268991030,	 // (0x10087a36) // 16 (0x10) 8 (0x08) 122 (0x7a) 54 (0x36)  CRC: 0x654B7F00
	68813920,	 // (0x41a0460) // 4 (0x04) 26 (0x1a) 4 (0x04) 96 (0x60)  CRC: 0x38A1181C
	1000865776,	 // (0x3ba7fff0) // 59 (0x3b) 167 (0xa7) 255 (0xff) 240 (0xf0)  CRC: 0x6635FDB8
	352588032,	 // (0x15041100) // 21 (0x15) 4 (0x04) 17 (0x11) 0 (0x00)  CRC: 0xACE9DB36
	-8505852,	 // (0xff7e3604) // 255 (0xff) 126 (0x7e) 54 (0x36) 4 (0x04)  CRC: 0x738D0426
	352630784,	 // (0x1504b800) // 21 (0x15) 4 (0x04) 184 (0xb8) 0 (0x00)  CRC: 0x55CD442B
	213581837,	 // (0xcbb000d) // 12 (0x0c) 187 (0xbb) 0 (0x00) 13 (0x0d)  CRC: 0x8534FF33
	1505165313,	 // (0x59b70001) // 89 (0x59) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xB3CFA4CB
	973412613,	 // (0x3a051905) // 58 (0x3a) 5 (0x05) 25 (0x19) 5 (0x05)  CRC: 0x059FBC6D
	1496975042,	 // (0x593a06c2) // 89 (0x59) 58 (0x3a) 6 (0x06) 194 (0xc2)  CRC: 0x35DA6C1E
	-536832842,	 // (0xe00094b6) // 224 (0xe0) 0 (0x00) 148 (0x94) 182 (0xb6)  CRC: 0xA113440B
	974848,	 // (0xee000) // 0 (0x00) 14 (0x0e) 224 (0xe0) 0 (0x00)  CRC: 0x6E5E5472
	-1810755658,	 // (0x94120fb6) // 148 (0x94) 18 (0x12) 15 (0x0f) 182 (0xb6)  CRC: 0x68CDE5F7
	1105920,	 // (0x10e000) // 0 (0x00) 16 (0x10) 224 (0xe0) 0 (0x00)  CRC: 0x0280F075
	-1810561866,	 // (0x941504b6) // 148 (0x94) 21 (0x15) 4 (0x04) 182 (0xb6)  CRC: 0x99E6B29F
	1171456,	 // (0x11e000) // 0 (0x00) 17 (0x11) 224 (0xe0) 0 (0x00)  CRC: 0xBD30CE5F
	-1810754890,	 // (0x941212b6) // 148 (0x94) 18 (0x12) 18 (0x12) 182 (0xb6)  CRC: 0xCB0FF54E
	1252280,	 // (0x131bb8) // 0 (0x00) 19 (0x13) 27 (0x1b) 184 (0xb8)  CRC: 0xB8C6DE2C
	1353472,	 // (0x14a700) // 0 (0x00) 20 (0x14) 167 (0xa7) 0 (0x00)  CRC: 0x4A4897EF
	3802905,	 // (0x3a0719) // 0 (0x00) 58 (0x3a) 7 (0x07) 25 (0x19)  CRC: 0x7929DBA8
	113449223,	 // (0x6c31907) // 6 (0x06) 195 (0xc3) 25 (0x19) 7 (0x07)  CRC: 0x84CC7104
	-1090519040,	 // (0xbf000000) // 191 (0xbf)  CRC: 0x7C1183C6
	2081522630,	// CRC do Jardel: 0x7C1183C6
	1,	//	synchronized?, exception table length
	8126630,	// start: 124	end: 166
	10551296,	// target: 161	type: 0
//	5718: handleException()V
	277140283,	 // (0x1084d33b) // 16 (0x10) 132 (0x84) 211 (0xd3) 59 (0x3b)  CRC: 0x8A473CCE
	436510720,	 // (0x1a04a000) // 26 (0x1a) 4 (0x04) 160 (0xa0) 0 (0x00)  CRC: 0xFF50EBA9
	132120739,	 // (0x7e000a3) // 7 (0x07) 224 (0xe0) 0 (0x00) 163 (0xa3)  CRC: 0xFDBB6ACC
	-1088813664,	 // (0xbf1a05a0) // 191 (0xbf) 26 (0x1a) 5 (0x05) 160 (0xa0)  CRC: 0x23E99D33
	516096,	 // (0x7e000) // 0 (0x00) 7 (0x07) 224 (0xe0) 0 (0x00)  CRC: 0xE495E9BF
	-1530979834,	 // (0xa4bf1a06) // 164 (0xa4) 191 (0xbf) 26 (0x1a) 6 (0x06)  CRC: 0x1505FBA5
	-1610610720,	 // (0xa00007e0) // 160 (0xa0) 0 (0x00) 7 (0x07) 224 (0xe0)  CRC: 0xD57F27AD
	10862362,	 // (0xa5bf1a) // 0 (0x00) 165 (0xa5) 191 (0xbf) 26 (0x1a)  CRC: 0xEA7C3F23
	269000704,	 // (0x1008a000) // 16 (0x10) 8 (0x08) 160 (0xa0) 0 (0x00)  CRC: 0x88F0BF78
	132120742,	 // (0x7e000a6) // 7 (0x07) 224 (0xe0) 0 (0x00) 166 (0xa6)  CRC: 0x5B65EADA
	-1079574528,	 // (0xbfa70000) // 191 (0xbf) 167 (0xa7) 0 (0x00) 0 (0x00)  CRC: 0x134D5ABE
	323836606,	// CRC do Jardel: 0x134D5ABE
	0,	//	synchronized?, exception table length
//	5731: init()V
	277598982,	 // (0x108bd306) // 16 (0x10) 139 (0x8b) 211 (0xd3) 6 (0x06)  CRC: 0x734F240C
	-989850366,	 // (0xc5001502) // 197 (0xc5) 0 (0x00) 21 (0x15) 2 (0x02)  CRC: 0x6C92C22F
	-520052293,	 // (0xe100a1bb) // 225 (0xe1) 0 (0x00) 161 (0xa1) 187 (0xbb)  CRC: 0xBAA9C9D1
	1464759,	 // (0x1659b7) // 0 (0x00) 22 (0x16) 89 (0x59) 183 (0xb7)  CRC: 0x9ED630D9
	1564928,	 // (0x17e100) // 0 (0x00) 23 (0x17) 225 (0xe1) 0 (0x00)  CRC: 0x6F5D00D7
	-1576846566,	 // (0xa2033b1a) // 162 (0xa2) 3 (0x03) 59 (0x3b) 26 (0x1a)  CRC: 0xA0015ED8
	277599138,	 // (0x108bd3a2) // 16 (0x10) 139 (0x8b) 211 (0xd3) 162 (0xa2)  CRC: 0x07786974
	2097980,	 // (0x20033c) // 0 (0x00) 32 (0x20) 3 (0x03) 60 (0x3c)  CRC: 0x32DF2C2E
	453419520,	 // (0x1b06a200) // 27 (0x1b) 6 (0x06) 162 (0xa2) 0 (0x00)  CRC: 0x30C2ADF8
	303700960,	 // (0x121a1be0) // 18 (0x12) 26 (0x1a) 27 (0x1b) 224 (0xe0)  CRC: 0x6799191C
	10663936,	 // (0xa2b800) // 0 (0x00) 162 (0xa2) 184 (0xb8) 0 (0x00)  CRC: 0x2E753D90
	404423776,	 // (0x181b0460) // 24 (0x18) 27 (0x1b) 4 (0x04) 96 (0x60)  CRC: 0x330B3D82
	1017642991,	 // (0x3ca7ffef) // 60 (0x3c) 167 (0xa7) 255 (0xff) 239 (0xef)  CRC: 0x87A96F8A
	436494395,	 // (0x1a04603b) // 26 (0x1a) 4 (0x04) 96 (0x60) 59 (0x3b)  CRC: 0x173F55CA
	-1476403269,	 // (0xa7ffdfbb) // 167 (0xa7) 255 (0xff) 223 (0xdf) 187 (0xbb)  CRC: 0x7D852EE4
	1661367,	 // (0x1959b7) // 0 (0x00) 25 (0x19) 89 (0x59) 183 (0xb7)  CRC: 0x6DC5E265
	1761536,	 // (0x1ae100) // 0 (0x00) 26 (0x1a) 225 (0xe1) 0 (0x00)  CRC: 0x9CEF4DAF
	-1548025829,	 // (0xa3bb001b) // 163 (0xa3) 187 (0xbb) 0 (0x00) 27 (0x1b)  CRC: 0x33202F58
	1505165340,	 // (0x59b7001c) // 89 (0x59) 183 (0xb7) 0 (0x00) 28 (0x1c)  CRC: 0x28C0AD1E
	-520051525,	 // (0xe100a4bb) // 225 (0xe1) 0 (0x00) 164 (0xa4) 187 (0xbb)  CRC: 0x7574ACC1
	1923511,	 // (0x1d59b7) // 0 (0x00) 29 (0x1d) 89 (0x59) 183 (0xb7)  CRC: 0xC1A9568D
	2023680,	 // (0x1ee100) // 0 (0x00) 30 (0x1e) 225 (0xe1) 0 (0x00)  CRC: 0x40B93B24
	-1514471393,	 // (0xa5bb001f) // 165 (0xa5) 187 (0xbb) 0 (0x00) 31 (0x1f)  CRC: 0xE9FA2DF9
	1505165344,	 // (0x59b70020) // 89 (0x59) 183 (0xb7) 0 (0x00) 32 (0x20)  CRC: 0xAAAC60CB
	-520051013,	 // (0xe100a6bb) // 225 (0xe1) 0 (0x00) 166 (0xa6) 187 (0xbb)  CRC: 0xF041B07E
	2185655,	 // (0x2159b7) // 0 (0x00) 33 (0x21) 89 (0x59) 183 (0xb7)  CRC: 0x4220FDCC
	2285824,	 // (0x22e100) // 0 (0x00) 34 (0x22) 225 (0xe1) 0 (0x00)  CRC: 0xF0366F59
	-1481572352,	 // (0xa7b10000) // 167 (0xa7) 177 (0xb1)  CRC: 0x4177FBA8
	1098382248,	// CRC do Jardel: 0x4177FBA8
	0,	//	synchronized?, exception table length
//	5761: trace(I)V
	304330752,	 // (0x1223b800) // 18 (0x12) 35 (0x23) 184 (0xb8) 0 (0x00)  CRC: 0xD3D7F6C3
	605730816,	 // (0x241ab800) // 36 (0x24) 26 (0x1a) 184 (0xb8) 0 (0x00)  CRC: 0x518D367D
	185600696,	 // (0xb100ab8) // 11 (0x0b) 16 (0x10) 10 (0x0a) 184 (0xb8)  CRC: 0x6E8134C4
	596487,	 // (0x91a07) // 0 (0x00) 9 (0x09) 26 (0x1a) 7 (0x07)  CRC: 0x8004260F
	1681658405,	 // (0x643c1225) // 100 (0x64) 60 (0x3c) 18 (0x12) 37 (0x25)  CRC: 0x48CBC584
	-1207950320,	 // (0xb8002410) // 184 (0xb8) 0 (0x00) 36 (0x24) 16 (0x10)  CRC: 0xC08256A4
	179830793,	 // (0xab80009) // 10 (0x0a) 184 (0xb8) 0 (0x00) 9 (0x09)  CRC: 0xFCC33D79
	454051236,	 // (0x1b1045a4) // 27 (0x1b) 16 (0x10) 69 (0x45) 164 (0xa4)  CRC: 0xAF99E596
	5315335,	 // (0x511b07) // 0 (0x00) 81 (0x51) 27 (0x1b) 7 (0x07)  CRC: 0x92C3DB40
	1624587547,	 // (0x60d53d1b) // 96 (0x60) 213 (0xd5) 61 (0x3d) 27 (0x1b)  CRC: 0xC228C04E
	90232126,	 // (0x560d53e) // 5 (0x05) 96 (0x60) 213 (0xd5) 62 (0x3e)  CRC: 0xE66807CE
	453271765,	 // (0x1b0460d5) // 27 (0x1b) 4 (0x04) 96 (0x60) 213 (0xd5)  CRC: 0x07FAC255
	906239187,	 // (0x36041cd3) // 54 (0x36) 4 (0x04) 28 (0x1c) 211 (0xd3)  CRC: 0xDE553E60
	906499336,	 // (0x36081508) // 54 (0x36) 8 (0x08) 21 (0x15) 8 (0x08)  CRC: 0x811031D1
	269122614,	 // (0x100a7c36) // 16 (0x10) 10 (0x0a) 124 (0x7c) 54 (0x36)  CRC: 0x721AF3BA
	85768192,	 // (0x51cb800) // 5 (0x05) 28 (0x1c) 184 (0xb8) 0 (0x00)  CRC: 0x7F99D6A9
	185926840,	 // (0xb1504b8) // 11 (0x0b) 21 (0x15) 4 (0x04) 184 (0xb8)  CRC: 0xDB582417
	727992,	 // (0xb1bb8) // 0 (0x00) 11 (0x0b) 27 (0x1b) 184 (0xb8)  CRC: 0xE0BD30F8
	725002,	 // (0xb100a) // 0 (0x00) 11 (0x0b) 16 (0x10) 10 (0x0a)  CRC: 0x603153AC
	-1207957220,	 // (0xb800091c) // 184 (0xb8) 0 (0x00) 9 (0x09) 28 (0x1c)  CRC: 0x1D421680
	73454390,	 // (0x460d336) // 4 (0x04) 96 (0x60) 211 (0xd3) 54 (0x36)  CRC: 0x6D1AA30F
	135596048,	 // (0x8150810) // 8 (0x08) 21 (0x15) 8 (0x08) 16 (0x10)  CRC: 0xC248BECF
	528365063,	 // (0x1f7e3607) // 31 (0x1f) 126 (0x7e) 54 (0x36) 7 (0x07)  CRC: 0x5F9E72BD
	352847996,	 // (0x1508087c) // 21 (0x15) 8 (0x08) 8 (0x08) 124 (0x7c)  CRC: 0xF3B833EF
	270499382,	 // (0x101f7e36) // 16 (0x10) 31 (0x1f) 126 (0x7e) 54 (0x36)  CRC: 0x17FBE6C1
	102569223,	 // (0x61d1507) // 6 (0x06) 29 (0x1d) 21 (0x15) 7 (0x07)  CRC: 0x143C95D5
	1611990624,	 // (0x60150660) // 96 (0x60) 21 (0x15) 6 (0x06) 96 (0x60)  CRC: 0xB387EC29
	1017642927,	 // (0x3ca7ffaf) // 60 (0x3c) 167 (0xa7) 255 (0xff) 175 (0xaf)  CRC: 0xCE4B2412
	269137920,	 // (0x100ab800) // 16 (0x10) 10 (0x0a) 184 (0xb8) 0 (0x00)  CRC: 0xB6C46F7B
	162594816,	 // (0x9b10000) // 9 (0x09) 177 (0xb1)  CRC: 0xB3D81775
	-1277683851,	// CRC do Jardel: 0xB3D81775
	0,	//	synchronized?, exception table length
//	5793: makeHWObject(Ljava/lang/Object;III)Ljava/lang/Object;
	719140356,	 // (0x2add3604) // 42 (0x2a) 221 (0xdd) 54 (0x36) 4 (0x04)  CRC: 0x27FE1351
	352584800,	 // (0x15040460) // 21 (0x15) 4 (0x04) 4 (0x04) 96 (0x60)  CRC: 0x7C1B8A1A
	-751434467,	 // (0xd336051d) // 211 (0xd3) 54 (0x36) 5 (0x05) 29 (0x1d)  CRC: 0xF25A7C89
	73716534,	 // (0x464d336) // 4 (0x04) 100 (0x64) 211 (0xd3) 54 (0x36)  CRC: 0x2A93D40E
	102041092,	 // (0x6150604) // 6 (0x06) 21 (0x15) 6 (0x06) 4 (0x04)  CRC: 0x1351B7FC
	1624454662,	 // (0x60d33606) // 96 (0x60) 211 (0xd3) 54 (0x36) 6 (0x06)  CRC: 0x2B69D69D
	352721925,	 // (0x15061c05) // 21 (0x15) 6 (0x06) 28 (0x1c) 5 (0x05)  CRC: 0x197DFF7D
	1751135750,	 // (0x68603606) // 104 (0x68) 96 (0x60) 54 (0x36) 6 (0x06)  CRC: 0x1C75350B
	454362836,	 // (0x1b1506d4) // 27 (0x1b) 21 (0x15) 6 (0x06) 212 (0xd4)  CRC: 0xB07054CD
	352654598,	 // (0x15051506) // 21 (0x15) 5 (0x05) 21 (0x15) 6 (0x06)  CRC: 0x84ED0DFA
	73454613,	 // (0x460d415) // 4 (0x04) 96 (0x60) 212 (0xd4) 21 (0x15)  CRC: 0x6DBBBE68
	115191808,	 // (0x6ddb000) // 6 (0x06) 221 (0xdd) 176 (0xb0)  CRC: 0xED016A89
	-318674295,	// CRC do Jardel: 0xED016A89
	0,	//	synchronized?, exception table length
//	5807: makeHWArray(IIII)[I
	486827219,	 // (0x1d0464d3) // 29 (0x1d) 4 (0x04) 100 (0x64) 211 (0xd3)  CRC: 0x92324DB3
	906237188,	 // (0x36041504) // 54 (0x36) 4 (0x04) 21 (0x15) 4 (0x04)  CRC: 0xC8DDC650
	73454390,	 // (0x460d336) // 4 (0x04) 96 (0x60) 211 (0xd3) 54 (0x36)  CRC: 0x75713925
	68486172,	 // (0x415041c) // 4 (0x04) 21 (0x15) 4 (0x04) 28 (0x1c)  CRC: 0x3B5E4C58
	90726454,	 // (0x5686036) // 5 (0x05) 104 (0x68) 96 (0x60) 54 (0x36)  CRC: 0x5926A359
	68883716,	 // (0x41b1504) // 4 (0x04) 27 (0x1b) 21 (0x15) 4 (0x04)  CRC: 0x2AEF457C
	-736488188,	 // (0xd41a1504) // 212 (0xd4) 26 (0x1a) 21 (0x15) 4 (0x04)  CRC: 0x59CDCC00
	73454613,	 // (0x460d415) // 4 (0x04) 96 (0x60) 212 (0xd4) 21 (0x15)  CRC: 0x38DCBE0C
	81637376,	 // (0x4ddb000) // 4 (0x04) 221 (0xdd) 176 (0xb0)  CRC: 0x95887C5D
	-1786217379,	// CRC do Jardel: 0x95887C5D
	0,	//	synchronized?, exception table length
//	5818: addInterruptHandler(ILjava/lang/Runnable;)V
	277271322,	 // (0x1086d31a) // 16 (0x10) 134 (0x86) 211 (0xd3) 26 (0x1a)  CRC: 0x1C317E87
	733478936,	 // (0x2bb80018) // 43 (0x2b) 184 (0xb8) 0 (0x00) 24 (0x18)  CRC: 0xB98D7E0A
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xF2EA1643
	-219539901,	// CRC do Jardel: 0xF2EA1643
	0,	//	synchronized?, exception table length
//	5823: addInterruptHandler(IILjava/lang/Runnable;)V
	463142933,	 // (0x1b9b0015) // 27 (0x1b) 155 (0x9b) 0 (0x00) 21 (0x15)  CRC: 0x5AA8B40A
	467665057,	 // (0x1be000a1) // 27 (0x1b) 224 (0xe0) 0 (0x00) 161 (0xa1)  CRC: 0x76F04B17
	439533218,	 // (0x1a32bea2) // 26 (0x1a) 50 (0x32) 190 (0xbe) 162 (0xa2)  CRC: 0x9801A720
	778240,	 // (0xbe000) // 0 (0x00) 11 (0x0b) 224 (0xe0) 0 (0x00)  CRC: 0xFDC8EC36
	-1592118757,	 // (0xa11a321b) // 161 (0xa1) 26 (0x1a) 50 (0x32) 27 (0x1b)  CRC: 0xC1D1455F
	743682304,	 // (0x2c53b100) // 44 (0x2c) 83 (0x53) 177 (0xb1)  CRC: 0xFED69954
	-19490476,	// CRC do Jardel: 0xFED69954
	0,	//	synchronized?, exception table length
//	5831: removeInterruptHandler(I)V
	277271322,	 // (0x1086d31a) // 16 (0x10) 134 (0x86) 211 (0xd3) 26 (0x1a)  CRC: 0x1C317E87
	-1207948623,	 // (0xb8002ab1) // 184 (0xb8) 0 (0x00) 42 (0x2a) 177 (0xb1)  CRC: 0xF60C8135
	-166952651,	// CRC do Jardel: 0xF60C8135
	0,	//	synchronized?, exception table length
//	5835: removeInterruptHandler(II)V
	463142935,	 // (0x1b9b0017) // 27 (0x1b) 155 (0x9b) 0 (0x00) 23 (0x17)  CRC: 0xE6B29CD3
	467665057,	 // (0x1be000a1) // 27 (0x1b) 224 (0xe0) 0 (0x00) 161 (0xa1)  CRC: 0xC1B3F283
	439533218,	 // (0x1a32bea2) // 26 (0x1a) 50 (0x32) 190 (0xbe) 162 (0xa2)  CRC: 0x97EC612C
	909312,	 // (0xde000) // 0 (0x00) 13 (0x0d) 224 (0xe0) 0 (0x00)  CRC: 0x47712DE4
	-1592118757,	 // (0xa11a321b) // 161 (0xa1) 26 (0x1a) 50 (0x32) 27 (0x1b)  CRC: 0xF32475E3
	-536829357,	 // (0xe000a253) // 224 (0xe0) 0 (0x00) 162 (0xa2) 83 (0x53)  CRC: 0x4F40D4AB
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xB774D43C
	-1217080260,	// CRC do Jardel: 0xB774D43C
	0,	//	synchronized?, exception table length
//	5844: wrByte(I)V
	271587856,	 // (0x10301a10) // 16 (0x10) 48 (0x30) 26 (0x1a) 16 (0x10)  CRC: 0x9B09AEA0
	1684824248,	 // (0x646c60b8) // 100 (0x64) 108 (0x6c) 96 (0x60) 184 (0xb8)  CRC: 0xE50B419E
	593968,	 // (0x91030) // 0 (0x00) 9 (0x09) 16 (0x10) 48 (0x30)  CRC: 0xE3C2BB12
	437258860,	 // (0x1a100a6c) // 26 (0x1a) 16 (0x10) 10 (0x0a) 108 (0x6c)  CRC: 0xABB24283
	269119584,	 // (0x100a7060) // 16 (0x10) 10 (0x0a) 112 (0x70) 96 (0x60)  CRC: 0x94F48E3B
	-1207957232,	 // (0xb8000910) // 184 (0xb8) 0 (0x00) 9 (0x09) 16 (0x10)  CRC: 0xE7D3D330
	807014410,	 // (0x301a100a) // 48 (0x30) 26 (0x1a) 16 (0x10) 10 (0x0a)  CRC: 0xC7E10492
	1885386752,	 // (0x7060b800) // 112 (0x70) 96 (0x60) 184 (0xb8) 0 (0x00)  CRC: 0xE72114F8
	152051896,	 // (0x91020b8) // 9 (0x09) 16 (0x10) 32 (0x20) 184 (0xb8)  CRC: 0x0AEAB607
	635136,	 // (0x9b100) // 0 (0x00) 9 (0x09) 177 (0xb1)  CRC: 0x3343D052
	860082258,	// CRC do Jardel: 0x3343D052
	0,	//	synchronized?, exception table length
//	5856: wrSmall(I)V
	271587858,	 // (0x10301a12) // 16 (0x10) 48 (0x30) 26 (0x1a) 18 (0x12)  CRC: 0x27138679
	728502282,	 // (0x2b6c100a) // 43 (0x2b) 108 (0x6c) 16 (0x10) 10 (0x0a)  CRC: 0x09343206
	1885386752,	 // (0x7060b800) // 112 (0x70) 96 (0x60) 184 (0xb8) 0 (0x00)  CRC: 0xCBA1AE1C
	152055834,	 // (0x910301a) // 9 (0x09) 16 (0x10) 48 (0x30) 26 (0x1a)  CRC: 0x2ABC0469
	287772780,	 // (0x1127106c) // 17 (0x11) 39 (0x27) 16 (0x10) 108 (0x6c)  CRC: 0x5BEC6867
	269119584,	 // (0x100a7060) // 16 (0x10) 10 (0x0a) 112 (0x70) 96 (0x60)  CRC: 0x43FF9565
	-1207957232,	 // (0xb8000910) // 184 (0xb8) 0 (0x00) 9 (0x09) 16 (0x10)  CRC: 0xDBF7B09E
	807014659,	 // (0x301a1103) // 48 (0x30) 26 (0x1a) 17 (0x11) 3 (0x03)  CRC: 0x9984C4B4
	-395571190,	 // (0xe86c100a) // 232 (0xe8) 108 (0x6c) 16 (0x10) 10 (0x0a)  CRC: 0xA2C706B3
	1885386752,	 // (0x7060b800) // 112 (0x70) 96 (0x60) 184 (0xb8) 0 (0x00)  CRC: 0x7F955A44
	152055834,	 // (0x910301a) // 9 (0x09) 16 (0x10) 48 (0x30) 26 (0x1a)  CRC: 0x242C8A58
	275016720,	 // (0x10646c10) // 16 (0x10) 100 (0x64) 108 (0x6c) 16 (0x10)  CRC: 0x895AE55E
	175136952,	 // (0xa7060b8) // 10 (0x0a) 112 (0x70) 96 (0x60) 184 (0xb8)  CRC: 0x8408EA66
	593968,	 // (0x91030) // 0 (0x00) 9 (0x09) 16 (0x10) 48 (0x30)  CRC: 0xF300E006
	437258860,	 // (0x1a100a6c) // 26 (0x1a) 16 (0x10) 10 (0x0a) 108 (0x6c)  CRC: 0x33CB121C
	269119584,	 // (0x100a7060) // 16 (0x10) 10 (0x0a) 112 (0x70) 96 (0x60)  CRC: 0x2F00C61C
	-1207957232,	 // (0xb8000910) // 184 (0xb8) 0 (0x00) 9 (0x09) 16 (0x10)  CRC: 0x33BFEE2C
	807014410,	 // (0x301a100a) // 48 (0x30) 26 (0x1a) 16 (0x10) 10 (0x0a)  CRC: 0x2BF6E17E
	1885386752,	 // (0x7060b800) // 112 (0x70) 96 (0x60) 184 (0xb8) 0 (0x00)  CRC: 0x63527B31
	152051896,	 // (0x91020b8) // 9 (0x09) 16 (0x10) 32 (0x20) 184 (0xb8)  CRC: 0x21054C12
	635136,	 // (0x9b100) // 0 (0x00) 9 (0x09) 177 (0xb1)  CRC: 0x68C7196D
	1757878637,	// CRC do Jardel: 0x68C7196D
	0,	//	synchronized?, exception table length
//	5879: wr(I)V
	277926148,	 // (0x1090d104) // 16 (0x10) 144 (0x90) 209 (0xd1) 4 (0x04)  CRC: 0x2416D249
	2124021766,	 // (0x7e9a0006) // 126 (0x7e) 154 (0x9a) 0 (0x00) 6 (0x06)  CRC: 0x4ED15FC1
	-1476397030,	 // (0xa7fff81a) // 167 (0xa7) 255 (0xff) 248 (0xf8) 26 (0x1a)  CRC: 0x7AF6CC37
	277991962,	 // (0x1091d21a) // 16 (0x10) 145 (0x91) 210 (0xd2) 26 (0x1a)  CRC: 0xCD8B46C5
	279041201,	 // (0x10a1d4b1) // 16 (0x10) 161 (0xa1) 212 (0xd4) 177 (0xb1)  CRC: 0xFB66391F
	-77186785,	// CRC do Jardel: 0xFB66391F
	0,	//	synchronized?, exception table length
//	5886: wr(Ljava/lang/String;)V
	716570668,	 // (0x2ab6002c) // 42 (0x2a) 182 (0xb6) 0 (0x00) 44 (0x2c)  CRC: 0x8FF738C3
	1006845212,	 // (0x3c033d1c) // 60 (0x3c) 3 (0x03) 61 (0x3d) 28 (0x1c)  CRC: 0xDF2A0CA6
	463601682,	 // (0x1ba20012) // 27 (0x1b) 162 (0xa2) 0 (0x00) 18 (0x12)  CRC: 0x59A457C1
	706524672,	 // (0x2a1cb600) // 42 (0x2a) 28 (0x1c) 182 (0xb6) 0 (0x00)  CRC: 0x4ABCB3E0
	767033353,	 // (0x2db80009) // 45 (0x2d) 184 (0xb8) 0 (0x00) 9 (0x09)  CRC: 0xE6EEE5C4
	470048829,	 // (0x1c04603d) // 28 (0x1c) 4 (0x04) 96 (0x60) 61 (0x3d)  CRC: 0xF9DF835A
	-1476399183,	 // (0xa7ffefb1) // 167 (0xa7) 255 (0xff) 239 (0xef) 177 (0xb1)  CRC: 0x08CB8897
	147556503,	// CRC do Jardel: 0x08CB8897
	0,	//	synchronized?, exception table length
//	5895: intVal(I)V
	-536827705,	 // (0xe000a8c7) // 224 (0xe0) 0 (0x00) 168 (0xa8) 199 (0xc7)  CRC: 0x7758C202
	659488,	 // (0xa1020) // 0 (0x00) 10 (0x0a) 16 (0x10) 32 (0x20)  CRC: 0x026BCA8D
	-1140137728,	 // (0xbc0ae100) // 188 (0xbc) 10 (0x0a) 225 (0xe1) 0 (0x00)  CRC: 0x4E01929C
	-1474651136,	 // (0xa81a9c00) // 168 (0xa8) 26 (0x1a) 156 (0x9c) 0 (0x00)  CRC: 0xDE471D56
	185609656,	 // (0xb102db8) // 11 (0x0b) 16 (0x10) 45 (0x2d) 184 (0xb8)  CRC: 0xEF70B09D
	596596,	 // (0x91a74) // 0 (0x00) 9 (0x09) 26 (0x1a) 116 (0x74)  CRC: 0x76DAFCA2
	990067739,	 // (0x3b033c1b) // 59 (0x3b) 3 (0x03) 60 (0x3c) 27 (0x1b)  CRC: 0x8E586EF6
	270508544,	 // (0x101fa200) // 16 (0x10) 31 (0x1f) 162 (0xa2) 0 (0x00)  CRC: 0x52F7AD43
	585105576,	 // (0x22e000a8) // 34 (0x22) 224 (0xe0) 0 (0x00) 168 (0xa8)  CRC: 0x62461FC7
	454692874,	 // (0x1b1a100a) // 27 (0x1b) 26 (0x1a) 16 (0x10) 10 (0x0a)  CRC: 0x1EC87CF4
	1880109152,	 // (0x70103060) // 112 (0x70) 16 (0x10) 48 (0x30) 96 (0x60)  CRC: 0x934DF79A
	1327108106,	 // (0x4f1a100a) // 79 (0x4f) 26 (0x1a) 16 (0x10) 10 (0x0a)  CRC: 0xEFE98047
	1815812762,	 // (0x6c3b1a9a) // 108 (0x6c) 59 (0x3b) 26 (0x1a) 154 (0x9a)  CRC: 0x2B48F641
	435968,	 // (0x6a700) // 0 (0x00) 6 (0x06) 167 (0xa7) 0 (0x00)  CRC: 0x1AADC9B9
	169542752,	 // (0xa1b0460) // 10 (0x0a) 27 (0x1b) 4 (0x04) 96 (0x60)  CRC: 0x92544A64
	1017642974,	 // (0x3ca7ffde) // 60 (0x3c) 167 (0xa7) 255 (0xff) 222 (0xde)  CRC: 0x2F6061E1
	456858267,	 // (0x1b3b1a9b) // 27 (0x1b) 59 (0x3b) 26 (0x1a) 155 (0x9b)  CRC: 0x47B15FF1
	1236992,	 // (0x12e000) // 0 (0x00) 18 (0x12) 224 (0xe0) 0 (0x00)  CRC: 0x76A204DC
	-1474679112,	 // (0xa81a2eb8) // 168 (0xa8) 26 (0x1a) 46 (0x2e) 184 (0xb8)  CRC: 0x277EC8E6
	596482,	 // (0x91a02) // 0 (0x00) 9 (0x09) 26 (0x1a) 2 (0x02)  CRC: 0xCED18DBC
	1614522367,	 // (0x603ba7ff) // 96 (0x60) 59 (0x3b) 167 (0xa7) 255 (0xff)  CRC: 0xE6C87921
	-267378504,	 // (0xf01020b8) // 240 (0xf0) 16 (0x10) 32 (0x20) 184 (0xb8)  CRC: 0x9C415902
	635136,	 // (0x9b100) // 0 (0x00) 9 (0x09) 177 (0xb1)  CRC: 0x309A3250
	815411792,	// CRC do Jardel: 0x309A3250
	0,	//	synchronized?, exception table length
//	java.io.Serializable
//	java.lang.Float
//	5920: <init>(F)V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	706983168,	 // (0x2a23b500) // 42 (0x2a) 35 (0x23) 181 (0xb5) 0 (0x00)  CRC: 0x98B54264
	11599872,	 // (0xb10000) // 0 (0x00) 177 (0xb1)  CRC: 0x5A197B46
	1511619398,	// CRC do Jardel: 0x5A197B46
	0,	//	synchronized?, exception table length
//	5925: <init>(D)V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	707236021,	 // (0x2a2790b5) // 42 (0x2a) 39 (0x27) 144 (0x90) 181 (0xb5)  CRC: 0xFBBD6D4B
	45312,	 // (0xb100) // 0 (0x00) 0 (0x00) 177 (0xb1)  CRC: 0x996F7801
	-1720748031,	// CRC do Jardel: 0x996F7801
	0,	//	synchronized?, exception table length
//	5930: <init>(Ljava/lang/String;)V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	707508224,	 // (0x2a2bb800) // 42 (0x2a) 43 (0x2b) 184 (0xb8) 0 (0x00)  CRC: 0x1A827B95
	45416448,	 // (0x2b50000) // 2 (0x02) 181 (0xb5) 0 (0x00) 0 (0x00)  CRC: 0xCA0DA445
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x47CD23FA
	1204626426,	// CRC do Jardel: 0x47CD23FA
	0,	//	synchronized?, exception table length
//	5936: toString(F)Ljava/lang/String;
	302231552,	 // (0x1203b000) // 18 (0x12) 3 (0x03) 176 (0xb0)  CRC: 0xFDB1A4DD
	-38689571,	// CRC do Jardel: 0xFDB1A4DD
	0,	//	synchronized?, exception table length
//	5939: valueOf(Ljava/lang/String;)Ljava/lang/Float;
	-1157626791,	 // (0xbb000459) // 187 (0xbb) 0 (0x00) 4 (0x04) 89 (0x59)  CRC: 0x92974B48
	716701698,	 // (0x2ab80002) // 42 (0x2a) 184 (0xb8) 0 (0x00) 2 (0x02)  CRC: 0x81D16710
	-1224735312,	 // (0xb70005b0) // 183 (0xb7) 0 (0x00) 5 (0x05) 176 (0xb0)  CRC: 0xF847CBD2
	-129512494,	// CRC do Jardel: 0xF847CBD2
	0,	//	synchronized?, exception table length
//	5944: valueOf(F)Ljava/lang/Float;
	-1157626791,	 // (0xbb000459) // 187 (0xbb) 0 (0x00) 4 (0x04) 89 (0x59)  CRC: 0x92974B48
	582418437,	 // (0x22b70005) // 34 (0x22) 183 (0xb7) 0 (0x00) 5 (0x05)  CRC: 0x06DC49EB
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0x0474966C
	74749548,	// CRC do Jardel: 0x0474966C
	0,	//	synchronized?, exception table length
//	5949: parseFloat(Ljava/lang/String;)F
	-1157626279,	 // (0xbb000659) // 187 (0xbb) 0 (0x00) 6 (0x06) 89 (0x59)  CRC: 0x91261246
	302233344,	 // (0x1203b700) // 18 (0x12) 3 (0x03) 183 (0xb7) 0 (0x00)  CRC: 0xD4402A6A
	129957888,	 // (0x7bf0000) // 7 (0x07) 191 (0xbf)  CRC: 0x12B70E94
	313986708,	// CRC do Jardel: 0x12B70E94
	0,	//	synchronized?, exception table length
//	5954: isNaN(F)Z
	572691865,	 // (0x22229599) // 34 (0x22) 34 (0x22) 149 (0x95) 153 (0x99)  CRC: 0x92E3A2CF
	459943,	 // (0x704a7) // 0 (0x00) 7 (0x07) 4 (0x04) 167 (0xa7)  CRC: 0x49D12B3A
	263084,	 // (0x403ac) // 0 (0x00) 4 (0x04) 3 (0x03) 172 (0xac)  CRC: 0xDF5E7E7D
	-547455363,	// CRC do Jardel: 0xDF5E7E7D
	0,	//	synchronized?, exception table length
//	5959: isInfinite(F)Z
	571607189,	 // (0x22120895) // 34 (0x22) 18 (0x12) 8 (0x08) 149 (0x95)  CRC: 0xDEAD2AA6
	-1728050654,	 // (0x99000a22) // 153 (0x99) 0 (0x00) 10 (0x0a) 34 (0x22)  CRC: 0xDB3BBDB6
	302618010,	 // (0x1209959a) // 18 (0x12) 9 (0x09) 149 (0x95) 154 (0x9a)  CRC: 0xC55A227E
	459943,	 // (0x704a7) // 0 (0x00) 7 (0x07) 4 (0x04) 167 (0xa7)  CRC: 0x8DF3F359
	263084,	 // (0x403ac) // 0 (0x00) 4 (0x04) 3 (0x03) 172 (0xac)  CRC: 0x14CFDA05
	349166085,	// CRC do Jardel: 0x14CFDA05
	0,	//	synchronized?, exception table length
//	5966: isNaN()Z
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1207956820,	 // (0xb8000aac) // 184 (0xb8) 0 (0x00) 10 (0x0a) 172 (0xac)  CRC: 0x98AC777D
	-1733527683,	// CRC do Jardel: 0x98AC777D
	0,	//	synchronized?, exception table length
//	5970: isInfinite()Z
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1207956564,	 // (0xb8000bac) // 184 (0xb8) 0 (0x00) 11 (0x0b) 172 (0xac)  CRC: 0x9974DBFA
	-1720394758,	// CRC do Jardel: 0x9974DBFA
	0,	//	synchronized?, exception table length
//	5974: toString()Ljava/lang/String;
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1207956304,	 // (0xb8000cb0) // 184 (0xb8) 0 (0x00) 12 (0x0c) 176 (0xb0)  CRC: 0xEE7465C3
	-294361661,	// CRC do Jardel: 0xEE7465C3
	0,	//	synchronized?, exception table length
//	5978: byteValue()B
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1953387520,	 // (0x8b91ac00) // 139 (0x8b) 145 (0x91) 172 (0xac)  CRC: 0x1B9929F2
	463022578,	// CRC do Jardel: 0x1B9929F2
	0,	//	synchronized?, exception table length
//	5982: shortValue()S
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1953256448,	 // (0x8b93ac00) // 139 (0x8b) 147 (0x93) 172 (0xac)  CRC: 0xBB6BB7FD
	-1150568451,	// CRC do Jardel: 0xBB6BB7FD
	0,	//	synchronized?, exception table length
//	5986: intValue()I
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1951662080,	 // (0x8bac0000) // 139 (0x8b) 172 (0xac)  CRC: 0xE8FA22A4
	-386260316,	// CRC do Jardel: 0xE8FA22A4
	0,	//	synchronized?, exception table length
//	5990: longValue()J
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1934819328,	 // (0x8cad0000) // 140 (0x8c) 173 (0xad)  CRC: 0x24A4B37D
	614773629,	// CRC do Jardel: 0x24A4B37D
	0,	//	synchronized?, exception table length
//	5994: floatValue()F
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1375731712,	 // (0xae000000) // 174 (0xae)  CRC: 0x0A5F736A
	174027626,	// CRC do Jardel: 0x0A5F736A
	0,	//	synchronized?, exception table length
//	5998: doubleValue()D
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1917911040,	 // (0x8daf0000) // 141 (0x8d) 175 (0xaf)  CRC: 0x809730C5
	-2137575227,	// CRC do Jardel: 0x809730C5
	0,	//	synchronized?, exception table length
//	6002: hashCode()I
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	-1207956052,	 // (0xb8000dac) // 184 (0xb8) 0 (0x00) 13 (0x0d) 172 (0xac)  CRC: 0x9DA730E8
	-1649987352,	// CRC do Jardel: 0x9DA730E8
	0,	//	synchronized?, exception table length
//	6006: equals(Ljava/lang/Object;)Z
	734068740,	 // (0x2bc10004) // 43 (0x2b) 193 (0xc1) 0 (0x00) 4 (0x04)  CRC: 0xDE4E448C
	-1711274749,	 // (0x9a000503) // 154 (0x9a) 0 (0x00) 5 (0x05) 3 (0x03)  CRC: 0xF1E1A505
	-1406418944,	 // (0xac2bc000) // 172 (0xac) 43 (0x2b) 192 (0xc0) 0 (0x00)  CRC: 0xB25CE2A7
	78905344,	 // (0x4b40000) // 4 (0x04) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x2DAA792C
	1160426496,	 // (0x452ab400) // 69 (0x45) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0x0997D107
	2397594,	 // (0x24959a) // 0 (0x00) 36 (0x24) 149 (0x95) 154 (0x9a)  CRC: 0x4876524F
	2042548,	 // (0x1f2ab4) // 0 (0x00) 31 (0x1f) 42 (0x2a) 180 (0xb4)  CRC: 0xDDEB2F20
	2965,	 // (0x0b95) // 0 (0x00) 0 (0x00) 11 (0x0b) 149 (0x95)  CRC: 0x8C964711
	-1711271924,	 // (0x9a00100c) // 154 (0x9a) 0 (0x00) 16 (0x10) 12 (0x0c)  CRC: 0x7AADAC36
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0xB5267A42
	1846289518,	 // (0x6e0c246e) // 110 (0x6e) 12 (0x0c) 36 (0x24) 110 (0x6e)  CRC: 0x2380A0DA
	-1785069561,	 // (0x959a0007) // 149 (0x95) 154 (0x9a) 0 (0x00) 7 (0x07)  CRC: 0x6CCBF4D6
	78053380,	 // (0x4a70004) // 4 (0x04) 167 (0xa7) 0 (0x00) 4 (0x04)  CRC: 0x6F246554
	61614772,	 // (0x3ac2ab4) // 3 (0x03) 172 (0xac) 42 (0x2a) 180 (0xb4)  CRC: 0xEE21E8FD
	47104,	 // (0xb800) // 0 (0x00) 0 (0x00) 184 (0xb8) 0 (0x00)  CRC: 0x8B8CEE5A
	177799182,	 // (0xa99000e) // 10 (0x0a) 153 (0x99) 0 (0x00) 14 (0x0e)  CRC: 0xDD636A0F
	616038410,	 // (0x24b8000a) // 36 (0x24) 184 (0xb8) 0 (0x00) 10 (0x0a)  CRC: 0x1335F660
	-1728051452,	 // (0x99000704) // 153 (0x99) 0 (0x00) 7 (0x07) 4 (0x04)  CRC: 0x73277917
	-1493171197,	 // (0xa7000403) // 167 (0xa7) 0 (0x00) 4 (0x04) 3 (0x03)  CRC: 0x614950E7
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0xD07BE925
	-797185755,	// CRC do Jardel: 0xD07BE925
	0,	//	synchronized?, exception table length
//	6028: floatToIntBits(F)I
	584924187,	 // (0x22dd3c1b) // 34 (0x22) 221 (0xdd) 60 (0x3c) 27 (0x1b)  CRC: 0x1EFE881D
	269974545,	 // (0x10177c11) // 16 (0x10) 23 (0x17) 124 (0x7c) 17 (0x11)  CRC: 0x1418849F
	16743953,	 // (0xff7e11) // 0 (0x00) 255 (0xff) 126 (0x7e) 17 (0x11)  CRC: 0x7D30D75B
	16752640,	 // (0xffa000) // 0 (0x00) 255 (0xff) 160 (0xa0) 0 (0x00)  CRC: 0x9D772B5D
	219877903,	 // (0xd1b120f) // 13 (0x0d) 27 (0x1b) 18 (0x12) 15 (0x0f)  CRC: 0xEE0991EE
	2123956230,	 // (0x7e990006) // 126 (0x7e) 153 (0x99) 0 (0x00) 6 (0x06)  CRC: 0xC4BEC3C0
	303082523,	 // (0x1210ac1b) // 18 (0x12) 16 (0x10) 172 (0xac) 27 (0x1b)  CRC: 0xC2DB7767
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x700E5AEB
	1879988971,	// CRC do Jardel: 0x700E5AEB
	0,	//	synchronized?, exception table length
//	6038: floatToRawIntBits(F)I
	584952832,	 // (0x22ddac00) // 34 (0x22) 221 (0xdd) 172 (0xac)  CRC: 0x81AB042A
	-2119498710,	// CRC do Jardel: 0x81AB042A
	0,	//	synchronized?, exception table length
//	6041: intBitsToFloat(I)F
	450735616,	 // (0x1addae00) // 26 (0x1a) 221 (0xdd) 174 (0xae)  CRC: 0x7020DD0C
	1881201932,	// CRC do Jardel: 0x7020DD0C
	0,	//	synchronized?, exception table length
//	6044: compareTo(Ljava/lang/Float;)I
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	733216768,	 // (0x2bb40000) // 43 (0x2b) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x83CCACEB
	-1207954772,	 // (0xb80012ac) // 184 (0xb8) 0 (0x00) 18 (0x12) 172 (0xac)  CRC: 0x9AF70411
	-1695087599,	// CRC do Jardel: 0x9AF70411
	0,	//	synchronized?, exception table length
//	6049: compareTo(Ljava/lang/Object;)I
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x40F33432
	734003204,	 // (0x2bc00004) // 43 (0x2b) 192 (0xc0) 0 (0x00) 4 (0x04)  CRC: 0xCBA9003E
	-1275068232,	 // (0xb40000b8) // 180 (0xb4) 0 (0x00) 0 (0x00) 184 (0xb8)  CRC: 0x3241648E
	1223680,	 // (0x12ac00) // 0 (0x00) 18 (0x12) 172 (0xac)  CRC: 0xC910F5B3
	-921635405,	// CRC do Jardel: 0xC910F5B3
	0,	//	synchronized?, exception table length
//	6055: compare(FF)I
	582483978,	 // (0x22b8000a) // 34 (0x22) 184 (0xb8) 0 (0x00) 10 (0x0a)  CRC: 0xEC670BA2
	-1728049117,	 // (0x99001023) // 153 (0x99) 0 (0x00) 16 (0x10) 35 (0x23)  CRC: 0xC0F84F9C
	-1207956839,	 // (0xb8000a99) // 184 (0xb8) 0 (0x00) 10 (0x0a) 153 (0x99)  CRC: 0xCB354DCD
	459687,	 // (0x703a7) // 0 (0x00) 7 (0x07) 3 (0x03) 167 (0xa7)  CRC: 0x9B121672
	263340,	 // (0x404ac) // 0 (0x00) 4 (0x04) 4 (0x04) 172 (0xac)  CRC: 0x41B395CE
	599261194,	 // (0x23b8000a) // 35 (0x23) 184 (0xb8) 0 (0x00) 10 (0x0a)  CRC: 0x499C6103
	-1728051966,	 // (0x99000502) // 153 (0x99) 0 (0x00) 5 (0x05) 2 (0x02)  CRC: 0x0F248F80
	-1407054955,	 // (0xac220b95) // 172 (0xac) 34 (0x22) 11 (0x0b) 149 (0x95)  CRC: 0x36AC733D
	-1711271389,	 // (0x9a001223) // 154 (0x9a) 0 (0x00) 18 (0x12) 35 (0x23)  CRC: 0x7B64F78A
	194353664,	 // (0xb959a00) // 11 (0x0b) 149 (0x95) 154 (0x9a) 0 (0x00)  CRC: 0x4F5D5DA5
	202121838,	 // (0xc0c226e) // 12 (0x0c) 12 (0x0c) 34 (0x22) 110 (0x6e)  CRC: 0x3D161639
	203648614,	 // (0xc236e66) // 12 (0x0c) 35 (0x23) 110 (0x6e) 102 (0x66)  CRC: 0x85D3C141
	-1951653341,	 // (0x8bac2223) // 139 (0x8b) 172 (0xac) 34 (0x22) 35 (0x23)  CRC: 0x3F4A3665
	-1785069563,	 // (0x959a0005) // 149 (0x95) 154 (0x9a) 0 (0x00) 5 (0x05)  CRC: 0xC7A9B63B
	61612579,	 // (0x3ac2223) // 3 (0x03) 172 (0xac) 34 (0x22) 35 (0x23)  CRC: 0xC9C2B3EB
	-1784807417,	 // (0x959e0007) // 149 (0x95) 158 (0x9e) 0 (0x00) 7 (0x07)  CRC: 0x36D0423C
	78053380,	 // (0x4a70004) // 4 (0x04) 167 (0xa7) 0 (0x00) 4 (0x04)  CRC: 0xA07E0B14
	44826624,	 // (0x2ac0000) // 2 (0x02) 172 (0xac)  CRC: 0xD5DA8B90
	-707097712,	// CRC do Jardel: 0xD5DA8B90
	0,	//	synchronized?, exception table length
//	java.lang.String
//	6075: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	705823458,	 // (0x2a1202e2) // 42 (0x2a) 18 (0x12) 2 (0x02) 226 (0xe2)  CRC: 0x949AB168
	58112,	 // (0xe300) // 0 (0x00) 0 (0x00) 227 (0xe3) 0 (0x00)  CRC: 0x9864720A
	11599872,	 // (0xb10000) // 0 (0x00) 177 (0xb1)  CRC: 0x7CEFB659
	2096084569,	// CRC do Jardel: 0x7CEFB659
	0,	//	synchronized?, exception table length
//	6081: <init>([B)V
	707461931,	 // (0x2a2b032b) // 42 (0x2a) 43 (0x2b) 3 (0x03) 43 (0x2b)  CRC: 0x1EB4D38D
	-1095303165,	 // (0xbeb70003) // 190 (0xbe) 183 (0xb7) 0 (0x00) 3 (0x03)  CRC: 0x9E7DFA9D
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x449106A3
	1150355107,	// CRC do Jardel: 0x449106A3
	0,	//	synchronized?, exception table length
//	6086: <init>([BII)V
	707468317,	 // (0x2a2b1c1d) // 42 (0x2a) 43 (0x2b) 28 (0x1c) 29 (0x1d)  CRC: 0xD5E237DE
	302298880,	 // (0x1204b700) // 18 (0x12) 4 (0x04) 183 (0xb7) 0 (0x00)  CRC: 0x67FD5869
	95485952,	 // (0x5b10000) // 5 (0x05) 177 (0xb1)  CRC: 0xB1743533
	-1317784269,	// CRC do Jardel: 0xB1743533
	0,	//	synchronized?, exception table length
//	6091: <init>([BIILjava/lang/String;)V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	419739136,	 // (0x1904b600) // 25 (0x19) 4 (0x04) 182 (0xb6) 0 (0x00)  CRC: 0x54C1B4F8
	104465433,	 // (0x63a0419) // 6 (0x06) 58 (0x3a) 4 (0x04) 25 (0x19)  CRC: 0x4C82DB59
	68289718,	 // (0x41204b6) // 4 (0x04) 18 (0x12) 4 (0x04) 182 (0xb6)  CRC: 0x15BCC5D5
	498176,	 // (0x79a00) // 0 (0x00) 7 (0x07) 154 (0x9a) 0 (0x00)  CRC: 0x0D2C8ABA
	196804616,	 // (0xbbb0008) // 11 (0x0b) 187 (0xbb) 0 (0x00) 8 (0x08)  CRC: 0xC93E6C56
	1505165321,	 // (0x59b70009) // 89 (0x59) 183 (0xb7) 0 (0x00) 9 (0x09)  CRC: 0x480BF409
	-1088644096,	 // (0xbf1c9c00) // 191 (0xbf) 28 (0x1c) 156 (0x9c) 0 (0x00)  CRC: 0x12B7C556
	515571722,	 // (0x1ebb000a) // 30 (0x1e) 187 (0xbb) 0 (0x00) 10 (0x0a)  CRC: 0xCD98496E
	1505427467,	 // (0x59bb000b) // 89 (0x59) 187 (0xbb) 0 (0x00) 11 (0x0b)  CRC: 0xD1BC9C27
	1505165324,	 // (0x59b7000c) // 89 (0x59) 183 (0xb7) 0 (0x00) 12 (0x0c)  CRC: 0x1EC7942D
	302888448,	 // (0x120db600) // 18 (0x12) 13 (0x0d) 182 (0xb6) 0 (0x00)  CRC: 0xB98C158A
	236762624,	 // (0xe1cb600) // 14 (0x0e) 28 (0x1c) 182 (0xb6) 0 (0x00)  CRC: 0x972E25E8
	263585808,	 // (0xfb60010) // 15 (0x0f) 182 (0xb6) 0 (0x00) 16 (0x10)  CRC: 0xB0BFB698
	-1224732225,	 // (0xb70011bf) // 183 (0xb7) 0 (0x00) 17 (0x11) 191 (0xbf)  CRC: 0xCFF9FB7D
	496762910,	 // (0x1d9c001e) // 29 (0x1d) 156 (0x9c) 0 (0x00) 30 (0x1e)  CRC: 0x15FC0AB4
	-1157625255,	 // (0xbb000a59) // 187 (0xbb) 0 (0x00) 10 (0x0a) 89 (0x59)  CRC: 0xFEC8F578
	-1157624999,	 // (0xbb000b59) // 187 (0xbb) 0 (0x00) 11 (0x0b) 89 (0x59)  CRC: 0xFC555D9A
	-1224733678,	 // (0xb7000c12) // 183 (0xb7) 0 (0x00) 12 (0x0c) 18 (0x12)  CRC: 0x2529522B
	313917454,	 // (0x12b6000e) // 18 (0x12) 182 (0xb6) 0 (0x00) 14 (0x0e)  CRC: 0x17CA0A0E
	498466831,	 // (0x1db6000f) // 29 (0x1d) 182 (0xb6) 0 (0x00) 15 (0x0f)  CRC: 0xA5B70020
	-1241509705,	 // (0xb60010b7) // 182 (0xb6) 0 (0x00) 16 (0x10) 183 (0xb7)  CRC: 0xA6DDE7A3
	1163051,	 // (0x11bf2b) // 0 (0x00) 17 (0x11) 191 (0xbf) 43 (0x2b)  CRC: 0x5B994D1B
	-1105435619,	 // (0xbe1c641d) // 190 (0xbe) 28 (0x1c) 100 (0x64) 29 (0x1d)  CRC: 0xC085BF1C
	-1577049925,	 // (0xa20020bb) // 162 (0xa2) 0 (0x00) 32 (0x20) 187 (0xbb)  CRC: 0x0AC37969
	678331,	 // (0xa59bb) // 0 (0x00) 10 (0x0a) 89 (0x59) 187 (0xbb)  CRC: 0x16EDD20C
	743863,	 // (0xb59b7) // 0 (0x00) 11 (0x0b) 89 (0x59) 183 (0xb7)  CRC: 0xE30F7E7A
	791059,	 // (0xc1213) // 0 (0x00) 12 (0x0c) 18 (0x12) 19 (0x13)  CRC: 0x6185E08E
	-1241510372,	 // (0xb6000e1c) // 182 (0xb6) 0 (0x00) 14 (0x0e) 28 (0x1c)  CRC: 0x64356554
	492877312,	 // (0x1d60b600) // 29 (0x1d) 96 (0x60) 182 (0xb6) 0 (0x00)  CRC: 0x28424CA5
	263585808,	 // (0xfb60010) // 15 (0x0f) 182 (0xb6) 0 (0x00) 16 (0x10)  CRC: 0x96AACFF2
	-1224732225,	 // (0xb70011bf) // 183 (0xb7) 0 (0x00) 17 (0x11) 191 (0xbf)  CRC: 0x54055C0D
	498861370,	 // (0x1dbc053a) // 29 (0x1d) 188 (0xbc) 5 (0x05) 58 (0x3a)  CRC: 0xAD8773F0
	84096518,	 // (0x5033606) // 5 (0x05) 3 (0x03) 54 (0x36) 6 (0x06)  CRC: 0xF14AB104
	352722338,	 // (0x15061da2) // 21 (0x15) 6 (0x06) 29 (0x1d) 162 (0xa2)  CRC: 0xE5BB6CAD
	1579269,	 // (0x181905) // 0 (0x00) 24 (0x18) 25 (0x19) 5 (0x05)  CRC: 0xBD9C51DA
	352725781,	 // (0x15062b15) // 21 (0x15) 6 (0x06) 43 (0x2b) 21 (0x15)  CRC: 0x793A1B62
	102522931,	 // (0x61c6033) // 6 (0x06) 28 (0x1c) 96 (0x60) 51 (0x33)  CRC: 0x7A583A31
	-1839917818,	 // (0x92551506) // 146 (0x92) 85 (0x55) 21 (0x15) 6 (0x06)  CRC: 0x17AB63FE
	73414150,	 // (0x4603606) // 4 (0x04) 96 (0x60) 54 (0x36) 6 (0x06)  CRC: 0x0603324B
	-1476401110,	 // (0xa7ffe82a) // 167 (0xa7) 255 (0xff) 232 (0xe8) 42 (0x2a)  CRC: 0xEC285B01
	419816192,	 // (0x1905e300) // 25 (0x19) 5 (0x05) 227 (0xe3) 0 (0x00)  CRC: 0xDA42F124
	11599872,	 // (0xb10000) // 0 (0x00) 177 (0xb1)  CRC: 0x7AEAE486
	2062214278,	// CRC do Jardel: 0x7AEAE486
	0,	//	synchronized?, exception table length
//	6136: <init>([BLjava/lang/String;)V
	707461931,	 // (0x2a2b032b) // 42 (0x2a) 43 (0x2b) 3 (0x03) 43 (0x2b)  CRC: 0x1EB4D38D
	-1104365824,	 // (0xbe2cb700) // 190 (0xbe) 44 (0x2c) 183 (0xb7) 0 (0x00)  CRC: 0x5BB64B7C
	95485952,	 // (0x5b10000) // 5 (0x05) 177 (0xb1)  CRC: 0x6A7F4EC4
	1786728132,	// CRC do Jardel: 0x6A7F4EC4
	0,	//	synchronized?, exception table length
//	6141: <init>([C)V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	733887786,	 // (0x2bbe3d2a) // 43 (0x2b) 190 (0xbe) 61 (0x3d) 42 (0x2a)  CRC: 0x5E566EE5
	482084323,	 // (0x1cbc05e3) // 28 (0x1c) 188 (0xbc) 5 (0x05) 227 (0xe3)  CRC: 0x53B9B800
	830,	 // (0x033e) // 0 (0x00) 0 (0x00) 3 (0x03) 62 (0x3e)  CRC: 0x9D0388C5
	488415744,	 // (0x1d1ca200) // 29 (0x1d) 28 (0x1c) 162 (0xa2) 0 (0x00)  CRC: 0x3E71E592
	321577472,	 // (0x132ae200) // 19 (0x13) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xC4CD9D58
	1911581,	 // (0x1d2b1d) // 0 (0x00) 29 (0x1d) 43 (0x2b) 29 (0x1d)  CRC: 0xDCCE05C3
	877993220,	 // (0x34551d04) // 52 (0x34) 85 (0x55) 29 (0x1d) 4 (0x04)  CRC: 0x3A7D1D0B
	1614718975,	 // (0x603ea7ff) // 96 (0x60) 62 (0x3e) 167 (0xa7) 255 (0xff)  CRC: 0x884888FF
	-290390016,	 // (0xeeb10000) // 238 (0xee) 177 (0xb1)  CRC: 0x07910993
	126945683,	// CRC do Jardel: 0x07910993
	0,	//	synchronized?, exception table length
//	6153: <init>([CII)V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	479985694,	 // (0x1c9c001e) // 28 (0x1c) 156 (0x9c) 0 (0x00) 30 (0x1e)  CRC: 0x5B9AFE3D
	-1157625255,	 // (0xbb000a59) // 187 (0xbb) 0 (0x00) 10 (0x0a) 89 (0x59)  CRC: 0xA2EAEB60
	-1157624999,	 // (0xbb000b59) // 187 (0xbb) 0 (0x00) 11 (0x0b) 89 (0x59)  CRC: 0x723FACA2
	-1224733678,	 // (0xb7000c12) // 183 (0xb7) 0 (0x00) 12 (0x0c) 18 (0x12)  CRC: 0x299B47E3
	230031374,	 // (0xdb6000e) // 13 (0x0d) 182 (0xb6) 0 (0x00) 14 (0x0e)  CRC: 0xD31DFC95
	481689615,	 // (0x1cb6000f) // 28 (0x1c) 182 (0xb6) 0 (0x00) 15 (0x0f)  CRC: 0x303247C7
	-1241509705,	 // (0xb60010b7) // 182 (0xb6) 0 (0x00) 16 (0x10) 183 (0xb7)  CRC: 0x103C18FE
	1163037,	 // (0x11bf1d) // 0 (0x00) 17 (0x11) 191 (0xbf) 29 (0x1d)  CRC: 0x5A2A273C
	-1677713733,	 // (0x9c001ebb) // 156 (0x9c) 0 (0x00) 30 (0x1e) 187 (0xbb)  CRC: 0x86CF85D0
	678331,	 // (0xa59bb) // 0 (0x00) 10 (0x0a) 89 (0x59) 187 (0xbb)  CRC: 0x9F10EB51
	743863,	 // (0xb59b7) // 0 (0x00) 11 (0x0b) 89 (0x59) 183 (0xb7)  CRC: 0xF50A03C6
	791058,	 // (0xc1212) // 0 (0x00) 12 (0x0c) 18 (0x12) 18 (0x12)  CRC: 0x685A5999
	-1241510371,	 // (0xb6000e1d) // 182 (0xb6) 0 (0x00) 14 (0x0e) 29 (0x1d)  CRC: 0xA99F0895
	-1241509962,	 // (0xb6000fb6) // 182 (0xb6) 0 (0x00) 15 (0x0f) 182 (0xb6)  CRC: 0xFC881359
	1095424,	 // (0x10b700) // 0 (0x00) 16 (0x10) 183 (0xb7) 0 (0x00)  CRC: 0xEAF36DF3
	297741246,	 // (0x11bf2bbe) // 17 (0x11) 191 (0xbf) 43 (0x2b) 190 (0xbe)  CRC: 0x6C829324
	476323234,	 // (0x1c641da2) // 28 (0x1c) 100 (0x64) 29 (0x1d) 162 (0xa2)  CRC: 0x822F1E70
	2145024,	 // (0x20bb00) // 0 (0x00) 32 (0x20) 187 (0xbb) 0 (0x00)  CRC: 0x539A600E
	173652736,	 // (0xa59bb00) // 10 (0x0a) 89 (0x59) 187 (0xbb) 0 (0x00)  CRC: 0x071A6A98
	190428928,	 // (0xb59b700) // 11 (0x0b) 89 (0x59) 183 (0xb7) 0 (0x00)  CRC: 0xA9F9B809
	202511286,	 // (0xc1213b6) // 12 (0x0c) 18 (0x12) 19 (0x13) 182 (0xb6)  CRC: 0x2130DCDC
	924701,	 // (0xe1c1d) // 0 (0x00) 14 (0x0e) 28 (0x1c) 29 (0x1d)  CRC: 0xFDAE98DC
	1622540303,	 // (0x60b6000f) // 96 (0x60) 182 (0xb6) 0 (0x00) 15 (0x0f)  CRC: 0xCC486E41
	-1241509705,	 // (0xb60010b7) // 182 (0xb6) 0 (0x00) 16 (0x10) 183 (0xb7)  CRC: 0xA9935779
	1163050,	 // (0x11bf2a) // 0 (0x00) 17 (0x11) 191 (0xbf) 42 (0x2a)  CRC: 0x92CEF7B5
	498861539,	 // (0x1dbc05e3) // 29 (0x1d) 188 (0xbc) 5 (0x05) 227 (0xe3)  CRC: 0xE890593A
	822,	 // (0x0336) // 0 (0x00) 0 (0x00) 3 (0x03) 54 (0x36)  CRC: 0xB8AFCCD3
	68486173,	 // (0x415041d) // 4 (0x04) 21 (0x15) 4 (0x04) 29 (0x1d)  CRC: 0xB36E592A
	-1577051862,	 // (0xa200192a) // 162 (0xa2) 0 (0x00) 25 (0x19) 42 (0x2a)  CRC: 0x67885441
	-503316459,	 // (0xe2000015) // 226 (0xe2) 0 (0x00) 0 (0x00) 21 (0x15)  CRC: 0x7A385247
	69932292,	 // (0x42b1504) // 4 (0x04) 43 (0x2b) 21 (0x15) 4 (0x04)  CRC: 0xD6A1F8CB
	476066901,	 // (0x1c603455) // 28 (0x1c) 96 (0x60) 52 (0x34) 85 (0x55)  CRC: 0x26BE012D
	352584800,	 // (0x15040460) // 21 (0x15) 4 (0x04) 4 (0x04) 96 (0x60)  CRC: 0xB346B2F2
	906274815,	 // (0x3604a7ff) // 54 (0x36) 4 (0x04) 167 (0xa7) 255 (0xff)  CRC: 0xED9A3633
	-407830528,	 // (0xe7b10000) // 231 (0xe7) 177 (0xb1)  CRC: 0x8F1A8810
	-1894086640,	// CRC do Jardel: 0x8F1A8810
	0,	//	synchronized?, exception table length
//	6191: <init>(Ljava/lang/String;)V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	707518976,	 // (0x2a2be200) // 42 (0x2a) 43 (0x2b) 226 (0xe2) 0 (0x00)  CRC: 0x7C57AF13
	14876672,	 // (0xe30000) // 0 (0x00) 227 (0xe3) 0 (0x00) 0 (0x00)  CRC: 0xE8237233
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xEC42922C
	-331181524,	// CRC do Jardel: 0xEC42922C
	0,	//	synchronized?, exception table length
//	6197: <init>(Ljava/lang/StringBuffer;)V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	727272898,	 // (0x2b594dc2) // 43 (0x2b) 89 (0x59) 77 (0x4d) 194 (0xc2)  CRC: 0xBEB2988E
	733347860,	 // (0x2bb60014) // 43 (0x2b) 182 (0xb6) 0 (0x00) 20 (0x14)  CRC: 0x69507E96
	1042947516,	 // (0x3e2a1dbc) // 62 (0x3e) 42 (0x2a) 29 (0x1d) 188 (0xbc)  CRC: 0x9D39607A
	98762752,	 // (0x5e30000) // 5 (0x05) 227 (0xe3) 0 (0x00) 0 (0x00)  CRC: 0x099EE938
	53871637,	 // (0x3360415) // 3 (0x03) 54 (0x36) 4 (0x04) 21 (0x15)  CRC: 0x1FC6FB74
	69050880,	 // (0x41da200) // 4 (0x04) 29 (0x1d) 162 (0xa2) 0 (0x00)  CRC: 0xBE2B684D
	439017984,	 // (0x1a2ae200) // 26 (0x1a) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x901A0927
	1377323,	 // (0x15042b) // 0 (0x00) 21 (0x15) 4 (0x04) 43 (0x2b)  CRC: 0x6C43247C
	-503316203,	 // (0xe2000115) // 226 (0xe2) 0 (0x00) 1 (0x01) 21 (0x15)  CRC: 0xE0E70D6F
	70538517,	 // (0x4345515) // 4 (0x04) 52 (0x34) 85 (0x55) 21 (0x15)  CRC: 0xECA570FB
	67395638,	 // (0x4046036) // 4 (0x04) 4 (0x04) 96 (0x60) 54 (0x36)  CRC: 0xDCB1EC87
	78118886,	 // (0x4a7ffe6) // 4 (0x04) 167 (0xa7) 255 (0xff) 230 (0xe6)  CRC: 0xF99AC391
	751019776,	 // (0x2cc3a700) // 44 (0x2c) 195 (0xc3) 167 (0xa7) 0 (0x00)  CRC: 0xED9CED39
	171574572,	 // (0xa3a052c) // 10 (0x0a) 58 (0x3a) 5 (0x05) 44 (0x2c)  CRC: 0x687C6E44
	-1021770305,	 // (0xc31905bf) // 195 (0xc3) 25 (0x19) 5 (0x05) 191 (0xbf)  CRC: 0xF2FAC087
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x6AFA7DD3
	1794801107,	// CRC do Jardel: 0x6AFA7DD3
	2,	//	synchronized?, exception table length
	524342,	// start: 8	end: 54
	3735552,	// target: 57	type: 0
	3735613,	// start: 57	end: 61
	3735552,	// target: 57	type: 0
//	6220: charAt(I)C
	463142924,	 // (0x1b9b000c) // 27 (0x1b) 155 (0x9b) 0 (0x00) 12 (0x0c)  CRC: 0x883B9B14
	455795200,	 // (0x1b2ae200) // 27 (0x1b) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x8FCECE54
	12493056,	 // (0xbea100) // 0 (0x00) 190 (0xbe) 161 (0xa1) 0 (0x00)  CRC: 0x1F59D553
	213581834,	 // (0xcbb000a) // 12 (0x0c) 187 (0xbb) 0 (0x00) 10 (0x0a)  CRC: 0x7D936A3A
	1494988544,	 // (0x591bb700) // 89 (0x59) 27 (0x1b) 183 (0xb7) 0 (0x00)  CRC: 0xABA077A8
	364849890,	 // (0x15bf2ae2) // 21 (0x15) 191 (0xbf) 42 (0x2a) 226 (0xe2)  CRC: 0xD0C71075
	6964,	 // (0x1b34) // 0 (0x00) 0 (0x00) 27 (0x1b) 52 (0x34)  CRC: 0x88993637
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x7ABF0434
	2059338804,	// CRC do Jardel: 0x7ABF0434
	0,	//	synchronized?, exception table length
//	6230: compareTo(Ljava/lang/String;)I
	734461963,	 // (0x2bc7000b) // 43 (0x2b) 199 (0xc7) 0 (0x00) 11 (0x0b)  CRC: 0xDEF09D4B
	-1157622183,	 // (0xbb001659) // 187 (0xbb) 0 (0x00) 22 (0x16) 89 (0x59)  CRC: 0x19CFC761
	-1224730689,	 // (0xb70017bf) // 183 (0xb7) 0 (0x00) 23 (0x17) 191 (0xbf)  CRC: 0xFACA1DCD
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0x2DA07B0A
	-1104420352,	 // (0xbe2be200) // 190 (0xbe) 43 (0x2b) 226 (0xe2) 0 (0x00)  CRC: 0x392C7C7A
	12493312,	 // (0xbea200) // 0 (0x00) 190 (0xbe) 162 (0xa2) 0 (0x00)  CRC: 0x723C44AF
	187359744,	 // (0xb2ae200) // 11 (0x0b) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x11457088
	12494592,	 // (0xbea700) // 0 (0x00) 190 (0xbe) 167 (0xa7) 0 (0x00)  CRC: 0x6AF059CC
	137093632,	 // (0x82be200) // 8 (0x08) 43 (0x2b) 226 (0xe2) 0 (0x00)  CRC: 0xFFF94E3A
	12467459,	 // (0xbe3d03) // 0 (0x00) 190 (0xbe) 61 (0x3d) 3 (0x03)  CRC: 0x7A8860EE
	1040397828,	 // (0x3e033604) // 62 (0x3e) 3 (0x03) 54 (0x36) 4 (0x04)  CRC: 0x37A1DDBB
	469917757,	 // (0x1c02603d) // 28 (0x1c) 2 (0x02) 96 (0x60) 61 (0x3d)  CRC: 0x5F216AF0
	479920168,	 // (0x1c9b0028) // 28 (0x1c) 155 (0x9b) 0 (0x00) 40 (0x28)  CRC: 0x3B255C2B
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0x60EE5BA3
	488440928,	 // (0x1d1d0460) // 29 (0x1d) 29 (0x1d) 4 (0x04) 96 (0x60)  CRC: 0x893C3108
	1043606498,	 // (0x3e342be2) // 62 (0x3e) 52 (0x34) 43 (0x2b) 226 (0xe2)  CRC: 0xE36FB372
	5380,	 // (0x1504) // 0 (0x00) 0 (0x00) 21 (0x15) 4 (0x04)  CRC: 0xF5FD5D43
	352584800,	 // (0x15040460) // 21 (0x15) 4 (0x04) 4 (0x04) 96 (0x60)  CRC: 0x29C2A707
	906245220,	 // (0x36043464) // 54 (0x36) 4 (0x04) 52 (0x34) 100 (0x64)  CRC: 0x3067CE65
	906302725,	 // (0x36051505) // 54 (0x36) 5 (0x05) 21 (0x15) 5 (0x05)  CRC: 0xA0DDB835
	-1728051691,	 // (0x99000615) // 153 (0x99) 0 (0x00) 6 (0x06) 21 (0x15)  CRC: 0x6CCD40E9
	95201279,	 // (0x5aca7ff) // 5 (0x05) 172 (0xac) 167 (0xa7) 255 (0xff)  CRC: 0xAD6F73D2
	-701832704,	 // (0xd62ae200) // 214 (0xd6) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xEB160F7A
	12463074,	 // (0xbe2be2) // 0 (0x00) 190 (0xbe) 43 (0x2b) 226 (0xe2)  CRC: 0xA43E5FCE
	48740,	 // (0xbe64) // 0 (0x00) 0 (0x00) 190 (0xbe) 100 (0x64)  CRC: 0x1637142C
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x28160C2E
	672533550,	// CRC do Jardel: 0x28160C2E
	0,	//	synchronized?, exception table length
//	6258: concat(Ljava/lang/String;)Ljava/lang/String;
	734461963,	 // (0x2bc7000b) // 43 (0x2b) 199 (0xc7) 0 (0x00) 11 (0x0b)  CRC: 0xDEF09D4B
	-1157622183,	 // (0xbb001659) // 187 (0xbb) 0 (0x00) 22 (0x16) 89 (0x59)  CRC: 0x19CFC761
	-1224730689,	 // (0xb70017bf) // 183 (0xb7) 0 (0x00) 23 (0x17) 191 (0xbf)  CRC: 0xFACA1DCD
	736231424,	 // (0x2be20000) // 43 (0x2b) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0x296166BD
	-1097203707,	 // (0xbe9a0005) // 190 (0xbe) 154 (0x9a) 0 (0x00) 5 (0x05)  CRC: 0x1207D29A
	716188386,	 // (0x2ab02ae2) // 42 (0x2a) 176 (0xb0) 42 (0x2a) 226 (0xe2)  CRC: 0x254B6542
	48794,	 // (0xbe9a) // 0 (0x00) 0 (0x00) 190 (0xbe) 154 (0x9a)  CRC: 0x2FF7E563
	338864,	 // (0x52bb0) // 0 (0x00) 5 (0x05) 43 (0x2b) 176 (0xb0)  CRC: 0x78456877
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xA4F97447
	-1104420352,	 // (0xbe2be200) // 190 (0xbe) 43 (0x2b) 226 (0xe2) 0 (0x00)  CRC: 0x663DA959
	12476604,	 // (0xbe60bc) // 0 (0x00) 190 (0xbe) 96 (0x60) 188 (0xbc)  CRC: 0xDB0F1D4A
	88933182,	 // (0x54d033e) // 5 (0x05) 77 (0x4d) 3 (0x03) 62 (0x3e)  CRC: 0x69FDD1BA
	489349632,	 // (0x1d2ae200) // 29 (0x1d) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xECCA3CAF
	12493312,	 // (0xbea200) // 0 (0x00) 190 (0xbe) 162 (0xa2) 0 (0x00)  CRC: 0xB0E6478A
	321658154,	 // (0x132c1d2a) // 19 (0x13) 44 (0x2c) 29 (0x1d) 42 (0x2a)  CRC: 0x3ADE8676
	-503316451,	 // (0xe200001d) // 226 (0xe2) 0 (0x00) 0 (0x00) 29 (0x1d)  CRC: 0x2AC9B7FC
	877993220,	 // (0x34551d04) // 52 (0x34) 85 (0x55) 29 (0x1d) 4 (0x04)  CRC: 0x6B60C3D7
	1614718975,	 // (0x603ea7ff) // 96 (0x60) 62 (0x3e) 167 (0xa7) 255 (0xff)  CRC: 0xFF451ED3
	-368886243,	 // (0xea033e1d) // 234 (0xea) 3 (0x03) 62 (0x3e) 29 (0x1d)  CRC: 0x86C18E2A
	736231424,	 // (0x2be20000) // 43 (0x2b) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0x57E4B220
	-1096679399,	 // (0xbea20019) // 190 (0xbe) 162 (0xa2) 0 (0x00) 25 (0x19)  CRC: 0x47DE2CB8
	740109026,	 // (0x2c1d2ae2) // 44 (0x2c) 29 (0x1d) 42 (0x2a) 226 (0xe2)  CRC: 0x83E50439
	48736,	 // (0xbe60) // 0 (0x00) 0 (0x00) 190 (0xbe) 96 (0x60)  CRC: 0x29B99DE0
	736231424,	 // (0x2be20000) // 43 (0x2b) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xB048304A
	489968925,	 // (0x1d34551d) // 29 (0x1d) 52 (0x34) 85 (0x55) 29 (0x1d)  CRC: 0x237C5D2C
	73416359,	 // (0x4603ea7) // 4 (0x04) 96 (0x60) 62 (0x3e) 167 (0xa7)  CRC: 0x3C255C9C
	-1787136,	 // (0xffe4bb00) // 255 (0xff) 228 (0xe4) 187 (0xbb) 0 (0x00)  CRC: 0xFAF86D36
	408497155,	 // (0x18592c03) // 24 (0x18) 89 (0x59) 44 (0x2c) 3 (0x03)  CRC: 0x1E6146FD
	750696192,	 // (0x2cbeb700) // 44 (0x2c) 190 (0xbe) 183 (0xb7) 0 (0x00)  CRC: 0x211F9CBA
	430964736,	 // (0x19b00000) // 25 (0x19) 176 (0xb0)  CRC: 0x33631391
	862131089,	// CRC do Jardel: 0x33631391
	0,	//	synchronized?, exception table length
//	6290: endsWith(Ljava/lang/String;)Z
	734461963,	 // (0x2bc7000b) // 43 (0x2b) 199 (0xc7) 0 (0x00) 11 (0x0b)  CRC: 0xDEF09D4B
	-1157622183,	 // (0xbb001659) // 187 (0xbb) 0 (0x00) 22 (0x16) 89 (0x59)  CRC: 0x19CFC761
	-1224730689,	 // (0xb70017bf) // 183 (0xb7) 0 (0x00) 23 (0x17) 191 (0xbf)  CRC: 0xFACA1DCD
	704850658,	 // (0x2a032ae2) // 42 (0x2a) 3 (0x03) 42 (0x2a) 226 (0xe2)  CRC: 0x0BB75692
	48683,	 // (0xbe2b) // 0 (0x00) 0 (0x00) 190 (0xbe) 43 (0x2b)  CRC: 0x7DAAC647
	-503316290,	 // (0xe20000be) // 226 (0xe2) 0 (0x00) 0 (0x00) 190 (0xbe)  CRC: 0x0D43C767
	1680540459,	 // (0x642b032b) // 100 (0x64) 43 (0x2b) 3 (0x03) 43 (0x2b)  CRC: 0x7D6BC53D
	-503316290,	 // (0xe20000be) // 226 (0xe2) 0 (0x00) 0 (0x00) 190 (0xbe)  CRC: 0x2B339D42
	-1241507156,	 // (0xb6001aac) // 182 (0xb6) 0 (0x00) 26 (0x1a) 172 (0xac)  CRC: 0x9B78F050
	-1686572976,	// CRC do Jardel: 0x9B78F050
	0,	//	synchronized?, exception table length
//	6301: equals(Ljava/lang/Object;)Z
	734068760,	 // (0x2bc10018) // 43 (0x2b) 193 (0xc1) 0 (0x00) 24 (0x18)  CRC: 0xAC45BD20
	-1711274749,	 // (0x9a000503) // 154 (0x9a) 0 (0x00) 5 (0x05) 3 (0x03)  CRC: 0xE2F3B16F
	-1406418944,	 // (0xac2bc000) // 172 (0xac) 43 (0x2b) 192 (0xc0) 0 (0x00)  CRC: 0xED5E46EF
	407710434,	 // (0x184d2ae2) // 24 (0x18) 77 (0x4d) 42 (0x2a) 226 (0xe2)  CRC: 0xDDE21CA0
	48684,	 // (0xbe2c) // 0 (0x00) 0 (0x00) 190 (0xbe) 44 (0x2c)  CRC: 0xFA71CCDF
	-503316290,	 // (0xe20000be) // 226 (0xe2) 0 (0x00) 0 (0x00) 190 (0xbe)  CRC: 0x15D334EB
	-1627388669,	 // (0x9f000503) // 159 (0x9f) 0 (0x00) 5 (0x05) 3 (0x03)  CRC: 0x32B9EFFA
	-1406475776,	 // (0xac2ae200) // 172 (0xac) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xF00C899E
	2941440,	 // (0x2ce200) // 0 (0x00) 44 (0x2c) 226 (0xe2) 0 (0x00)  CRC: 0xEDF72ECF
	10878981,	 // (0xa60005) // 0 (0x00) 166 (0xa6) 0 (0x00) 5 (0x05)  CRC: 0xB01EB818
	78392034,	 // (0x4ac2ae2) // 4 (0x04) 172 (0xac) 42 (0x2a) 226 (0xe2)  CRC: 0x9788850D
	48702,	 // (0xbe3e) // 0 (0x00) 0 (0x00) 190 (0xbe) 62 (0x3e)  CRC: 0x6FB874ED
	53871619,	 // (0x3360403) // 3 (0x03) 54 (0x36) 4 (0x04) 3 (0x03)  CRC: 0x6518BBAF
	906304770,	 // (0x36051d02) // 54 (0x36) 5 (0x05) 29 (0x1d) 2 (0x02)  CRC: 0xFBF6749C
	1614683547,	 // (0x603e1d9b) // 96 (0x60) 62 (0x3e) 29 (0x1d) 155 (0x9b)  CRC: 0x417662C9
	2239202,	 // (0x222ae2) // 0 (0x00) 34 (0x22) 42 (0x2a) 226 (0xe2)  CRC: 0x707BFACC
	5380,	 // (0x1504) // 0 (0x00) 0 (0x00) 21 (0x15) 4 (0x04)  CRC: 0x46374649
	352584800,	 // (0x15040460) // 21 (0x15) 4 (0x04) 4 (0x04) 96 (0x60)  CRC: 0xA2DF4D14
	906245164,	 // (0x3604342c) // 54 (0x36) 4 (0x04) 52 (0x34) 44 (0x2c)  CRC: 0xBA91C196
	-503316459,	 // (0xe2000015) // 226 (0xe2) 0 (0x00) 0 (0x00) 21 (0x15)  CRC: 0xBB0024C9
	85263620,	 // (0x5150504) // 5 (0x05) 21 (0x15) 5 (0x05) 4 (0x04)  CRC: 0xD2A449A1
	1614153012,	 // (0x60360534) // 96 (0x60) 54 (0x36) 5 (0x05) 52 (0x34)  CRC: 0x1E1081FD
	-1610621437,	 // (0x9fffde03) // 159 (0x9f) 255 (0xff) 222 (0xde) 3 (0x03)  CRC: 0x85004E05
	-1408979968,	 // (0xac04ac00) // 172 (0xac) 4 (0x04) 172 (0xac)  CRC: 0x6080F9FB
	1619065339,	// CRC do Jardel: 0x6080F9FB
	0,	//	synchronized?, exception table length
//	6327: getBytes()[B
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xF4327CCB
	-1094973364,	 // (0xbebc084c) // 190 (0xbe) 188 (0xbc) 8 (0x08) 76 (0x4c)  CRC: 0x5DA169BB
	54336554,	 // (0x33d1c2a) // 3 (0x03) 61 (0x3d) 28 (0x1c) 42 (0x2a)  CRC: 0x9DDFD2EF
	-503316290,	 // (0xe20000be) // 226 (0xe2) 0 (0x00) 0 (0x00) 190 (0xbe)  CRC: 0x44034A19
	-1577048022,	 // (0xa200282a) // 162 (0xa2) 0 (0x00) 40 (0x28) 42 (0x2a)  CRC: 0xC8CFDC2D
	-503316452,	 // (0xe200001c) // 226 (0xe2) 0 (0x00) 0 (0x00) 28 (0x1c)  CRC: 0x1495ED1B
	873529599,	 // (0x341100ff) // 52 (0x34) 17 (0x11) 0 (0x00) 255 (0xff)  CRC: 0x6FDF24F1
	-1560276949,	 // (0xa300102b) // 163 (0xa3) 0 (0x00) 16 (0x10) 43 (0x2b)  CRC: 0x28C71A5B
	472572416,	 // (0x1c2ae200) // 28 (0x1c) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x349FDDC7
	1848465,	 // (0x1c3491) // 0 (0x00) 28 (0x1c) 52 (0x34) 145 (0x91)  CRC: 0x65665A1B
	1420230664,	 // (0x54a70008) // 84 (0x54) 167 (0xa7) 0 (0x00) 8 (0x08)  CRC: 0xC9E1B522
	723259455,	 // (0x2b1c103f) // 43 (0x2b) 28 (0x1c) 16 (0x10) 63 (0x3f)  CRC: 0xCF6AA8AE
	1411122272,	 // (0x541c0460) // 84 (0x54) 28 (0x1c) 4 (0x04) 96 (0x60)  CRC: 0xBF275C5C
	1034420181,	 // (0x3da7ffd5) // 61 (0x3d) 167 (0xa7) 255 (0xff) 213 (0xd5)  CRC: 0x54C7763F
	732954624,	 // (0x2bb00000) // 43 (0x2b) 176 (0xb0)  CRC: 0xBC8D72F8
	-1131580680,	// CRC do Jardel: 0xBC8D72F8
	0,	//	synchronized?, exception table length
//	6344: getBytes(Ljava/lang/String;)[B
	733347846,	 // (0x2bb60006) // 43 (0x2b) 182 (0xb6) 0 (0x00) 6 (0x06)  CRC: 0x242FD356
	1277891076,	 // (0x4c2b1204) // 76 (0x4c) 43 (0x2b) 18 (0x12) 4 (0x04)  CRC: 0xDEE233D7
	-1241512038,	 // (0xb600079a) // 182 (0xb6) 0 (0x00) 7 (0x07) 154 (0x9a)  CRC: 0xE04919AD
	899840,	 // (0xdbb00) // 0 (0x00) 13 (0x0d) 187 (0xbb) 0 (0x00)  CRC: 0xB7D8E200
	140055067,	 // (0x859121b) // 8 (0x08) 89 (0x59) 18 (0x12) 27 (0x1b)  CRC: 0x32CC7401
	-1224729409,	 // (0xb7001cbf) // 183 (0xb7) 0 (0x00) 28 (0x1c) 191 (0xbf)  CRC: 0xEB4BF989
	716570653,	 // (0x2ab6001d) // 42 (0x2a) 182 (0xb6) 0 (0x00) 29 (0x1d)  CRC: 0xD0CD3304
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0xFEC0914C
	-20934324,	// CRC do Jardel: 0xFEC0914C
	0,	//	synchronized?, exception table length
//	6354: getChars(II[CI)V
	463142929,	 // (0x1b9b0011) // 27 (0x1b) 155 (0x9b) 0 (0x00) 17 (0x11)  CRC: 0x265DF80F
	454861568,	 // (0x1b1ca300) // 27 (0x1b) 28 (0x1c) 163 (0xa3) 0 (0x00)  CRC: 0x65AA9920
	203172578,	 // (0xc1c2ae2) // 12 (0x0c) 28 (0x1c) 42 (0x2a) 226 (0xe2)  CRC: 0xEEAC959F
	48804,	 // (0xbea4) // 0 (0x00) 0 (0x00) 190 (0xbe) 164 (0xa4)  CRC: 0x926A9425
	768768,	 // (0xbbb00) // 0 (0x00) 11 (0x0b) 187 (0xbb) 0 (0x00)  CRC: 0xCB7B9DF8
	173651712,	 // (0xa59b700) // 10 (0x0a) 89 (0x59) 183 (0xb7) 0 (0x00)  CRC: 0x7B666052
	515834678,	 // (0x1ebf0336) // 30 (0x1e) 191 (0xbf) 3 (0x03) 54 (0x36)  CRC: 0xAC7388AA
	85263644,	 // (0x515051c) // 5 (0x05) 21 (0x15) 5 (0x05) 28 (0x1c)  CRC: 0xA9B4CF12
	459579904,	 // (0x1b64a200) // 27 (0x1b) 100 (0x64) 162 (0xa2) 0 (0x00)  CRC: 0x08945803
	472716548,	 // (0x1c2d1504) // 28 (0x1c) 45 (0x2d) 21 (0x15) 4 (0x04)  CRC: 0xFA467CC9
	352673834,	 // (0x1505602a) // 21 (0x15) 5 (0x05) 96 (0x60) 42 (0x2a)  CRC: 0xB2556863
	-503316453,	 // (0xe200001b) // 226 (0xe2) 0 (0x00) 0 (0x00) 27 (0x1b)  CRC: 0x82F36A1B
	352673844,	 // (0x15056034) // 21 (0x15) 5 (0x05) 96 (0x60) 52 (0x34)  CRC: 0x68AD8BA2
	1427440900,	 // (0x55150504) // 85 (0x55) 21 (0x15) 5 (0x05) 4 (0x04)  CRC: 0x0DDFA780
	1614153127,	 // (0x603605a7) // 96 (0x60) 54 (0x36) 5 (0x05) 167 (0xa7)  CRC: 0x0611F817
	-1920768,	 // (0xffe2b100) // 255 (0xff) 226 (0xe2) 177 (0xb1)  CRC: 0xCEE63A33
	-823772621,	// CRC do Jardel: 0xCEE63A33
	0,	//	synchronized?, exception table length
//	6372: hashCode()I
	54274786,	 // (0x33c2ae2) // 3 (0x03) 60 (0x3c) 42 (0x2a) 226 (0xe2)  CRC: 0xE5BA87A1
	48701,	 // (0xbe3d) // 0 (0x00) 0 (0x00) 190 (0xbe) 61 (0x3d)  CRC: 0x3EC447A6
	54402332,	 // (0x33e1d1c) // 3 (0x03) 62 (0x3e) 29 (0x1d) 28 (0x1c)  CRC: 0x11167235
	-1577052645,	 // (0xa200161b) // 162 (0xa2) 0 (0x00) 22 (0x16) 27 (0x1b)  CRC: 0xAFEC843E
	270493738,	 // (0x101f682a) // 16 (0x10) 31 (0x1f) 104 (0x68) 42 (0x2a)  CRC: 0x239953D3
	-503316451,	 // (0xe200001d) // 226 (0xe2) 0 (0x00) 0 (0x00) 29 (0x1d)  CRC: 0x29360C60
	878722077,	 // (0x34603c1d) // 52 (0x34) 96 (0x60) 60 (0x3c) 29 (0x1d)  CRC: 0xA966FF2B
	73416359,	 // (0x4603ea7) // 4 (0x04) 96 (0x60) 62 (0x3e) 167 (0xa7)  CRC: 0xD35704A0
	-1369172,	 // (0xffeb1bac) // 255 (0xff) 235 (0xeb) 27 (0x1b) 172 (0xac)  CRC: 0x483CC3E2
	1211941858,	// CRC do Jardel: 0x483CC3E2
	0,	//	synchronized?, exception table length
//	6383: indexOf(I)I
	706413494,	 // (0x2a1b03b6) // 42 (0x2a) 27 (0x1b) 3 (0x03) 182 (0xb6)  CRC: 0x26C620BE
	2075648,	 // (0x1fac00) // 0 (0x00) 31 (0x1f) 172 (0xac)  CRC: 0x66891352
	1720259410,	// CRC do Jardel: 0x66891352
	0,	//	synchronized?, exception table length
//	6387: indexOf(II)I
	462560159,	 // (0x1b921b9f) // 27 (0x1b) 146 (0x92) 27 (0x1b) 159 (0x9f)  CRC: 0xF0C9E28B
	328364,	 // (0x502ac) // 0 (0x00) 5 (0x05) 2 (0x02) 172 (0xac)  CRC: 0xA3284D0F
	479985669,	 // (0x1c9c0005) // 28 (0x1c) 156 (0x9c) 0 (0x00) 5 (0x05)  CRC: 0xF9E0F85A
	54336574,	 // (0x33d1c3e) // 3 (0x03) 61 (0x3d) 28 (0x1c) 62 (0x3e)  CRC: 0xD09BB07E
	472572416,	 // (0x1c2ae200) // 28 (0x1c) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xC208522B
	12493312,	 // (0xbea200) // 0 (0x00) 190 (0xbe) 162 (0xa2) 0 (0x00)  CRC: 0x8EB5F64F
	439017984,	 // (0x1a2ae200) // 26 (0x1a) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x82ECE2BE
	1907972,	 // (0x1d1d04) // 0 (0x00) 29 (0x1d) 29 (0x1d) 4 (0x04)  CRC: 0x143CC62B
	1614689307,	 // (0x603e341b) // 96 (0x60) 62 (0x3e) 52 (0x34) 27 (0x1b)  CRC: 0x8D10E3FC
	-1610611428,	 // (0xa000051c) // 160 (0xa0) 0 (0x00) 5 (0x05) 28 (0x1c)  CRC: 0x4AB6B1A0
	-1407450016,	 // (0xac1c0460) // 172 (0xac) 28 (0x1c) 4 (0x04) 96 (0x60)  CRC: 0xEC3762C1
	1034420195,	 // (0x3da7ffe3) // 61 (0x3d) 167 (0xa7) 255 (0xff) 227 (0xe3)  CRC: 0x999352D5
	44826624,	 // (0x2ac0000) // 2 (0x02) 172 (0xac)  CRC: 0x14BA9283
	347771523,	// CRC do Jardel: 0x14BA9283
	0,	//	synchronized?, exception table length
//	6402: indexOf(Ljava/lang/String;)I
	707462070,	 // (0x2a2b03b6) // 42 (0x2a) 43 (0x2b) 3 (0x03) 182 (0xb6)  CRC: 0x16348D8B
	2141184,	 // (0x20ac00) // 0 (0x00) 32 (0x20) 172 (0xac)  CRC: 0x35FFC0A1
	905953441,	// CRC do Jardel: 0x35FFC0A1
	0,	//	synchronized?, exception table length
//	6406: indexOf(Ljava/lang/String;I)I
	479985669,	 // (0x1c9c0005) // 28 (0x1c) 156 (0x9c) 0 (0x00) 5 (0x05)  CRC: 0x8434B7D6
	54340322,	 // (0x33d2ae2) // 3 (0x03) 61 (0x3d) 42 (0x2a) 226 (0xe2)  CRC: 0x42E1D065
	48683,	 // (0xbe2b) // 0 (0x00) 0 (0x00) 190 (0xbe) 43 (0x2b)  CRC: 0x16E99C3F
	-503316290,	 // (0xe20000be) // 226 (0xe2) 0 (0x00) 0 (0x00) 190 (0xbe)  CRC: 0x667735B3
	1681792029,	 // (0x643e1c1d) // 100 (0x64) 62 (0x3e) 28 (0x1c) 29 (0x1d)  CRC: 0xE39EF69F
	-1560274134,	 // (0xa3001b2a) // 163 (0xa3) 0 (0x00) 27 (0x1b) 42 (0x2a)  CRC: 0x4F4EA25D
	472580907,	 // (0x1c2b032b) // 28 (0x1c) 43 (0x2b) 3 (0x03) 43 (0x2b)  CRC: 0xD3C1F614
	-503316290,	 // (0xe20000be) // 226 (0xe2) 0 (0x00) 0 (0x00) 190 (0xbe)  CRC: 0x7CFD4027
	-1241505383,	 // (0xb6002199) // 182 (0xb6) 0 (0x00) 33 (0x21) 153 (0x99)  CRC: 0xD34E0B7A
	335020,	 // (0x51cac) // 0 (0x00) 5 (0x05) 28 (0x1c) 172 (0xac)  CRC: 0xE1361A1D
	470048829,	 // (0x1c04603d) // 28 (0x1c) 4 (0x04) 96 (0x60) 61 (0x3d)  CRC: 0x11822C16
	-1476401662,	 // (0xa7ffe602) // 167 (0xa7) 255 (0xff) 230 (0xe6) 2 (0x02)  CRC: 0xC5B07C2C
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0xCA702386
	-898620538,	// CRC do Jardel: 0xCA702386
	0,	//	synchronized?, exception table length
//	6421: lastIndexOf(I)I
	706423522,	 // (0x2a1b2ae2) // 42 (0x2a) 27 (0x1b) 42 (0x2a) 226 (0xe2)  CRC: 0x483C8912
	48644,	 // (0xbe04) // 0 (0x00) 0 (0x00) 190 (0xbe) 4 (0x04)  CRC: 0x24A5E4DC
	1689649186,	 // (0x64b60022) // 100 (0x64) 182 (0xb6) 0 (0x00) 34 (0x22)  CRC: 0x7BC5A0B1
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x16471EA5
	373759653,	// CRC do Jardel: 0x16471EA5
	0,	//	synchronized?, exception table length
//	6427: lastIndexOf(II)I
	462560159,	 // (0x1b921b9f) // 27 (0x1b) 146 (0x92) 27 (0x1b) 159 (0x9f)  CRC: 0xF0C9E28B
	328364,	 // (0x502ac) // 0 (0x00) 5 (0x05) 2 (0x02) 172 (0xac)  CRC: 0xA3284D0F
	472572416,	 // (0x1c2ae200) // 28 (0x1c) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xAC094F4D
	12493056,	 // (0xbea100) // 0 (0x00) 190 (0xbe) 161 (0xa1) 0 (0x00)  CRC: 0x34FC3622
	187359744,	 // (0xb2ae200) // 11 (0x0b) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x1343DF0A
	12452964,	 // (0xbe0464) // 0 (0x00) 190 (0xbe) 4 (0x04) 100 (0x64)  CRC: 0x3F3A2E59
	1025261084,	 // (0x3d1c3e1c) // 61 (0x3d) 28 (0x1c) 62 (0x3e) 28 (0x1c)  CRC: 0xA25DC5F2
	-1694492118,	 // (0x9b001a2a) // 155 (0x9b) 0 (0x00) 26 (0x1a) 42 (0x2a)  CRC: 0xF6B7A17B
	-503316451,	 // (0xe200001d) // 226 (0xe2) 0 (0x00) 0 (0x00) 29 (0x1d)  CRC: 0xBCA179AB
	1493460030,	 // (0x5904643e) // 89 (0x59) 4 (0x04) 100 (0x64) 62 (0x3e)  CRC: 0x6AC0CD26
	874225664,	 // (0x341ba000) // 52 (0x34) 27 (0x1b) 160 (0xa0) 0 (0x00)  CRC: 0x40EAA728
	85765148,	 // (0x51cac1c) // 5 (0x05) 28 (0x1c) 172 (0xac) 28 (0x1c)  CRC: 0x32D3FA34
	39861671,	 // (0x2603da7) // 2 (0x02) 96 (0x60) 61 (0x3d) 167 (0xa7)  CRC: 0x2CC70572
	-1572180,	 // (0xffe802ac) // 255 (0xff) 232 (0xe8) 2 (0x02) 172 (0xac)  CRC: 0x9CFC062E
	-1661204946,	// CRC do Jardel: 0x9CFC062E
	0,	//	synchronized?, exception table length
//	6443: length()I
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xF4327CCB
	-1096024064,	 // (0xbeac0000) // 190 (0xbe) 172 (0xac)  CRC: 0x1739D2CA
	389665482,	// CRC do Jardel: 0x1739D2CA
	0,	//	synchronized?, exception table length
//	6447: regionMatches(ZILjava/lang/String;II)Z
	479920161,	 // (0x1c9b0021) // 28 (0x1c) 155 (0x9b) 0 (0x00) 33 (0x21)  CRC: 0x25E7C358
	352623360,	 // (0x15049b00) // 21 (0x15) 4 (0x04) 155 (0x9b) 0 (0x00)  CRC: 0xE22C033D
	471602437,	 // (0x1c1c1505) // 28 (0x1c) 28 (0x1c) 21 (0x15) 5 (0x05)  CRC: 0x99288891
	1613423104,	 // (0x602ae200) // 96 (0x60) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x6CD8DD7A
	12493568,	 // (0xbea300) // 0 (0x00) 190 (0xbe) 163 (0xa3) 0 (0x00)  CRC: 0x3ECD24C2
	269812757,	 // (0x10150415) // 16 (0x10) 21 (0x15) 4 (0x04) 21 (0x15)  CRC: 0x1CE6DA04
	90189282,	 // (0x5602de2) // 5 (0x05) 96 (0x60) 45 (0x2d) 226 (0xe2)  CRC: 0x59D97C7A
	48804,	 // (0xbea4) // 0 (0x00) 0 (0x00) 190 (0xbe) 164 (0xa4)  CRC: 0x0AA916A4
	328620,	 // (0x503ac) // 0 (0x00) 5 (0x05) 3 (0x03) 172 (0xac)  CRC: 0xD6461574
	352649824,	 // (0x15050260) // 21 (0x15) 5 (0x05) 2 (0x02) 96 (0x60)  CRC: 0xB288E17C
	906302725,	 // (0x36051505) // 54 (0x36) 5 (0x05) 21 (0x15) 5 (0x05)  CRC: 0xE37B5C8D
	-1694480342,	 // (0x9b00482a) // 155 (0x9b) 0 (0x00) 72 (0x48) 42 (0x2a)  CRC: 0xBE68018A
	-503316452,	 // (0xe200001c) // 226 (0xe2) 0 (0x00) 0 (0x00) 28 (0x1c)  CRC: 0xEB5A6CDE
	470048829,	 // (0x1c04603d) // 28 (0x1c) 4 (0x04) 96 (0x60) 61 (0x3d)  CRC: 0xD440335E
	875955757,	 // (0x3436062d) // 52 (0x34) 54 (0x36) 6 (0x06) 45 (0x2d)  CRC: 0x2965FE41
	-503316459,	 // (0xe2000015) // 226 (0xe2) 0 (0x00) 0 (0x00) 21 (0x15)  CRC: 0xB3AC8524
	68486148,	 // (0x4150404) // 4 (0x04) 21 (0x15) 4 (0x04) 4 (0x04)  CRC: 0x74E1EA17
	1614152756,	 // (0x60360434) // 96 (0x60) 54 (0x36) 4 (0x04) 52 (0x34)  CRC: 0x94C57CB0
	906433798,	 // (0x36071506) // 54 (0x36) 7 (0x07) 21 (0x15) 6 (0x06)  CRC: 0x9082E2F3
	352820992,	 // (0x15079f00) // 21 (0x15) 7 (0x07) 159 (0x9f) 0 (0x00)  CRC: 0xEF7CAB21
	589011200,	 // (0x231b9900) // 35 (0x23) 27 (0x1b) 153 (0x99) 0 (0x00)  CRC: 0x645A2F20
	487917240,	 // (0x1d1506b8) // 29 (0x1d) 21 (0x15) 6 (0x06) 184 (0xb8)  CRC: 0x984FF05B
	2299143,	 // (0x231507) // 0 (0x00) 35 (0x23) 21 (0x15) 7 (0x07)  CRC: 0x20E3B22B
	-1207950433,	 // (0xb800239f) // 184 (0xb8) 0 (0x00) 35 (0x23) 159 (0x9f)  CRC: 0xFEDCA48B
	1185030,	 // (0x121506) // 0 (0x00) 18 (0x12) 21 (0x15) 6 (0x06)  CRC: 0x136D156B
	-1207950315,	 // (0xb8002415) // 184 (0xb8) 0 (0x00) 36 (0x24) 21 (0x15)  CRC: 0x226D9BF5
	129499172,	 // (0x7b80024) // 7 (0x07) 184 (0xb8) 0 (0x00) 36 (0x24)  CRC: 0x57DC00CD
	-1627388669,	 // (0x9f000503) // 159 (0x9f) 0 (0x00) 5 (0x05) 3 (0x03)  CRC: 0xA30D0315
	-1398276173,	 // (0xaca7ffb3) // 172 (0xac) 167 (0xa7) 255 (0xff) 179 (0xb3)  CRC: 0x30BBFC1B
	78381056,	 // (0x4ac0000) // 4 (0x04) 172 (0xac)  CRC: 0xFED17061
	-19828639,	// CRC do Jardel: 0xFED17061
	0,	//	synchronized?, exception table length
//	6479: replace(CC)Ljava/lang/String;
	454860800,	 // (0x1b1ca000) // 27 (0x1b) 28 (0x1c) 160 (0xa0) 0 (0x00)  CRC: 0x6F243A99
	86683690,	 // (0x52ab02a) // 5 (0x05) 42 (0x2a) 176 (0xb0) 42 (0x2a)  CRC: 0x877544E2
	-503316290,	 // (0xe20000be) // 226 (0xe2) 0 (0x00) 0 (0x00) 190 (0xbe)  CRC: 0x6A1643C1
	1040332292,	 // (0x3e023604) // 62 (0x3e) 2 (0x02) 54 (0x36) 4 (0x04)  CRC: 0x1B4257B6
	486694974,	 // (0x1d02603e) // 29 (0x1d) 2 (0x02) 96 (0x60) 62 (0x3e)  CRC: 0x6E9BD3E8
	496697367,	 // (0x1d9b0017) // 29 (0x1d) 155 (0x9b) 0 (0x00) 23 (0x17)  CRC: 0x416A5A87
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xB5E060D6
	352584800,	 // (0x15040460) // 21 (0x15) 4 (0x04) 4 (0x04) 96 (0x60)  CRC: 0xF27BDB66
	906237188,	 // (0x36041504) // 54 (0x36) 4 (0x04) 21 (0x15) 4 (0x04)  CRC: 0xFB442524
	874225919,	 // (0x341ba0ff) // 52 (0x34) 27 (0x1b) 160 (0xa0) 255 (0xff)  CRC: 0xC9828608
	-358154237,	 // (0xeaa70003) // 234 (0xea) 167 (0xa7) 0 (0x00) 3 (0x03)  CRC: 0xE373EDF8
	496762885,	 // (0x1d9c0005) // 29 (0x1d) 156 (0x9c) 0 (0x00) 5 (0x05)  CRC: 0x7EEF4E0B
	716188386,	 // (0x2ab02ae2) // 42 (0x2a) 176 (0xb0) 42 (0x2a) 226 (0xe2)  CRC: 0x486EF628
	48828,	 // (0xbebc) // 0 (0x00) 0 (0x00) 190 (0xbe) 188 (0xbc)  CRC: 0x39CFDD30
	87688451,	 // (0x53a0503) // 5 (0x05) 58 (0x3a) 5 (0x05) 3 (0x03)  CRC: 0xD8557E84
	906368262,	 // (0x36061506) // 54 (0x36) 6 (0x06) 21 (0x15) 6 (0x06)  CRC: 0x808F69C6
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xCBF42434
	-1096679400,	 // (0xbea20018) // 190 (0xbe) 162 (0xa2) 0 (0x00) 24 (0x18)  CRC: 0x7ACAEB4F
	419763462,	 // (0x19051506) // 25 (0x19) 5 (0x05) 21 (0x15) 6 (0x06)  CRC: 0x2B2E3E26
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0x6B8CA507
	352728149,	 // (0x15063455) // 21 (0x15) 6 (0x06) 52 (0x34) 85 (0x55)  CRC: 0x75A3B9DF
	352715872,	 // (0x15060460) // 21 (0x15) 6 (0x06) 4 (0x04) 96 (0x60)  CRC: 0xF83D612E
	906405887,	 // (0x3606a7ff) // 54 (0x36) 6 (0x06) 167 (0xa7) 255 (0xff)  CRC: 0xDC195A75
	-468122347,	 // (0xe4190515) // 228 (0xe4) 25 (0x19) 5 (0x05) 21 (0x15)  CRC: 0x542EA417
	68965661,	 // (0x41c551d) // 4 (0x04) 28 (0x1c) 85 (0x55) 29 (0x1d)  CRC: 0xD1E8B15F
	39861789,	 // (0x2603e1d) // 2 (0x02) 96 (0x60) 62 (0x3e) 29 (0x1d)  CRC: 0x3916FBAA
	-1694491350,	 // (0x9b001d2a) // 155 (0x9b) 0 (0x00) 29 (0x1d) 42 (0x2a)  CRC: 0x40A77B3B
	-503316459,	 // (0xe2000015) // 226 (0xe2) 0 (0x00) 0 (0x00) 21 (0x15)  CRC: 0xEE9299AF
	67395638,	 // (0x4046036) // 4 (0x04) 4 (0x04) 96 (0x60) 54 (0x36)  CRC: 0x939406FC
	68486196,	 // (0x4150434) // 4 (0x04) 21 (0x15) 4 (0x04) 52 (0x34)  CRC: 0x6C5BDA06
	463536106,	 // (0x1ba0ffea) // 27 (0x1b) 160 (0xa0) 255 (0xff) 234 (0xea)  CRC: 0x90FA793A
	419763460,	 // (0x19051504) // 25 (0x19) 5 (0x05) 21 (0x15) 4 (0x04)  CRC: 0xAC19BE0D
	475375615,	 // (0x1c55a7ff) // 28 (0x1c) 85 (0x55) 167 (0xa7) 255 (0xff)  CRC: 0xD5B5C316
	-507838440,	 // (0xe1bb0018) // 225 (0xe1) 187 (0xbb) 0 (0x00) 24 (0x18)  CRC: 0x8EF7C95C
	1494811907,	 // (0x59190503) // 89 (0x59) 25 (0x19) 5 (0x05) 3 (0x03)  CRC: 0x849954D7
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xCB0F8386
	-1095303143,	 // (0xbeb70019) // 190 (0xbe) 183 (0xb7) 0 (0x00) 25 (0x19)  CRC: 0xB0D9872B
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0x88E462DD
	-1998298403,	// CRC do Jardel: 0x88E462DD
	0,	//	synchronized?, exception table length
//	6519: regionMatches(ILjava/lang/String;II)Z
	463142943,	 // (0x1b9b001f) // 27 (0x1b) 155 (0x9b) 0 (0x00) 31 (0x1f)  CRC: 0x1F5804D9
	496697371,	 // (0x1d9b001b) // 29 (0x1d) 155 (0x9b) 0 (0x00) 27 (0x1b)  CRC: 0x7845596B
	454362208,	 // (0x1b150460) // 27 (0x1b) 21 (0x15) 4 (0x04) 96 (0x60)  CRC: 0x17932BBE
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xB5A1D6A9
	-1096613873,	 // (0xbea3000f) // 190 (0xbe) 163 (0xa3) 0 (0x00) 15 (0x0f)  CRC: 0x9CAF3302
	487916640,	 // (0x1d150460) // 29 (0x1d) 21 (0x15) 4 (0x04) 96 (0x60)  CRC: 0x85D3BF89
	753008640,	 // (0x2ce20000) // 44 (0x2c) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0x2968DD0B
	-1096548347,	 // (0xbea40005) // 190 (0xbe) 164 (0xa4) 0 (0x00) 5 (0x05)  CRC: 0xAF13E204
	61609220,	 // (0x3ac1504) // 3 (0x03) 172 (0xac) 21 (0x15) 4 (0x04)  CRC: 0xE1DE7A27
	39859716,	 // (0x2603604) // 2 (0x02) 96 (0x60) 54 (0x36) 4 (0x04)  CRC: 0x27243056
	352623360,	 // (0x15049b00) // 21 (0x15) 4 (0x04) 155 (0x9b) 0 (0x00)  CRC: 0x7B7F5A15
	657121792,	 // (0x272ae200) // 39 (0x27) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x00D4B7B7
	1776388,	 // (0x1b1b04) // 0 (0x00) 27 (0x1b) 27 (0x1b) 4 (0x04)  CRC: 0x237C5CD6
	1614558262,	 // (0x603c3436) // 96 (0x60) 60 (0x3c) 52 (0x34) 54 (0x36)  CRC: 0xE93F244F
	86827520,	 // (0x52ce200) // 5 (0x05) 44 (0x2c) 226 (0xe2) 0 (0x00)  CRC: 0xA657DC64
	1907972,	 // (0x1d1d04) // 0 (0x00) 29 (0x1d) 29 (0x1d) 4 (0x04)  CRC: 0x25388A80
	1614689334,	 // (0x603e3436) // 96 (0x60) 62 (0x3e) 52 (0x34) 54 (0x36)  CRC: 0xAC373B94
	102040853,	 // (0x6150515) // 6 (0x06) 21 (0x15) 5 (0x05) 21 (0x15)  CRC: 0xD8109F4E
	111083525,	 // (0x69f0005) // 6 (0x06) 159 (0x9f) 0 (0x00) 5 (0x05)  CRC: 0xD6979BEC
	61646847,	 // (0x3aca7ff) // 3 (0x03) 172 (0xac) 167 (0xa7) 255 (0xff)  CRC: 0x132A5457
	-737891328,	 // (0xd404ac00) // 212 (0xd4) 4 (0x04) 172 (0xac)  CRC: 0x4ABE0637
	1253967415,	// CRC do Jardel: 0x4ABE0637
	0,	//	synchronized?, exception table length
//	6542: startsWith(Ljava/lang/String;I)Z
	704846891,	 // (0x2a031c2b) // 42 (0x2a) 3 (0x03) 28 (0x1c) 43 (0x2b)  CRC: 0xA21B4D24
	53207552,	 // (0x32be200) // 3 (0x03) 43 (0x2b) 226 (0xe2) 0 (0x00)  CRC: 0x41BDA273
	12498432,	 // (0xbeb600) // 0 (0x00) 190 (0xbe) 182 (0xb6) 0 (0x00)  CRC: 0x33185985
	447479808,	 // (0x1aac0000) // 26 (0x1a) 172 (0xac)  CRC: 0x17920AC3
	395446979,	// CRC do Jardel: 0x17920AC3
	0,	//	synchronized?, exception table length
//	6548: startsWith(Ljava/lang/String;)Z
	704840491,	 // (0x2a03032b) // 42 (0x2a) 3 (0x03) 3 (0x03) 43 (0x2b)  CRC: 0xB45FA6F9
	53207552,	 // (0x32be200) // 3 (0x03) 43 (0x2b) 226 (0xe2) 0 (0x00)  CRC: 0x3C932B99
	12498432,	 // (0xbeb600) // 0 (0x00) 190 (0xbe) 182 (0xb6) 0 (0x00)  CRC: 0xA7795949
	447479808,	 // (0x1aac0000) // 26 (0x1a) 172 (0xac)  CRC: 0x1EF54022
	519389218,	// CRC do Jardel: 0x1EF54022
	0,	//	synchronized?, exception table length
//	6554: subSequence(II)Ljava/lang/CharSequence;
	706419894,	 // (0x2a1b1cb6) // 42 (0x2a) 27 (0x1b) 28 (0x1c) 182 (0xb6)  CRC: 0x3082CB63
	2469888,	 // (0x25b000) // 0 (0x00) 37 (0x25) 176 (0xb0)  CRC: 0x15C2F484
	365098116,	// CRC do Jardel: 0x15C2F484
	0,	//	synchronized?, exception table length
//	6558: substring(I)Ljava/lang/String;
	706423522,	 // (0x2a1b2ae2) // 42 (0x2a) 27 (0x1b) 42 (0x2a) 226 (0xe2)  CRC: 0x483C8912
	48822,	 // (0xbeb6) // 0 (0x00) 0 (0x00) 190 (0xbe) 182 (0xb6)  CRC: 0x23A49A4A
	2469888,	 // (0x25b000) // 0 (0x00) 37 (0x25) 176 (0xb0)  CRC: 0x848360D7
	-2071764777,	// CRC do Jardel: 0x848360D7
	0,	//	synchronized?, exception table length
//	6563: substring(II)Ljava/lang/String;
	463142929,	 // (0x1b9b0011) // 27 (0x1b) 155 (0x9b) 0 (0x00) 17 (0x11)  CRC: 0x265DF80F
	472572416,	 // (0x1c2ae200) // 28 (0x1c) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xD93A56F1
	12493568,	 // (0xbea300) // 0 (0x00) 190 (0xbe) 163 (0xa3) 0 (0x00)  CRC: 0xBFFFE007
	135994532,	 // (0x81b1ca4) // 8 (0x08) 27 (0x1b) 28 (0x1c) 164 (0xa4)  CRC: 0xFE5CB833
	768768,	 // (0xbbb00) // 0 (0x00) 11 (0x0b) 187 (0xbb) 0 (0x00)  CRC: 0xEE8AEECE
	173651712,	 // (0xa59b700) // 10 (0x0a) 89 (0x59) 183 (0xb7) 0 (0x00)  CRC: 0x41C6D8CE
	515840922,	 // (0x1ebf1b9a) // 30 (0x1e) 191 (0xbf) 27 (0x1b) 154 (0x9a)  CRC: 0xD14515E5
	924714,	 // (0xe1c2a) // 0 (0x00) 14 (0x0e) 28 (0x1c) 42 (0x2a)  CRC: 0xADB707F1
	-503316290,	 // (0xe20000be) // 226 (0xe2) 0 (0x00) 0 (0x00) 190 (0xbe)  CRC: 0x2E3C409B
	-1610611414,	 // (0xa000052a) // 160 (0xa0) 0 (0x00) 5 (0x05) 42 (0x2a)  CRC: 0xEB481697
	-1340335260,	 // (0xb01c1b64) // 176 (0xb0) 28 (0x1c) 27 (0x1b) 100 (0x64)  CRC: 0x86987CFD
	1052442648,	 // (0x3ebb0018) // 62 (0x3e) 187 (0xbb) 0 (0x00) 24 (0x18)  CRC: 0x33227F4E
	1495982592,	 // (0x592ae200) // 89 (0x59) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x738B2723
	1777079,	 // (0x1b1db7) // 0 (0x00) 27 (0x1b) 29 (0x1d) 183 (0xb7)  CRC: 0x94F1DE58
	1683456,	 // (0x19b000) // 0 (0x00) 25 (0x19) 176 (0xb0)  CRC: 0xF06E5DED
	-261202451,	// CRC do Jardel: 0xF06E5DED
	0,	//	synchronized?, exception table length
//	6580: toCharArray()[C
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xF4327CCB
	-1094974132,	 // (0xbebc054c) // 190 (0xbe) 188 (0xbc) 5 (0x05) 76 (0x4c)  CRC: 0x55DE1318
	54336554,	 // (0x33d1c2a) // 3 (0x03) 61 (0x3d) 28 (0x1c) 42 (0x2a)  CRC: 0x982D7CEB
	-503316290,	 // (0xe20000be) // 226 (0xe2) 0 (0x00) 0 (0x00) 190 (0xbe)  CRC: 0x857D9BE3
	-1577053397,	 // (0xa200132b) // 162 (0xa2) 0 (0x00) 19 (0x13) 43 (0x2b)  CRC: 0x681B8BFA
	472572416,	 // (0x1c2ae200) // 28 (0x1c) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xDEF6F868
	1848405,	 // (0x1c3455) // 0 (0x00) 28 (0x1c) 52 (0x34) 85 (0x55)  CRC: 0x8A57A443
	470048829,	 // (0x1c04603d) // 28 (0x1c) 4 (0x04) 96 (0x60) 61 (0x3d)  CRC: 0x66FA4F25
	-1476400597,	 // (0xa7ffea2b) // 167 (0xa7) 255 (0xff) 234 (0xea) 43 (0x2b)  CRC: 0x471BB8B0
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0xE4810100
	-461307648,	// CRC do Jardel: 0xE4810100
	0,	//	synchronized?, exception table length
//	6592: toLowerCase()Ljava/lang/String;
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xF4327CCB
	-1094974132,	 // (0xbebc054c) // 190 (0xbe) 188 (0xbc) 5 (0x05) 76 (0x4c)  CRC: 0x55DE1318
	54336554,	 // (0x33d1c2a) // 3 (0x03) 61 (0x3d) 28 (0x1c) 42 (0x2a)  CRC: 0x982D7CEB
	-503316290,	 // (0xe20000be) // 226 (0xe2) 0 (0x00) 0 (0x00) 190 (0xbe)  CRC: 0x857D9BE3
	-1577052629,	 // (0xa200162b) // 162 (0xa2) 0 (0x00) 22 (0x16) 43 (0x2b)  CRC: 0x6EA19561
	472572416,	 // (0x1c2ae200) // 28 (0x1c) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xA83D2D8A
	1848504,	 // (0x1c34b8) // 0 (0x00) 28 (0x1c) 52 (0x34) 184 (0xb8)  CRC: 0x5C64BFCD
	2315548,	 // (0x23551c) // 0 (0x00) 35 (0x23) 85 (0x55) 28 (0x1c)  CRC: 0xC7A25378
	73416103,	 // (0x4603da7) // 4 (0x04) 96 (0x60) 61 (0x3d) 167 (0xa7)  CRC: 0x56490A9C
	-1590528,	 // (0xffe7bb00) // 255 (0xff) 231 (0xe7) 187 (0xbb) 0 (0x00)  CRC: 0x06417B6F
	408497079,	 // (0x18592bb7) // 24 (0x18) 89 (0x59) 43 (0x2b) 183 (0xb7)  CRC: 0x599EA525
	2535424,	 // (0x26b000) // 0 (0x00) 38 (0x26) 176 (0xb0)  CRC: 0x4D02FA41
	1292040769,	// CRC do Jardel: 0x4D02FA41
	0,	//	synchronized?, exception table length
//	6606: toString()Ljava/lang/String;
	716177408,	 // (0x2ab00000) // 42 (0x2a) 176 (0xb0)  CRC: 0x05D7159B
	97981851,	// CRC do Jardel: 0x05D7159B
	0,	//	synchronized?, exception table length
//	6609: toUpperCase()Ljava/lang/String;
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xF4327CCB
	-1094974132,	 // (0xbebc054c) // 190 (0xbe) 188 (0xbc) 5 (0x05) 76 (0x4c)  CRC: 0x55DE1318
	54336554,	 // (0x33d1c2a) // 3 (0x03) 61 (0x3d) 28 (0x1c) 42 (0x2a)  CRC: 0x982D7CEB
	-503316290,	 // (0xe20000be) // 226 (0xe2) 0 (0x00) 0 (0x00) 190 (0xbe)  CRC: 0x857D9BE3
	-1577052629,	 // (0xa200162b) // 162 (0xa2) 0 (0x00) 22 (0x16) 43 (0x2b)  CRC: 0x6EA19561
	472572416,	 // (0x1c2ae200) // 28 (0x1c) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xA83D2D8A
	1848504,	 // (0x1c34b8) // 0 (0x00) 28 (0x1c) 52 (0x34) 184 (0xb8)  CRC: 0x5C64BFCD
	2381084,	 // (0x24551c) // 0 (0x00) 36 (0x24) 85 (0x55) 28 (0x1c)  CRC: 0xF06D2D02
	73416103,	 // (0x4603da7) // 4 (0x04) 96 (0x60) 61 (0x3d) 167 (0xa7)  CRC: 0x179128F4
	-1590528,	 // (0xffe7bb00) // 255 (0xff) 231 (0xe7) 187 (0xbb) 0 (0x00)  CRC: 0x88F13C83
	408497079,	 // (0x18592bb7) // 24 (0x18) 89 (0x59) 43 (0x2b) 183 (0xb7)  CRC: 0x8A98D0D5
	2535424,	 // (0x26b000) // 0 (0x00) 38 (0x26) 176 (0xb0)  CRC: 0xC676FFD3
	-965279789,	// CRC do Jardel: 0xC676FFD3
	0,	//	synchronized?, exception table length
//	6623: trim()Ljava/lang/String;
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xF4327CCB
	-1103353118,	 // (0xbe3c2ae2) // 190 (0xbe) 60 (0x3c) 42 (0x2a) 226 (0xe2)  CRC: 0x9283FFF7
	48793,	 // (0xbe99) // 0 (0x00) 0 (0x00) 190 (0xbe) 153 (0x99)  CRC: 0x6E3D8192
	1780450,	 // (0x1b2ae2) // 0 (0x00) 27 (0x1b) 42 (0x2a) 226 (0xe2)  CRC: 0xAF80F8D1
	820,	 // (0x0334) // 0 (0x00) 0 (0x00) 3 (0x03) 52 (0x34)  CRC: 0x4A7A803E
	270574592,	 // (0x1020a400) // 16 (0x10) 32 (0x20) 164 (0xa4) 0 (0x00)  CRC: 0x1F80FDC8
	304800256,	 // (0x122ae200) // 18 (0x12) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x86B66F6E
	1770596,	 // (0x1b0464) // 0 (0x00) 27 (0x1b) 4 (0x04) 100 (0x64)  CRC: 0x4CC50733
	873472164,	 // (0x341020a4) // 52 (0x34) 16 (0x10) 32 (0x20) 164 (0xa4)  CRC: 0xFAFD2AE4
	338608,	 // (0x52ab0) // 0 (0x00) 5 (0x05) 42 (0x2a) 176 (0xb0)  CRC: 0x5D969688
	54336539,	 // (0x33d1c1b) // 3 (0x03) 61 (0x3d) 28 (0x1c) 27 (0x1b)  CRC: 0xE815538F
	-1610611182,	 // (0xa0000612) // 160 (0xa0) 0 (0x00) 6 (0x06) 18 (0x12)  CRC: 0xB38BE8E1
	45099746,	 // (0x2b02ae2) // 2 (0x02) 176 (0xb0) 42 (0x2a) 226 (0xe2)  CRC: 0x3F44EC0B
	7196,	 // (0x1c1c) // 0 (0x00) 0 (0x00) 28 (0x1c) 28 (0x1c)  CRC: 0xE8B4527F
	73415988,	 // (0x4603d34) // 4 (0x04) 96 (0x60) 61 (0x3d) 52 (0x34)  CRC: 0xBD4A3A67
	270574847,	 // (0x1020a4ff) // 16 (0x10) 32 (0x20) 164 (0xa4) 255 (0xff)  CRC: 0x026FCEAA
	-333758934,	 // (0xec1b3e2a) // 236 (0xec) 27 (0x1b) 62 (0x3e) 42 (0x2a)  CRC: 0x13DC69BB
	-503316451,	 // (0xe200001d) // 226 (0xe2) 0 (0x00) 0 (0x00) 29 (0x1d)  CRC: 0xD4BF032E
	39861789,	 // (0x2603e1d) // 2 (0x02) 96 (0x60) 62 (0x3e) 29 (0x1d)  CRC: 0x01DD68CF
	873472163,	 // (0x341020a3) // 52 (0x34) 16 (0x10) 32 (0x20) 163 (0xa3)  CRC: 0x1D87A705
	436223,	 // (0x6a7ff) // 0 (0x00) 6 (0x06) 167 (0xa7) 255 (0xff)  CRC: 0x7DE01789
	-248898556,	 // (0xf12a1c04) // 241 (0xf1) 42 (0x2a) 28 (0x1c) 4 (0x04)  CRC: 0xB717EB03
	1679623264,	 // (0x641d0460) // 100 (0x64) 29 (0x1d) 4 (0x04) 96 (0x60)  CRC: 0x278C73AC
	-1241504336,	 // (0xb60025b0) // 182 (0xb6) 0 (0x00) 37 (0x25) 176 (0xb0)  CRC: 0xF5EA6606
	-169187834,	// CRC do Jardel: 0xF5EA6606
	0,	//	synchronized?, exception table length
//	6649: valueOf(Z)Ljava/lang/String;
	446234632,	 // (0x1a990008) // 26 (0x1a) 153 (0x99) 0 (0x00) 8 (0x08)  CRC: 0x50FD54A9
	304588544,	 // (0x1227a700) // 18 (0x12) 39 (0x27) 167 (0xa7) 0 (0x00)  CRC: 0xD5F8B1C5
	85076144,	 // (0x51228b0) // 5 (0x05) 18 (0x12) 40 (0x28) 176 (0xb0)  CRC: 0x91DB8BD2
	-1847882798,	// CRC do Jardel: 0x91DB8BD2
	0,	//	synchronized?, exception table length
//	6654: valueOf(C)Ljava/lang/String;
	-1157621671,	 // (0xbb001859) // 187 (0xbb) 0 (0x00) 24 (0x18) 89 (0x59)  CRC: 0x86BA551C
	79431001,	 // (0x4bc0559) // 4 (0x04) 188 (0xbc) 5 (0x05) 89 (0x59)  CRC: 0x75AFE883
	52057347,	 // (0x31a5503) // 3 (0x03) 26 (0x1a) 85 (0x55) 3 (0x03)  CRC: 0x8751FF3D
	79101977,	 // (0x4b70019) // 4 (0x04) 183 (0xb7) 0 (0x00) 25 (0x19)  CRC: 0x3F7B1BDE
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0xDC5404DD
	-598473507,	// CRC do Jardel: 0xDC5404DD
	0,	//	synchronized?, exception table length
//	6661: valueOf([C)Ljava/lang/String;
	704850622,	 // (0x2a032abe) // 42 (0x2a) 3 (0x03) 42 (0x2a) 190 (0xbe)  CRC: 0x713D38AA
	-1207948880,	 // (0xb80029b0) // 184 (0xb8) 0 (0x00) 41 (0x29) 176 (0xb0)  CRC: 0x4E5943EA
	1314472938,	// CRC do Jardel: 0x4E5943EA
	0,	//	synchronized?, exception table length
//	6665: valueOf([CII)Ljava/lang/String;
	-1157621671,	 // (0xbb001859) // 187 (0xbb) 0 (0x00) 24 (0x18) 89 (0x59)  CRC: 0x86BA551C
	706419895,	 // (0x2a1b1cb7) // 42 (0x2a) 27 (0x1b) 28 (0x1c) 183 (0xb7)  CRC: 0xF26C790D
	1683456,	 // (0x19b000) // 0 (0x00) 25 (0x19) 176 (0xb0)  CRC: 0x086A4E6E
	141184622,	// CRC do Jardel: 0x086A4E6E
	0,	//	synchronized?, exception table length
//	6670: valueOf(I)Ljava/lang/String;
	437258936,	 // (0x1a100ab8) // 26 (0x1a) 16 (0x10) 10 (0x0a) 184 (0xb8)  CRC: 0x3C4F65C6
	2797568,	 // (0x2ab000) // 0 (0x00) 42 (0x2a) 176 (0xb0)  CRC: 0x94032A6F
	-1811731857,	// CRC do Jardel: 0x94032A6F
	0,	//	synchronized?, exception table length
//	6674: valueOf(J)Ljava/lang/String;
	515375147,	 // (0x1eb8002b) // 30 (0x1e) 184 (0xb8) 0 (0x00) 43 (0x2b)  CRC: 0x3BDD2110
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0x087D3051
	142422097,	// CRC do Jardel: 0x087D3051
	0,	//	synchronized?, exception table length
//	6678: valueOf(Ljava/lang/Object;)Ljava/lang/String;
	717684744,	 // (0x2ac70008) // 42 (0x2a) 199 (0xc7) 0 (0x00) 8 (0x08)  CRC: 0xBA463292
	304916224,	 // (0x122ca700) // 18 (0x12) 44 (0x2c) 167 (0xa7) 0 (0x00)  CRC: 0x48983FB2
	120239616,	 // (0x72ab600) // 7 (0x07) 42 (0x2a) 182 (0xb6) 0 (0x00)  CRC: 0x346D8AE6
	766509056,	 // (0x2db00000) // 45 (0x2d) 176 (0xb0)  CRC: 0x48C0C744
	1220593476,	// CRC do Jardel: 0x48C0C744
	0,	//	synchronized?, exception table length
//	6684: equalsIgnoreCase(Ljava/lang/String;)Z
	-1157616039,	 // (0xbb002e59) // 187 (0xbb) 0 (0x00) 46 (0x2e) 89 (0x59)  CRC: 0xA4F6E69E
	305116928,	 // (0x122fb700) // 18 (0x12) 47 (0x2f) 183 (0xb7) 0 (0x00)  CRC: 0x8092F77E
	817823744,	 // (0x30bf0000) // 48 (0x30) 191 (0xbf)  CRC: 0x978D1080
	-1752362880,	// CRC do Jardel: 0x978D1080
	0,	//	synchronized?, exception table length
//	java.lang.StackOverflowError
//	6689: <init>()V
	705823159,	 // (0x2a1201b7) // 42 (0x2a) 18 (0x12) 1 (0x01) 183 (0xb7)  CRC: 0xA14B6189
	176384,	 // (0x2b100) // 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0x793FF3E5
	2034234341,	// CRC do Jardel: 0x793FF3E5
	0,	//	synchronized?, exception table length
//	6693: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	java.lang.NegativeArraySizeException
//	6697: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	6701: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	java.lang.ClassCastException
//	6705: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	6709: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	com.jopdesign.sys.Scope
//	6713: <init>(J)V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	706709510,	 // (0x2a1f8806) // 42 (0x2a) 31 (0x1f) 136 (0x88) 6 (0x06)  CRC: 0x8924CB45
	1610971836,	 // (0x60057abc) // 96 (0x60) 5 (0x05) 122 (0x7a) 188 (0xbc)  CRC: 0xFF604ED1
	182648833,	 // (0xae30001) // 10 (0x0a) 227 (0xe3) 0 (0x00) 1 (0x01)  CRC: 0x9BB946FD
	704886016,	 // (0x2a03b500) // 42 (0x2a) 3 (0x03) 181 (0xb5) 0 (0x00)  CRC: 0x186F7B2B
	2753461,	 // (0x2a03b5) // 0 (0x00) 42 (0x2a) 3 (0x03) 181 (0xb5)  CRC: 0x61821952
	176384,	 // (0x2b100) // 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0x5A86F6F1
	1518794481,	// CRC do Jardel: 0x5A86F6F1
	0,	//	synchronized?, exception table length
//	6722: <init>([I)V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	707519232,	 // (0x2a2be300) // 42 (0x2a) 43 (0x2b) 227 (0xe3) 0 (0x00)  CRC: 0x7D8F0394
	19530677,	 // (0x12a03b5) // 1 (0x01) 42 (0x2a) 3 (0x03) 181 (0xb5)  CRC: 0x21C444BB
	10755,	 // (0x2a03) // 0 (0x00) 0 (0x00) 42 (0x2a) 3 (0x03)  CRC: 0x6F9A1858
	-1258290685,	 // (0xb5000203) // 181 (0xb5) 0 (0x00) 2 (0x02) 3 (0x03)  CRC: 0x2F819588
	1025256382,	 // (0x3d1c2bbe) // 61 (0x3d) 28 (0x1c) 43 (0x2b) 190 (0xbe)  CRC: 0x278ED85C
	-1577054677,	 // (0xa2000e2b) // 162 (0xa2) 0 (0x00) 14 (0x0e) 43 (0x2b)  CRC: 0x85ACA619
	469978908,	 // (0x1c034f1c) // 28 (0x1c) 3 (0x03) 79 (0x4f) 28 (0x1c)  CRC: 0xF5A3708A
	73416103,	 // (0x4603da7) // 4 (0x04) 96 (0x60) 61 (0x3d) 167 (0xa7)  CRC: 0x24044A02
	-872192,	 // (0xfff2b100) // 255 (0xff) 242 (0xf2) 177 (0xb1)  CRC: 0xDA2C425A
	-634633638,	// CRC do Jardel: 0xDA2C425A
	0,	//	synchronized?, exception table length
//	6734: getSize()I
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x285FE67C
	-1106810708,	 // (0xbe0768ac) // 190 (0xbe) 7 (0x07) 104 (0x68) 172 (0xac)  CRC: 0x9CFF86C4
	-1660975420,	// CRC do Jardel: 0x9CFF86C4
	0,	//	synchronized?, exception table length
//	6738: enter(Ljava/lang/Runnable;)V
	710495682,	 // (0x2a594dc2) // 42 (0x2a) 89 (0x59) 77 (0x4d) 194 (0xc2)  CRC: 0x0B54CB15
	710521856,	 // (0x2a59b400) // 42 (0x2a) 89 (0x59) 180 (0xb4) 0 (0x00)  CRC: 0xE6A7D56D
	286901,	 // (0x460b5) // 0 (0x00) 4 (0x04) 96 (0x60) 181 (0xb5)  CRC: 0x45EC8412
	11459,	 // (0x2cc3) // 0 (0x00) 0 (0x00) 44 (0x2c) 195 (0xc3)  CRC: 0x7E4F22AE
	-1493170098,	 // (0xa700084e) // 167 (0xa7) 0 (0x00) 8 (0x08) 78 (0x4e)  CRC: 0xCC455521
	750988735,	 // (0x2cc32dbf) // 44 (0x2c) 195 (0xc3) 45 (0x2d) 191 (0xbf)  CRC: 0xA9A4E68F
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0xAEA64C18
	77529101,	 // (0x49f000d) // 4 (0x04) 159 (0x9f) 0 (0x00) 13 (0x0d)  CRC: 0x2785C1F0
	-1157627303,	 // (0xbb000259) // 187 (0xbb) 0 (0x00) 2 (0x02) 89 (0x59)  CRC: 0x12A8CDDA
	302233344,	 // (0x1203b700) // 18 (0x12) 3 (0x03) 183 (0xb7) 0 (0x00)  CRC: 0x8A9CDBA6
	79637176,	 // (0x4bf2ab8) // 4 (0x04) 191 (0xbf) 42 (0x2a) 184 (0xb8)  CRC: 0xB391A52A
	385792,	 // (0x5e300) // 0 (0x00) 5 (0x05) 227 (0xe3) 0 (0x00)  CRC: 0x9DEF4AF7
	53131264,	 // (0x32ab800) // 3 (0x03) 42 (0x2a) 184 (0xb8) 0 (0x00)  CRC: 0x9D73219C
	103528704,	 // (0x62bb900) // 6 (0x06) 43 (0x2b) 185 (0xb9) 0 (0x00)  CRC: 0xBFA43165
	117506090,	 // (0x701002a) // 7 (0x07) 1 (0x01) 0 (0x00) 42 (0x2a)  CRC: 0xB49EF7BC
	-503315528,	 // (0xe20003b8) // 226 (0xe2) 0 (0x00) 3 (0x03) 184 (0xb8)  CRC: 0xFC5249CA
	404057,	 // (0x62a59) // 0 (0x00) 6 (0x06) 42 (0x2a) 89 (0x59)  CRC: 0x3C27A71D
	1304570457,	 // (0x4dc22a59) // 77 (0x4d) 194 (0xc2) 42 (0x2a) 89 (0x59)  CRC: 0x1D526BAD
	-1275068412,	 // (0xb4000004) // 180 (0xb4) 0 (0x00) 0 (0x00) 4 (0x04)  CRC: 0x4D1DF234
	1689583616,	 // (0x64b50000) // 100 (0x64) 181 (0xb5) 0 (0x00) 0 (0x00)  CRC: 0x938AD50F
	716439552,	 // (0x2ab40000) // 42 (0x2a) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0xECBD9A5B
	-1711267837,	 // (0x9a002003) // 154 (0x9a) 0 (0x00) 32 (0x20) 3 (0x03)  CRC: 0x60FB6F73
	1042098868,	 // (0x3e1d2ab4) // 62 (0x3e) 29 (0x1d) 42 (0x2a) 180 (0xb4)  CRC: 0xAE36638B
	172544,	 // (0x2a200) // 0 (0x00) 2 (0x02) 162 (0xa2) 0 (0x00)  CRC: 0x720F0EEF
	288023040,	 // (0x112ae200) // 17 (0x11) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x09521151
	18678607,	 // (0x11d034f) // 1 (0x01) 29 (0x1d) 3 (0x03) 79 (0x4f)  CRC: 0xCC7E7842
	486826046,	 // (0x1d04603e) // 29 (0x1d) 4 (0x04) 96 (0x60) 62 (0x3e)  CRC: 0x3F8E1CA1
	-1476399830,	 // (0xa7ffed2a) // 167 (0xa7) 255 (0xff) 237 (0xed) 42 (0x2a)  CRC: 0x93DF2F2B
	62193666,	 // (0x3b50002) // 3 (0x03) 181 (0xb5) 0 (0x00) 2 (0x02)  CRC: 0x07EAC61A
	751019776,	 // (0x2cc3a700) // 44 (0x2c) 195 (0xc3) 167 (0xa7) 0 (0x00)  CRC: 0x3B5F655F
	171574316,	 // (0xa3a042c) // 10 (0x0a) 58 (0x3a) 4 (0x04) 44 (0x2c)  CRC: 0x0F59A1D2
	-1021770561,	 // (0xc31904bf) // 195 (0xc3) 25 (0x19) 4 (0x04) 191 (0xbf)  CRC: 0xA8233564
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x2D08EB4D
	755559245,	// CRC do Jardel: 0x2D08EB4D
	4,	//	synchronized?, exception table length
	262160,	// start: 4	end: 16
	1245184,	// target: 19	type: 0
	1245206,	// start: 19	end: 22
	1245184,	// target: 19	type: 0
	4587638,	// start: 70	end: 118
	7929856,	// target: 121	type: 0
	7929981,	// start: 121	end: 125
	7929856,	// target: 121	type: 0
//	java.io.JOPPrintStream
//	6781: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-536827449,	 // (0xe000a9c7) // 224 (0xe0) 0 (0x00) 169 (0xa9) 199 (0xc7)  CRC: 0xC7A720A9
	659488,	 // (0xa1020) // 0 (0x00) 10 (0x0a) 16 (0x10) 32 (0x20)  CRC: 0x97A3042D
	-1140137728,	 // (0xbc0ae100) // 188 (0xbc) 10 (0x0a) 225 (0xe1) 0 (0x00)  CRC: 0x76A84CC6
	-1448017920,	 // (0xa9b10000) // 169 (0xa9) 177 (0xb1)  CRC: 0xAF20E96F
	-1356797585,	// CRC do Jardel: 0xAF20E96F
	0,	//	synchronized?, exception table length
//	6788: close()V
	716570626,	 // (0x2ab60002) // 42 (0x2a) 182 (0xb6) 0 (0x00) 2 (0x02)  CRC: 0x5C1B82E4
	719454208,	 // (0x2ae20000) // 42 (0x2a) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xB2DF5AC1
	-1241513049,	 // (0xb60003a7) // 182 (0xb6) 0 (0x00) 3 (0x03) 167 (0xa7)  CRC: 0x5C82E0E5
	543787,	 // (0x84c2b) // 0 (0x00) 8 (0x08) 76 (0x4c) 43 (0x2b)  CRC: 0xFB4A64B4
	-1241512783,	 // (0xb60004b1) // 182 (0xb6) 0 (0x00) 4 (0x04) 177 (0xb1)  CRC: 0xC59DCEC1
	-979513663,	// CRC do Jardel: 0xC59DCEC1
	1,	//	synchronized?, exception table length
	11,	// start: 0	end: 11
	917509,	// target: 14	type: 5
//	6797: flush()V
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xB9FF90C9
	-1174433591,	// CRC do Jardel: 0xB9FF90C9
	0,	//	synchronized?, exception table length
//	6800: print(Z)V
	463011852,	 // (0x1b99000c) // 27 (0x1b) 153 (0x99) 0 (0x00) 12 (0x0c)  CRC: 0x28C9051B
	705824439,	 // (0x2a1206b7) // 42 (0x2a) 18 (0x12) 6 (0x06) 183 (0xb7)  CRC: 0xD244A27C
	501504,	 // (0x7a700) // 0 (0x00) 7 (0x07) 167 (0xa7) 0 (0x00)  CRC: 0x7F502753
	153752072,	 // (0x92a1208) // 9 (0x09) 42 (0x2a) 18 (0x12) 8 (0x08)  CRC: 0xEF9EA354
	-1224734799,	 // (0xb70007b1) // 183 (0xb7) 0 (0x00) 7 (0x07) 177 (0xb1)  CRC: 0xF9EDB3A2
	-101862494,	// CRC do Jardel: 0xF9EDB3A2
	0,	//	synchronized?, exception table length
//	6807: print(C)V
	465043465,	 // (0x1bb80009) // 27 (0x1b) 184 (0xb8) 0 (0x00) 9 (0x09)  CRC: 0x7AEB2453
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x8D76225D
	-1921637795,	// CRC do Jardel: 0x8D76225D
	0,	//	synchronized?, exception table length
//	6811: print([C)V
	54336555,	 // (0x33d1c2b) // 3 (0x03) 61 (0x3d) 28 (0x1c) 43 (0x2b)  CRC: 0x479D5A0A
	-1096679408,	 // (0xbea20010) // 190 (0xbe) 162 (0xa2) 0 (0x00) 16 (0x10)  CRC: 0x146C13DF
	723268792,	 // (0x2b1c34b8) // 43 (0x2b) 28 (0x1c) 52 (0x34) 184 (0xb8)  CRC: 0x8B4F9496
	662532,	 // (0xa1c04) // 0 (0x00) 10 (0x0a) 28 (0x1c) 4 (0x04)  CRC: 0xE89E8E16
	1614653439,	 // (0x603da7ff) // 96 (0x60) 61 (0x3d) 167 (0xa7) 255 (0xff)  CRC: 0xF8B339CC
	-256835584,	 // (0xf0b10000) // 240 (0xf0) 177 (0xb1)  CRC: 0xB2B8DDB7
	-1296507465,	// CRC do Jardel: 0xB2B8DDB7
	0,	//	synchronized?, exception table length
//	6819: print(I)V
	465043467,	 // (0x1bb8000b) // 27 (0x1b) 184 (0xb8) 0 (0x00) 11 (0x0b)  CRC: 0xC6F10C8A
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x3A359BC9
	976591817,	// CRC do Jardel: 0x3A359BC9
	0,	//	synchronized?, exception table length
//	6823: print(J)V
	706721792,	 // (0x2a1fb800) // 42 (0x2a) 31 (0x1f) 184 (0xb8) 0 (0x00)  CRC: 0xDE73B925
	213319687,	 // (0xcb70007) // 12 (0x0c) 183 (0xb7) 0 (0x00) 7 (0x07)  CRC: 0x22CFB494
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xBFFCA64A
	-1073961398,	// CRC do Jardel: 0xBFFCA64A
	0,	//	synchronized?, exception table length
//	6828: print(Ljava/lang/Object;)V
	707512064,	 // (0x2a2bc700) // 42 (0x2a) 43 (0x2b) 199 (0xc7) 0 (0x00)  CRC: 0xF0DF6F44
	135400871,	 // (0x8120da7) // 8 (0x08) 18 (0x12) 13 (0x0d) 167 (0xa7)  CRC: 0xD38839EE
	469942,	 // (0x72bb6) // 0 (0x00) 7 (0x07) 43 (0x2b) 182 (0xb6)  CRC: 0xE803F14D
	964352,	 // (0xeb700) // 0 (0x00) 14 (0x0e) 183 (0xb7) 0 (0x00)  CRC: 0xE2A908D2
	129040384,	 // (0x7b10000) // 7 (0x07) 177 (0xb1)  CRC: 0x15290F1E
	355012382,	// CRC do Jardel: 0x15290F1E
	0,	//	synchronized?, exception table length
//	6835: print(Ljava/lang/String;)V
	717368248,	 // (0x2ac22bb8) // 42 (0x2a) 194 (0xc2) 43 (0x2b) 184 (0xb8)  CRC: 0xA1D985F9
	993987,	 // (0xf2ac3) // 0 (0x00) 15 (0x0f) 42 (0x2a) 195 (0xc3)  CRC: 0x3A2C39E7
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x600D544B
	1611486283,	// CRC do Jardel: 0x600D544B
	65536,	//	synchronized?, exception table length
//	6840: println()V
	303085568,	 // (0x1210b800) // 18 (0x12) 16 (0x10) 184 (0xb8) 0 (0x00)  CRC: 0x91CE0425
	263258112,	 // (0xfb10000) // 15 (0x0f) 177 (0xb1)  CRC: 0x8F1E928D
	-1893821811,	// CRC do Jardel: 0x8F1E928D
	0,	//	synchronized?, exception table length
//	6844: println(Z)V
	706459136,	 // (0x2a1bb600) // 42 (0x2a) 27 (0x1b) 182 (0xb6) 0 (0x00)  CRC: 0x914117A6
	288011776,	 // (0x112ab600) // 17 (0x11) 42 (0x2a) 182 (0xb6) 0 (0x00)  CRC: 0xBA882425
	313589760,	 // (0x12b10000) // 18 (0x12) 177 (0xb1)  CRC: 0xD3ED5F4F
	-739418289,	// CRC do Jardel: 0xD3ED5F4F
	0,	//	synchronized?, exception table length
//	6849: println(C)V
	717367835,	 // (0x2ac22a1b) // 42 (0x2a) 194 (0xc2) 42 (0x2a) 27 (0x1b)  CRC: 0x8C79E0FC
	-1241509078,	 // (0xb600132a) // 182 (0xb6) 0 (0x00) 19 (0x13) 42 (0x2a)  CRC: 0x34CFB775
	-1241509334,	 // (0xb600122a) // 182 (0xb6) 0 (0x00) 18 (0x12) 42 (0x2a)  CRC: 0x94E1BC71
	-1011810304,	 // (0xc3b10000) // 195 (0xc3) 177 (0xb1)  CRC: 0x247E17AB
	612243371,	// CRC do Jardel: 0x247E17AB
	65536,	//	synchronized?, exception table length
//	6855: println([C)V
	707507712,	 // (0x2a2bb600) // 42 (0x2a) 43 (0x2b) 182 (0xb6) 0 (0x00)  CRC: 0xA1B3BA93
	338343424,	 // (0x142ab600) // 20 (0x14) 42 (0x2a) 182 (0xb6) 0 (0x00)  CRC: 0x734E0CA0
	313589760,	 // (0x12b10000) // 18 (0x12) 177 (0xb1)  CRC: 0xCB138719
	-887912679,	// CRC do Jardel: 0xCB138719
	0,	//	synchronized?, exception table length
//	6860: println(I)V
	706459136,	 // (0x2a1bb600) // 42 (0x2a) 27 (0x1b) 182 (0xb6) 0 (0x00)  CRC: 0x914117A6
	355120640,	 // (0x152ab600) // 21 (0x15) 42 (0x2a) 182 (0xb6) 0 (0x00)  CRC: 0xA98C52F9
	313589760,	 // (0x12b10000) // 18 (0x12) 177 (0xb1)  CRC: 0xF319DCCC
	-216408884,	// CRC do Jardel: 0xF319DCCC
	0,	//	synchronized?, exception table length
//	6865: println(J)V
	706721280,	 // (0x2a1fb600) // 42 (0x2a) 31 (0x1f) 182 (0xb6) 0 (0x00)  CRC: 0xD465360F
	371897856,	 // (0x162ab600) // 22 (0x16) 42 (0x2a) 182 (0xb6) 0 (0x00)  CRC: 0xC86F41C0
	313589760,	 // (0x12b10000) // 18 (0x12) 177 (0xb1)  CRC: 0x23CECEA9
	600755881,	// CRC do Jardel: 0x23CECEA9
	0,	//	synchronized?, exception table length
//	6870: println(Ljava/lang/Object;)V
	707507712,	 // (0x2a2bb600) // 42 (0x2a) 43 (0x2b) 182 (0xb6) 0 (0x00)  CRC: 0xA1B3BA93
	388675072,	 // (0x172ab600) // 23 (0x17) 42 (0x2a) 182 (0xb6) 0 (0x00)  CRC: 0x7E0D2A79
	313589760,	 // (0x12b10000) // 18 (0x12) 177 (0xb1)  CRC: 0x10042F8E
	268709774,	// CRC do Jardel: 0x10042F8E
	0,	//	synchronized?, exception table length
//	6875: println(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	120239616,	 // (0x72ab600) // 7 (0x07) 42 (0x2a) 182 (0xb6) 0 (0x00)  CRC: 0x7D4B9918
	313589760,	 // (0x12b10000) // 18 (0x12) 177 (0xb1)  CRC: 0x6A7AA66C
	1786422892,	// CRC do Jardel: 0x6A7AA66C
	0,	//	synchronized?, exception table length
//	6880: write([BII)V
	734461965,	 // (0x2bc7000d) // 43 (0x2b) 199 (0xc7) 0 (0x00) 13 (0x0d)  CRC: 0x1E1FF997
	-1157626535,	 // (0xbb000559) // 187 (0xbb) 0 (0x00) 5 (0x05) 89 (0x59)  CRC: 0xDB292D93
	303609600,	 // (0x1218b700) // 18 (0x12) 24 (0x18) 183 (0xb7) 0 (0x00)  CRC: 0x28B41E4C
	431948598,	 // (0x19bf0336) // 25 (0x19) 191 (0xbf) 3 (0x03) 54 (0x36)  CRC: 0x1EB762FE
	68486173,	 // (0x415041d) // 4 (0x04) 21 (0x15) 4 (0x04) 29 (0x1d)  CRC: 0x489EC82B
	-1577051605,	 // (0xa2001a2b) // 162 (0xa2) 0 (0x00) 26 (0x1a) 43 (0x2b)  CRC: 0xB2FE7231
	471139424,	 // (0x1c150460) // 28 (0x1c) 21 (0x15) 4 (0x04) 96 (0x60)  CRC: 0x72A9BBF7
	856752383,	 // (0x331100ff) // 51 (0x33) 17 (0x11) 0 (0x00) 255 (0xff)  CRC: 0xE1D1BDDC
	2123544576,	 // (0x7e92b800) // 126 (0x7e) 146 (0x92) 184 (0xb8) 0 (0x00)  CRC: 0x66DB6EFF
	152372228,	 // (0x9150404) // 9 (0x09) 21 (0x15) 4 (0x04) 4 (0x04)  CRC: 0x11F01AA3
	1614152871,	 // (0x603604a7) // 96 (0x60) 54 (0x36) 4 (0x04) 167 (0xa7)  CRC: 0x7F7258C2
	-1658624,	 // (0xffe6b100) // 255 (0xff) 230 (0xe6) 177 (0xb1)  CRC: 0x898D68B5
	-1987221323,	// CRC do Jardel: 0x898D68B5
	0,	//	synchronized?, exception table length
//	6894: write(I)V
	454099199,	 // (0x1b1100ff) // 27 (0x1b) 17 (0x11) 0 (0x00) 255 (0xff)  CRC: 0x2A72EAA5
	2123544576,	 // (0x7e92b800) // 126 (0x7e) 146 (0x92) 184 (0xb8) 0 (0x00)  CRC: 0xF93CABF7
	162594816,	 // (0x9b10000) // 9 (0x09) 177 (0xb1)  CRC: 0xEF6A515E
	-278245026,	// CRC do Jardel: 0xEF6A515E
	0,	//	synchronized?, exception table length
//	6899: wr(C)V
	448266249,	 // (0x1ab80009) // 26 (0x1a) 184 (0xb8) 0 (0x00) 9 (0x09)  CRC: 0x7E2A39E4
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xC47B45D0
	-998554160,	// CRC do Jardel: 0xC47B45D0
	0,	//	synchronized?, exception table length
//	6903: wr(Ljava/lang/String;)V
	716570650,	 // (0x2ab6001a) // 42 (0x2a) 182 (0xb6) 0 (0x00) 26 (0x1a)  CRC: 0x52E5374D
	1006845212,	 // (0x3c033d1c) // 60 (0x3c) 3 (0x03) 61 (0x3d) 28 (0x1c)  CRC: 0xF0872E47
	463601682,	 // (0x1ba20012) // 27 (0x1b) 162 (0xa2) 0 (0x00) 18 (0x12)  CRC: 0xC8204D75
	706524672,	 // (0x2a1cb600) // 42 (0x2a) 28 (0x1c) 182 (0xb6) 0 (0x00)  CRC: 0xB8C67599
	465043465,	 // (0x1bb80009) // 27 (0x1b) 184 (0xb8) 0 (0x00) 9 (0x09)  CRC: 0x47E989D9
	470048829,	 // (0x1c04603d) // 28 (0x1c) 4 (0x04) 96 (0x60) 61 (0x3d)  CRC: 0xBFE340A6
	-1476399183,	 // (0xa7ffefb1) // 167 (0xa7) 255 (0xff) 239 (0xef) 177 (0xb1)  CRC: 0x3B9A7FC0
	999980992,	// CRC do Jardel: 0x3B9A7FC0
	0,	//	synchronized?, exception table length
//	6912: wr(I)V
	71113372,	 // (0x43d1a9c) // 4 (0x04) 61 (0x3d) 26 (0x1a) 156 (0x9c)  CRC: 0xFA904939
	659501,	 // (0xa102d) // 0 (0x00) 10 (0x0a) 16 (0x10) 45 (0x2d)  CRC: 0xB5639300
	-1207956990,	 // (0xb8000a02) // 184 (0xb8) 0 (0x00) 10 (0x0a) 2 (0x02)  CRC: 0x9EBAAD25
	1023622171,	 // (0x3d033c1b) // 61 (0x3d) 3 (0x03) 60 (0x3c) 27 (0x1b)  CRC: 0x495367BF
	270508544,	 // (0x101fa200) // 16 (0x10) 31 (0x1f) 162 (0xa2) 0 (0x00)  CRC: 0x7B326D27
	618660009,	 // (0x24e000a9) // 36 (0x24) 224 (0xe0) 0 (0x00) 169 (0xa9)  CRC: 0x8B6FF4CA
	454692874,	 // (0x1b1a100a) // 27 (0x1b) 26 (0x1a) 16 (0x10) 10 (0x0a)  CRC: 0xB85CD50F
	1880909840,	 // (0x701c6810) // 112 (0x70) 28 (0x1c) 104 (0x68) 16 (0x10)  CRC: 0xD7789F6A
	811618074,	 // (0x30604f1a) // 48 (0x30) 96 (0x60) 79 (0x4f) 26 (0x1a)  CRC: 0x14B1A5ED
	269118523,	 // (0x100a6c3b) // 16 (0x10) 10 (0x0a) 108 (0x6c) 59 (0x3b)  CRC: 0x27D4584F
	446300166,	 // (0x1a9a0006) // 26 (0x1a) 154 (0x9a) 0 (0x00) 6 (0x06)  CRC: 0xBA7B2EDD
	-1493169637,	 // (0xa7000a1b) // 167 (0xa7) 0 (0x00) 10 (0x0a) 27 (0x1b)  CRC: 0x410D356F
	73415847,	 // (0x4603ca7) // 4 (0x04) 96 (0x60) 60 (0x3c) 167 (0xa7)  CRC: 0x3B7061AE
	-2352325,	 // (0xffdc1b3b) // 255 (0xff) 220 (0xdc) 27 (0x1b) 59 (0x3b)  CRC: 0x92CF40AB
	446365715,	 // (0x1a9b0013) // 26 (0x1a) 155 (0x9b) 0 (0x00) 19 (0x13)  CRC: 0x79FF45C8
	-536827622,	 // (0xe000a91a) // 224 (0xe0) 0 (0x00) 169 (0xa9) 26 (0x1a)  CRC: 0x5CAFB109
	781367296,	 // (0x2e92b800) // 46 (0x2e) 146 (0x92) 184 (0xb8) 0 (0x00)  CRC: 0x6FB5690C
	169476704,	 // (0xa1a0260) // 10 (0x0a) 26 (0x1a) 2 (0x02) 96 (0x60)  CRC: 0x3373E9FC
	1000865775,	 // (0x3ba7ffef) // 59 (0x3b) 167 (0xa7) 255 (0xff) 239 (0xef)  CRC: 0x8D1A9164
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xA9F02436
	-1443879882,	// CRC do Jardel: 0xA9F02436
	0,	//	synchronized?, exception table length
//	java.lang.Long
//	6934: <init>(J)V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	706733824,	 // (0x2a1fe700) // 42 (0x2a) 31 (0x1f) 231 (0xe7) 0 (0x00)  CRC: 0x0F3B3D14
	11599872,	 // (0xb10000) // 0 (0x00) 177 (0xb1)  CRC: 0xDDAEB88F
	-575752049,	// CRC do Jardel: 0xDDAEB88F
	0,	//	synchronized?, exception table length
//	6939: equals(Ljava/lang/Object;)Z
	719716352,	 // (0x2ae60000) // 42 (0x2a) 230 (0xe6) 0 (0x00) 0 (0x00)  CRC: 0xB1165D62
	734003202,	 // (0x2bc00002) // 43 (0x2b) 192 (0xc0) 0 (0x00) 2 (0x02)  CRC: 0x5BD2A797
	-436207468,	 // (0xe6000094) // 230 (0xe6) 0 (0x00) 0 (0x00) 148 (0x94)  CRC: 0x674EA883
	-1711274236,	 // (0x9a000704) // 154 (0x9a) 0 (0x00) 7 (0x07) 4 (0x04)  CRC: 0x64040B26
	-1493171197,	 // (0xa7000403) // 167 (0xa7) 0 (0x00) 4 (0x04) 3 (0x03)  CRC: 0xB216C917
	-1409286144,	 // (0xac000000) // 172 (0xac)  CRC: 0x13B62DB1
	330706353,	// CRC do Jardel: 0x13B62DB1
	0,	//	synchronized?, exception table length
//	6947: hashCode()I
	719716352,	 // (0x2ae60000) // 42 (0x2a) 230 (0xe6) 0 (0x00) 0 (0x00)  CRC: 0xB1165D62
	719716352,	 // (0x2ae60000) // 42 (0x2a) 230 (0xe6) 0 (0x00) 0 (0x00)  CRC: 0x267C1B79
	270564739,	 // (0x10207d83) // 16 (0x10) 32 (0x20) 125 (0x7d) 131 (0x83)  CRC: 0xAB7286F5
	-2001993728,	 // (0x88ac0000) // 136 (0x88) 172 (0xac)  CRC: 0x5DF70199
	1576468889,	// CRC do Jardel: 0x5DF70199
	0,	//	synchronized?, exception table length
//	6953: longValue()J
	719716352,	 // (0x2ae60000) // 42 (0x2a) 230 (0xe6) 0 (0x00) 0 (0x00)  CRC: 0xB1165D62
	-1392508928,	 // (0xad000000) // 173 (0xad)  CRC: 0x578896C6
	1468569286,	// CRC do Jardel: 0x578896C6
	0,	//	synchronized?, exception table length
//	6957: parseLong(Ljava/lang/String;)J
	705694211,	 // (0x2a100a03) // 42 (0x2a) 16 (0x10) 10 (0x0a) 3 (0x03)  CRC: 0xCAFB747D
	-1207958611,	 // (0xb80003ad) // 184 (0xb8) 0 (0x00) 3 (0x03) 173 (0xad)  CRC: 0xEB806D05
	-343905019,	// CRC do Jardel: 0xEB806D05
	0,	//	synchronized?, exception table length
//	6961: parseLong(Ljava/lang/String;I)J
	706413496,	 // (0x2a1b03b8) // 42 (0x2a) 27 (0x1b) 3 (0x03) 184 (0xb8)  CRC: 0x1FC3DC68
	240896,	 // (0x3ad00) // 0 (0x00) 3 (0x03) 173 (0xad)  CRC: 0xB1E54C08
	-1310372856,	// CRC do Jardel: 0xB1E54C08
	0,	//	synchronized?, exception table length
//	6965: toString()Ljava/lang/String;
	719716352,	 // (0x2ae60000) // 42 (0x2a) 230 (0xe6) 0 (0x00) 0 (0x00)  CRC: 0xB1165D62
	269137920,	 // (0x100ab800) // 16 (0x10) 10 (0x0a) 184 (0xb8) 0 (0x00)  CRC: 0x35CD3F1E
	78643200,	 // (0x4b00000) // 4 (0x04) 176 (0xb0)  CRC: 0x73F74D15
	1945586965,	// CRC do Jardel: 0x73F74D15
	0,	//	synchronized?, exception table length
//	6970: toString(J)Ljava/lang/String;
	504367800,	 // (0x1e100ab8) // 30 (0x1e) 16 (0x10) 10 (0x0a) 184 (0xb8)  CRC: 0x2F4B131A
	307200,	 // (0x4b000) // 0 (0x00) 4 (0x04) 176 (0xb0)  CRC: 0xFBCA633E
	-70622402,	// CRC do Jardel: 0xFBCA633E
	0,	//	synchronized?, exception table length
//	6974: toString(JI)Ljava/lang/String;
	512263454,	 // (0x1e88851e) // 30 (0x1e) 136 (0x88) 133 (0x85) 30 (0x1e)  CRC: 0x5CA66CDE
	-1801846774,	 // (0x949a000a) // 148 (0x94) 154 (0x9a) 0 (0x00) 10 (0x0a)  CRC: 0x389AE1BE
	512236728,	 // (0x1e881cb8) // 30 (0x1e) 136 (0x88) 28 (0x1c) 184 (0xb8)  CRC: 0x86F81B65
	372764,	 // (0x5b01c) // 0 (0x00) 5 (0x05) 176 (0xb0) 28 (0x1c)  CRC: 0xA8432F8E
	94437385,	 // (0x5a10009) // 5 (0x05) 161 (0xa1) 0 (0x00) 9 (0x09)  CRC: 0x4B753AF1
	470820004,	 // (0x1c1024a4) // 28 (0x1c) 16 (0x10) 36 (0x24) 164 (0xa4)  CRC: 0xEC70833E
	397322,	 // (0x6100a) // 0 (0x00) 6 (0x06) 16 (0x10) 10 (0x0a)  CRC: 0xEDC0CB32
	1024475580,	 // (0x3d1041bc) // 61 (0x3d) 16 (0x10) 65 (0x41) 188 (0xbc)  CRC: 0x049346BD
	89002049,	 // (0x54e1041) // 5 (0x05) 78 (0x4e) 16 (0x10) 65 (0x41)  CRC: 0x8ECAD37A
	906232630,	 // (0x36040336) // 54 (0x36) 4 (0x04) 3 (0x03) 54 (0x36)  CRC: 0x324FDE14
	85854612,	 // (0x51e0994) // 5 (0x05) 30 (0x1e) 9 (0x09) 148 (0x94)  CRC: 0x7502A7F1
	-1677710332,	 // (0x9c002c04) // 156 (0x9c) 0 (0x00) 44 (0x2c) 4 (0x04)  CRC: 0x2908AEFA
	906305141,	 // (0x36051e75) // 54 (0x36) 5 (0x05) 30 (0x1e) 117 (0x75)  CRC: 0x884BB359
	1058933140,	 // (0x3f1e0994) // 63 (0x3f) 30 (0x1e) 9 (0x09) 148 (0x94)  CRC: 0x0EE847DE
	-1677713363,	 // (0x9c00202d) // 156 (0x9c) 0 (0x00) 32 (0x20) 45 (0x2d)  CRC: 0x55ABABC8
	352584288,	 // (0x15040260) // 21 (0x15) 4 (0x04) 2 (0x02) 96 (0x60)  CRC: 0x5AC5B893
	906237188,	 // (0x36041504) // 54 (0x36) 4 (0x04) 21 (0x15) 4 (0x04)  CRC: 0x030DC123
	-536827362,	 // (0xe000aa1e) // 224 (0xe0) 0 (0x00) 170 (0xaa) 30 (0x1e)  CRC: 0x3D3434A6
	478503285,	 // (0x1c856175) // 28 (0x1c) 133 (0x85) 97 (0x61) 117 (0x75)  CRC: 0xB73110AD
	478507400,	 // (0x1c857188) // 28 (0x1c) 133 (0x85) 113 (0x71) 136 (0x88)  CRC: 0x32A11FC4
	877993500,	 // (0x34551e1c) // 52 (0x34) 85 (0x55) 30 (0x1e) 28 (0x1c)  CRC: 0xF0AFCE82
	-2056424129,	 // (0x856d753f) // 133 (0x85) 109 (0x6d) 117 (0x75) 63 (0x3f)  CRC: 0xD69DBD47
	756352002,	 // (0x2d150402) // 45 (0x2d) 21 (0x15) 4 (0x04) 2 (0x02)  CRC: 0xA99D320C
	1614152725,	 // (0x60360415) // 96 (0x60) 54 (0x36) 4 (0x04) 21 (0x15)  CRC: 0x1C48BD55
	81789098,	 // (0x4e000aa) // 4 (0x04) 224 (0xe0) 0 (0x00) 170 (0xaa)  CRC: 0x332E95A3
	505185649,	 // (0x1e1c8571) // 30 (0x1e) 28 (0x1c) 133 (0x85) 113 (0x71)  CRC: 0xE0C8ABE6
	-2009836258,	 // (0x8834551e) // 136 (0x88) 52 (0x34) 85 (0x55) 30 (0x1e)  CRC: 0x15DFD3A1
	478506303,	 // (0x1c856d3f) // 28 (0x1c) 133 (0x85) 109 (0x6d) 63 (0x3f)  CRC: 0x5E53F768
	503944349,	 // (0x1e09949d) // 30 (0x1e) 9 (0x09) 148 (0x94) 157 (0x9d)  CRC: 0xEE608FB3
	-1764091,	 // (0xffe51505) // 255 (0xff) 229 (0xe5) 21 (0x15) 5 (0x05)  CRC: 0x185ACA32
	-1728049363,	 // (0x99000f2d) // 153 (0x99) 0 (0x00) 15 (0x0f) 45 (0x2d)  CRC: 0xE36ABE2D
	352584288,	 // (0x15040260) // 21 (0x15) 4 (0x04) 2 (0x02) 96 (0x60)  CRC: 0xEF9472B3
	906237188,	 // (0x36041504) // 54 (0x36) 4 (0x04) 21 (0x15) 4 (0x04)  CRC: 0x03A4DB80
	271406523,	 // (0x102d55bb) // 16 (0x10) 45 (0x2d) 85 (0x55) 187 (0xbb)  CRC: 0xCC38C5CB
	416045,	 // (0x6592d) // 0 (0x00) 6 (0x06) 89 (0x59) 45 (0x2d)  CRC: 0xCA77DC56
	352587841,	 // (0x15041041) // 21 (0x15) 4 (0x04) 16 (0x10) 65 (0x41)  CRC: 0x1758DBF7
	352609463,	 // (0x150464b7) // 21 (0x15) 4 (0x04) 100 (0x64) 183 (0xb7)  CRC: 0xC100FAA0
	503808,	 // (0x7b000) // 0 (0x00) 7 (0x07) 176 (0xb0)  CRC: 0x7E33C027
	2117320743,	// CRC do Jardel: 0x7E33C027
	0,	//	synchronized?, exception table length
//	7014: parseLong(Ljava/lang/String;IZ)J
	479854607,	 // (0x1c9a000f) // 28 (0x1c) 154 (0x9a) 0 (0x00) 15 (0x0f)  CRC: 0x2412B8A3
	717684747,	 // (0x2ac7000b) // 42 (0x2a) 199 (0xc7) 0 (0x00) 11 (0x0b)  CRC: 0x964C5D5E
	-1157625767,	 // (0xbb000859) // 187 (0xbb) 0 (0x00) 8 (0x08) 89 (0x59)  CRC: 0x7DDA419F
	-1224734273,	 // (0xb70009bf) // 183 (0xb7) 0 (0x00) 9 (0x09) 191 (0xbf)  CRC: 0x63052CE0
	54405814,	 // (0x33e2ab6) // 3 (0x03) 62 (0x3e) 42 (0x2a) 182 (0xb6)  CRC: 0x68EBE0A8
	669188,	 // (0xa3604) // 0 (0x00) 10 (0x0a) 54 (0x36) 4 (0x04)  CRC: 0x2F993621
	53871893,	 // (0x3360515) // 3 (0x03) 54 (0x36) 5 (0x05) 21 (0x15)  CRC: 0x31D70BDB
	77201419,	 // (0x49a000b) // 4 (0x04) 154 (0x9a) 0 (0x00) 11 (0x0b)  CRC: 0xB3E14227
	-1157625767,	 // (0xbb000859) // 187 (0xbb) 0 (0x00) 8 (0x08) 89 (0x59)  CRC: 0x873C33CC
	-1224734273,	 // (0xb70009bf) // 183 (0xb7) 0 (0x00) 9 (0x09) 191 (0xbf)  CRC: 0x4DD49133
	706590208,	 // (0x2a1db600) // 42 (0x2a) 29 (0x1d) 182 (0xb6) 0 (0x00)  CRC: 0xE5D6A7DF
	188089877,	 // (0xb360615) // 11 (0x0b) 54 (0x36) 6 (0x06) 21 (0x15)  CRC: 0xAFA4D348
	101723552,	 // (0x6102da0) // 6 (0x06) 16 (0x10) 45 (0x2d) 160 (0xa0)  CRC: 0xBF0AD624
	2036996,	 // (0x1f1504) // 0 (0x00) 31 (0x1f) 21 (0x15) 4 (0x04)  CRC: 0x247E6190
	77594635,	 // (0x4a0000b) // 4 (0x04) 160 (0xa0) 0 (0x00) 11 (0x0b)  CRC: 0x72E9EEA0
	-1157625767,	 // (0xbb000859) // 187 (0xbb) 0 (0x00) 8 (0x08) 89 (0x59)  CRC: 0x38695CA5
	-1224734273,	 // (0xb70009bf) // 183 (0xb7) 0 (0x00) 9 (0x09) 191 (0xbf)  CRC: 0x2CB207EC
	70649130,	 // (0x436052a) // 4 (0x04) 54 (0x36) 5 (0x05) 42 (0x2a)  CRC: 0x0E679F71
	486826046,	 // (0x1d04603e) // 29 (0x1d) 4 (0x04) 96 (0x60) 62 (0x3e)  CRC: 0xEB212E3E
	498466827,	 // (0x1db6000b) // 29 (0x1d) 182 (0xb6) 0 (0x00) 11 (0x0b)  CRC: 0x2A24473E
	906370201,	 // (0x36061c99) // 54 (0x36) 6 (0x06) 28 (0x1c) 153 (0x99)  CRC: 0x466198A1
	4265222,	 // (0x411506) // 0 (0x00) 65 (0x41) 21 (0x15) 6 (0x06)  CRC: 0xF8E1BDE9
	271622144,	 // (0x1030a000) // 16 (0x10) 48 (0x30) 160 (0xa0) 0 (0x00)  CRC: 0xD099A5EE
	740099168,	 // (0x2c1d0460) // 44 (0x2c) 29 (0x1d) 4 (0x04) 96 (0x60)  CRC: 0x2E863A14
	1042093316,	 // (0x3e1d1504) // 62 (0x3e) 29 (0x1d) 21 (0x15) 4 (0x04)  CRC: 0xFC69A031
	-1610611447,	 // (0xa0000509) // 160 (0xa0) 0 (0x00) 5 (0x05) 9 (0x09)  CRC: 0x0DFABF3B
	-1389748810,	 // (0xad2a1db6) // 173 (0xad) 42 (0x2a) 29 (0x1d) 182 (0xb6)  CRC: 0xBC9E1CCC
	725215,	 // (0xb10df) // 0 (0x00) 11 (0x0b) 16 (0x10) 223 (0xdf)  CRC: 0xF2D546F4
	2115000480,	 // (0x7e1058a0) // 126 (0x7e) 16 (0x10) 88 (0x58) 160 (0xa0)  CRC: 0x8C73D2CD
	856080,	 // (0xd1010) // 0 (0x00) 13 (0x0d) 16 (0x10) 16 (0x10)  CRC: 0x99E184BD
	1008534624,	 // (0x3c1d0460) // 60 (0x3c) 29 (0x1d) 4 (0x04) 96 (0x60)  CRC: 0x4F1C14C0
	1051131927,	 // (0x3ea70017) // 62 (0x3e) 167 (0xa7) 0 (0x00) 23 (0x17)  CRC: 0xBE634CD5
	268975271,	 // (0x10083ca7) // 16 (0x10) 8 (0x08) 60 (0x3c) 167 (0xa7)  CRC: 0xFCD15314
	1119494,	 // (0x111506) // 0 (0x00) 17 (0x11) 21 (0x15) 6 (0x06)  CRC: 0x0C46F97A
	270770176,	 // (0x1023a000) // 16 (0x10) 35 (0x23) 160 (0xa0) 0 (0x00)  CRC: 0x5AAA2F66
	168824892,	 // (0xa10103c) // 10 (0x0a) 16 (0x10) 16 (0x10) 60 (0x3c)  CRC: 0x287459B0
	486826046,	 // (0x1d04603e) // 29 (0x1d) 4 (0x04) 96 (0x60) 62 (0x3e)  CRC: 0xA193B7B6
	487916704,	 // (0x1d1504a0) // 29 (0x1d) 21 (0x15) 4 (0x04) 160 (0xa0)  CRC: 0xF003BB0C
	768768,	 // (0xbbb00) // 0 (0x00) 11 (0x0b) 187 (0xbb) 0 (0x00)  CRC: 0x297657FB
	140097280,	 // (0x859b700) // 8 (0x08) 89 (0x59) 183 (0xb7) 0 (0x00)  CRC: 0xBFAEADAF
	163517440,	 // (0x9bf1400) // 9 (0x09) 191 (0xbf) 20 (0x14) 0 (0x00)  CRC: 0xC2C408A8
	203130221,	 // (0xc1b856d) // 12 (0x0c) 27 (0x1b) 133 (0x85) 109 (0x6d)  CRC: 0x5E0574D8
	923211013,	 // (0x37071505) // 55 (0x37) 7 (0x07) 21 (0x15) 5 (0x05)  CRC: 0x5CA95A8C
	-1728047340,	 // (0x99001714) // 153 (0x99) 0 (0x00) 23 (0x17) 20 (0x14)  CRC: 0xC85F067C
	793477,	 // (0xc1b85) // 0 (0x00) 12 (0x0c) 27 (0x1b) 133 (0x85)  CRC: 0x062A16EF
	1897596004,	 // (0x711b0464) // 113 (0x71) 27 (0x1b) 4 (0x04) 100 (0x64)  CRC: 0xB205D904
	-2053858816,	 // (0x85949a00) // 133 (0x85) 148 (0x94) 154 (0x9a) 0 (0x00)  CRC: 0xCCEDE4F9
	152438538,	 // (0x916070a) // 9 (0x09) 22 (0x16) 7 (0x07) 10 (0x0a)  CRC: 0xC1747CE5
	1630996233,	 // (0x61370709) // 97 (0x61) 55 (0x37) 7 (0x07) 9 (0x09)  CRC: 0x1F2F5F64
	923344149,	 // (0x37091d15) // 55 (0x37) 9 (0x09) 29 (0x1d) 21 (0x15)  CRC: 0xA1CB746A
	77725782,	 // (0x4a20056) // 4 (0x04) 162 (0xa2) 0 (0x00) 86 (0x56)  CRC: 0x463D3D7C
	369691028,	 // (0x16090994) // 22 (0x16) 9 (0x09) 9 (0x09) 148 (0x94)  CRC: 0xEBFFDE63
	-1694495978,	 // (0x9b000b16) // 155 (0x9b) 0 (0x00) 11 (0x0b) 22 (0x16)  CRC: 0x9B4FC3EC
	152438676,	 // (0x9160794) // 9 (0x09) 22 (0x16) 7 (0x07) 148 (0x94)  CRC: 0x0B4CA139
	-1644164165,	 // (0x9e000bbb) // 158 (0x9e) 0 (0x00) 11 (0x0b) 187 (0xbb)  CRC: 0x57651973
	547255,	 // (0x859b7) // 0 (0x00) 8 (0x08) 89 (0x59) 183 (0xb7)  CRC: 0x9D9B04FC
	638762,	 // (0x9bf2a) // 0 (0x00) 9 (0x09) 191 (0xbf) 42 (0x2a)  CRC: 0x3A2F4F92
	488440928,	 // (0x1d1d0460) // 29 (0x1d) 29 (0x1d) 4 (0x04) 96 (0x60)  CRC: 0xF4E83877
	1052114955,	 // (0x3eb6000b) // 62 (0x3e) 182 (0xb6) 0 (0x00) 11 (0x0b)  CRC: 0xDB9092F7
	465043470,	 // (0x1bb8000e) // 27 (0x1b) 184 (0xb8) 0 (0x00) 14 (0x0e)  CRC: 0x2B198BCF
	906368521,	 // (0x36061609) // 54 (0x36) 6 (0x06) 22 (0x16) 9 (0x09)  CRC: 0x69B53B3C
	461728021,	 // (0x1b856915) // 27 (0x1b) 133 (0x85) 105 (0x69) 21 (0x15)  CRC: 0x9C253CA0
	109404471,	 // (0x6856137) // 6 (0x06) 133 (0x85) 97 (0x61) 55 (0x37)  CRC: 0xA55D2ECB
	152372891,	 // (0x915069b) // 9 (0x09) 21 (0x15) 6 (0x06) 155 (0x9b)  CRC: 0xDFACF5C6
	1578505,	 // (0x181609) // 0 (0x00) 24 (0x18) 22 (0x16) 9 (0x09)  CRC: 0x3EA33EEF
	160734463,	 // (0x9949cff) // 9 (0x09) 148 (0x94) 156 (0x9c) 255 (0xff)  CRC: 0xD17314EA
	-1072364135,	 // (0xc0150599) // 192 (0xc0) 21 (0x15) 5 (0x05) 153 (0x99)  CRC: 0x192E3BF7
	792073,	 // (0xc1609) // 0 (0x00) 12 (0x0c) 22 (0x16) 9 (0x09)  CRC: 0x4F8C6F48
	335548308,	 // (0x14000f94) // 20 (0x14) 0 (0x00) 15 (0x0f) 148 (0x94)  CRC: 0x66BA4BA7
	-1711295813,	 // (0x99ffb2bb) // 153 (0x99) 255 (0xff) 178 (0xb2) 187 (0xbb)  CRC: 0xC8B033F5
	547255,	 // (0x859b7) // 0 (0x00) 8 (0x08) 89 (0x59) 183 (0xb7)  CRC: 0xD1DF80AF
	638741,	 // (0x9bf15) // 0 (0x00) 9 (0x09) 191 (0xbf) 21 (0x15)  CRC: 0x5583E1C8
	93913097,	 // (0x5990009) // 5 (0x05) 153 (0x99) 0 (0x00) 9 (0x09)  CRC: 0xDA9C4B91
	369718695,	 // (0x160975a7) // 22 (0x16) 9 (0x09) 117 (0x75) 167 (0xa7)  CRC: 0xAD16CD08
	333321,	 // (0x51609) // 0 (0x00) 5 (0x05) 22 (0x16) 9 (0x09)  CRC: 0x5F702DD7
	-1392508928,	 // (0xad000000) // 173 (0xad)  CRC: 0x6133FCF7
	1630797047,	// CRC do Jardel: 0x6133FCF7
	0,	//	synchronized?, exception table length
//	7092: <clinit>()V
	270842885,	 // (0x1024bc05) // 16 (0x10) 36 (0x24) 188 (0xbc) 5 (0x05)  CRC: 0x4A60D779
	1493372976,	 // (0x59031030) // 89 (0x59) 3 (0x03) 16 (0x10) 48 (0x30)  CRC: 0xD7368A0A
	1431897104,	 // (0x55590410) // 85 (0x55) 89 (0x59) 4 (0x04) 16 (0x10)  CRC: 0xAFF13413
	827676933,	 // (0x31555905) // 49 (0x31) 85 (0x55) 89 (0x59) 5 (0x05)  CRC: 0xF2246A5F
	271734105,	 // (0x10325559) // 16 (0x10) 50 (0x32) 85 (0x55) 89 (0x59)  CRC: 0x5368FD98
	101725013,	 // (0x6103355) // 6 (0x06) 16 (0x10) 51 (0x33) 85 (0x55)  CRC: 0x406DA69C
	1493635124,	 // (0x59071034) // 89 (0x59) 7 (0x07) 16 (0x10) 52 (0x34)  CRC: 0xD2A96061
	1431898128,	 // (0x55590810) // 85 (0x55) 89 (0x59) 8 (0x08) 16 (0x10)  CRC: 0xB2E1CE81
	894785808,	 // (0x35555910) // 53 (0x35) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0xF05D88B5
	101725781,	 // (0x6103655) // 6 (0x06) 16 (0x10) 54 (0x36) 85 (0x55)  CRC: 0x05ED26B1
	1494222608,	 // (0x59100710) // 89 (0x59) 16 (0x10) 7 (0x07) 16 (0x10)  CRC: 0xCD15EDD5
	928340240,	 // (0x37555910) // 55 (0x37) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x5202125F
	135280725,	 // (0x8103855) // 8 (0x08) 16 (0x10) 56 (0x38) 85 (0x55)  CRC: 0xF14BFEC0
	1494223120,	 // (0x59100910) // 89 (0x59) 16 (0x10) 9 (0x09) 16 (0x10)  CRC: 0xBFC8BC57
	961894672,	 // (0x39555910) // 57 (0x39) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x72705C1B
	168845653,	 // (0xa106155) // 10 (0x0a) 16 (0x10) 97 (0x61) 85 (0x55)  CRC: 0x2CC3141D
	1494223632,	 // (0x59100b10) // 89 (0x59) 16 (0x10) 11 (0x0b) 16 (0x10)  CRC: 0x6EFC9E27
	1649760528,	 // (0x62555910) // 98 (0x62) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x3C387963
	202400597,	 // (0xc106355) // 12 (0x0c) 16 (0x10) 99 (0x63) 85 (0x55)  CRC: 0xD42E0FD6
	1494224144,	 // (0x59100d10) // 89 (0x59) 16 (0x10) 13 (0x0d) 16 (0x10)  CRC: 0xCEE97F4C
	1683314960,	 // (0x64555910) // 100 (0x64) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0xC71FD70E
	235955541,	 // (0xe106555) // 14 (0x0e) 16 (0x10) 101 (0x65) 85 (0x55)  CRC: 0x442DB6AF
	1494224656,	 // (0x59100f10) // 89 (0x59) 16 (0x10) 15 (0x0f) 16 (0x10)  CRC: 0xB691D9BE
	1716869392,	 // (0x66555910) // 102 (0x66) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x622B057A
	269510485,	 // (0x10106755) // 16 (0x10) 16 (0x10) 103 (0x67) 85 (0x55)  CRC: 0x7AB009FA
	1494225168,	 // (0x59101110) // 89 (0x59) 16 (0x10) 17 (0x11) 16 (0x10)  CRC: 0x1CFD70DA
	1750423824,	 // (0x68555910) // 104 (0x68) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x561CD530
	303065429,	 // (0x12106955) // 18 (0x12) 16 (0x10) 105 (0x69) 85 (0x55)  CRC: 0xF32F0C8A
	1494225680,	 // (0x59101310) // 89 (0x59) 16 (0x10) 19 (0x13) 16 (0x10)  CRC: 0x11B643BB
	1783978256,	 // (0x6a555910) // 106 (0x6a) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x96163951
	336620373,	 // (0x14106b55) // 20 (0x14) 16 (0x10) 107 (0x6b) 85 (0x55)  CRC: 0x14F8B361
	1494226192,	 // (0x59101510) // 89 (0x59) 16 (0x10) 21 (0x15) 16 (0x10)  CRC: 0xF71CF543
	1817532688,	 // (0x6c555910) // 108 (0x6c) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0xF34CCF6A
	370175317,	 // (0x16106d55) // 22 (0x16) 16 (0x10) 109 (0x6d) 85 (0x55)  CRC: 0x0D89B73B
	1494226704,	 // (0x59101710) // 89 (0x59) 16 (0x10) 23 (0x17) 16 (0x10)  CRC: 0x656B0AFC
	1851087120,	 // (0x6e555910) // 110 (0x6e) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x8957E6AC
	403730261,	 // (0x18106f55) // 24 (0x18) 16 (0x10) 111 (0x6f) 85 (0x55)  CRC: 0x957035A9
	1494227216,	 // (0x59101910) // 89 (0x59) 16 (0x10) 25 (0x19) 16 (0x10)  CRC: 0x7A7BB96A
	1884641552,	 // (0x70555910) // 112 (0x70) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x09304236
	437285205,	 // (0x1a107155) // 26 (0x1a) 16 (0x10) 113 (0x71) 85 (0x55)  CRC: 0x8821A06A
	1494227728,	 // (0x59101b10) // 89 (0x59) 16 (0x10) 27 (0x1b) 16 (0x10)  CRC: 0xE8FCD3F6
	1918195984,	 // (0x72555910) // 114 (0x72) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x5F4962E7
	470840149,	 // (0x1c107355) // 28 (0x1c) 16 (0x10) 115 (0x73) 85 (0x55)  CRC: 0x1DAEBC6B
	1494228240,	 // (0x59101d10) // 89 (0x59) 16 (0x10) 29 (0x1d) 16 (0x10)  CRC: 0x21217A9A
	1951750416,	 // (0x74555910) // 116 (0x74) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0xFBE261F0
	504395093,	 // (0x1e107555) // 30 (0x1e) 16 (0x10) 117 (0x75) 85 (0x55)  CRC: 0xDB57CD89
	1494228752,	 // (0x59101f10) // 89 (0x59) 16 (0x10) 31 (0x1f) 16 (0x10)  CRC: 0x49F305DD
	1985304848,	 // (0x76555910) // 118 (0x76) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x52C43B2D
	537950037,	 // (0x20107755) // 32 (0x20) 16 (0x10) 119 (0x77) 85 (0x55)  CRC: 0x3DEFBC86
	1494229264,	 // (0x59102110) // 89 (0x59) 16 (0x10) 33 (0x21) 16 (0x10)  CRC: 0x67679F32
	2018859280,	 // (0x78555910) // 120 (0x78) 85 (0x55) 89 (0x59) 16 (0x10)  CRC: 0x0E991DFE
	571504981,	 // (0x22107955) // 34 (0x22) 16 (0x10) 121 (0x79) 85 (0x55)  CRC: 0x27101698
	1494229776,	 // (0x59102310) // 89 (0x59) 16 (0x10) 35 (0x23) 16 (0x10)  CRC: 0x99140AA8
	2052448512,	 // (0x7a55e100) // 122 (0x7a) 85 (0x55) 225 (0xe1) 0 (0x00)  CRC: 0x3AA48CB8
	-1431240704,	 // (0xaab10000) // 170 (0xaa) 177 (0xb1)  CRC: 0xE03854F1
	-533179151,	// CRC do Jardel: 0xE03854F1
	0,	//	synchronized?, exception table length
//	java.lang.IllegalStateException
//	7149: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	7153: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	7157: <init>(Ljava/lang/String;Ljava/lang/Throwable;)V
	707472567,	 // (0x2a2b2cb7) // 42 (0x2a) 43 (0x2b) 44 (0x2c) 183 (0xb7)  CRC: 0xFA82A471
	241920,	 // (0x3b100) // 0 (0x00) 3 (0x03) 177 (0xb1)  CRC: 0x7A9B4B44
	2056997700,	// CRC do Jardel: 0x7A9B4B44
	0,	//	synchronized?, exception table length
//	7161: <init>(Ljava/lang/Throwable;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	78708736,	 // (0x4b10000) // 4 (0x04) 177 (0xb1)  CRC: 0xD46C10C9
	-731115319,	// CRC do Jardel: 0xD46C10C9
	0,	//	synchronized?, exception table length
//	java.io.OutputStream
//	7165: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	7169: write(I)V
//	abstract
//	7169: write([B)V
	707461931,	 // (0x2a2b032b) // 42 (0x2a) 43 (0x2b) 3 (0x03) 43 (0x2b)  CRC: 0x1EB4D38D
	-1095368702,	 // (0xbeb60002) // 190 (0xbe) 182 (0xb6) 0 (0x00) 2 (0x02)  CRC: 0x9009A1F6
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x0418D711
	68736785,	// CRC do Jardel: 0x0418D711
	0,	//	synchronized?, exception table length
//	7174: write([BII)V
	479920143,	 // (0x1c9b000f) // 28 (0x1c) 155 (0x9b) 0 (0x00) 15 (0x0f)  CRC: 0xF60B797F
	496697355,	 // (0x1d9b000b) // 29 (0x1d) 155 (0x9b) 0 (0x00) 11 (0x0b)  CRC: 0xD96AF817
	471687211,	 // (0x1c1d602b) // 28 (0x1c) 29 (0x1d) 96 (0x60) 43 (0x2b)  CRC: 0x84797A13
	-1096548341,	 // (0xbea4000b) // 190 (0xbe) 164 (0xa4) 0 (0x00) 11 (0x0b)  CRC: 0x60C0E97D
	-1157627047,	 // (0xbb000359) // 187 (0xbb) 0 (0x00) 3 (0x03) 89 (0x59)  CRC: 0x5C5A2371
	-1224735553,	 // (0xb70004bf) // 183 (0xb7) 0 (0x00) 4 (0x04) 191 (0xbf)  CRC: 0x89988B93
	53871637,	 // (0x3360415) // 3 (0x03) 54 (0x36) 4 (0x04) 21 (0x15)  CRC: 0xA6807471
	69050880,	 // (0x41da200) // 4 (0x04) 29 (0x1d) 162 (0xa2) 0 (0x00)  CRC: 0x7A8178B6
	371862300,	 // (0x162a2b1c) // 22 (0x16) 42 (0x2a) 43 (0x2b) 28 (0x1c)  CRC: 0x21E86370
	352608307,	 // (0x15046033) // 21 (0x15) 4 (0x04) 96 (0x60) 51 (0x33)  CRC: 0x44D7AB2E
	-1241512683,	 // (0xb6000515) // 182 (0xb6) 0 (0x00) 5 (0x05) 21 (0x15)  CRC: 0x27B5F066
	67395638,	 // (0x4046036) // 4 (0x04) 4 (0x04) 96 (0x60) 54 (0x36)  CRC: 0xB90FC60E
	78118890,	 // (0x4a7ffea) // 4 (0x04) 167 (0xa7) 255 (0xff) 234 (0xea)  CRC: 0x66E47828
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xA137BB7E
	-1590183042,	// CRC do Jardel: 0xA137BB7E
	0,	//	synchronized?, exception table length
//	7190: flush()V
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xB9FF90C9
	-1174433591,	// CRC do Jardel: 0xB9FF90C9
	0,	//	synchronized?, exception table length
//	7193: close()V
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xB9FF90C9
	-1174433591,	// CRC do Jardel: 0xB9FF90C9
	0,	//	synchronized?, exception table length
//	java.lang.VirtualMachineError
//	7196: <init>()V
	716636161,	 // (0x2ab70001) // 42 (0x2a) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xEE75F156
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x08D8DEE5
	148430565,	// CRC do Jardel: 0x08D8DEE5
	0,	//	synchronized?, exception table length
//	7200: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	java.lang.ArrayIndexOutOfBoundsException
//	7204: <init>()V
	705823159,	 // (0x2a1201b7) // 42 (0x2a) 18 (0x12) 1 (0x01) 183 (0xb7)  CRC: 0xA14B6189
	176384,	 // (0x2b100) // 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0x793FF3E5
	2034234341,	// CRC do Jardel: 0x793FF3E5
	0,	//	synchronized?, exception table length
//	7208: <init>(Ljava/lang/String;)V
	707507968,	 // (0x2a2bb700) // 42 (0x2a) 43 (0x2b) 183 (0xb7) 0 (0x00)  CRC: 0xA06B1614
	45154304,	 // (0x2b10000) // 2 (0x02) 177 (0xb1)  CRC: 0xCEEA5D7B
	-823501445,	// CRC do Jardel: 0xCEEA5D7B
	0,	//	synchronized?, exception table length
//	7212: <init>(I)V
	716898307,	 // (0x2abb0003) // 42 (0x2a) 187 (0xbb) 0 (0x00) 3 (0x03)  CRC: 0x9D03BB74
	1505165316,	 // (0x59b70004) // 89 (0x59) 183 (0xb7) 0 (0x00) 4 (0x04)  CRC: 0x109EB542
	302364160,	 // (0x1205b600) // 18 (0x12) 5 (0x05) 182 (0xb6) 0 (0x00)  CRC: 0x082D07D1
	102479360,	 // (0x61bb600) // 6 (0x06) 27 (0x1b) 182 (0xb6) 0 (0x00)  CRC: 0xD47B604F
	129368072,	 // (0x7b60008) // 7 (0x07) 182 (0xb6) 0 (0x00) 8 (0x08)  CRC: 0x7D25B1AB
	-1224736079,	 // (0xb70002b1) // 183 (0xb7) 0 (0x00) 2 (0x02) 177 (0xb1)  CRC: 0xD58E5A57
	-712091049,	// CRC do Jardel: 0xD58E5A57
	0,	//	synchronized?, exception table length
//	com.jopdesign.sys.RtThreadImpl
//	7220: init()V
	-1308586492,	 // (0xb2008e04) // 178 (0xb2) 0 (0x00) 142 (0x8e) 4 (0x04)  CRC: 0x2E0936BF
	-1610611535,	 // (0xa00004b1) // 160 (0xa0) 0 (0x00) 4 (0x04) 177 (0xb1)  CRC: 0x1D9F7822
	78839950,	 // (0x4b3008e) // 4 (0x04) 179 (0xb3) 0 (0x00) 142 (0x8e)  CRC: 0x725B598A
	62062735,	 // (0x3b3008f) // 3 (0x03) 179 (0xb3) 0 (0x00) 143 (0x8f)  CRC: 0xD661BFED
	31522987,	 // (0x1e100ab) // 1 (0x01) 225 (0xe1) 0 (0x00) 171 (0xab)  CRC: 0x17561EAE
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x8F75D040
	-1888104384,	// CRC do Jardel: 0x8F75D040
	0,	//	synchronized?, exception table length
//	7228: <init>(II)V
	704715548,	 // (0x2a011b1c) // 42 (0x2a) 1 (0x01) 27 (0x1b) 28 (0x1c)  CRC: 0x069D0187
	62324737,	 // (0x3b70001) // 3 (0x03) 183 (0xb7) 0 (0x00) 1 (0x01)  CRC: 0xC8815301
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xFD53FFB7
	-44826697,	// CRC do Jardel: 0xFD53FFB7
	0,	//	synchronized?, exception table length
//	7233: <init>(Ljoprt/RtThread;III)V
	716636162,	 // (0x2ab70002) // 42 (0x2a) 183 (0xb7) 0 (0x00) 2 (0x02)  CRC: 0x8E024338
	-1308586342,	 // (0xb2008e9a) // 178 (0xb2) 0 (0x00) 142 (0x8e) 154 (0x9a)  CRC: 0x1B3BF1A5
	440320,	 // (0x6b800) // 0 (0x00) 6 (0x06) 184 (0xb8) 0 (0x00)  CRC: 0xA2ABEB30
	53088512,	 // (0x32a1100) // 3 (0x03) 42 (0x2a) 17 (0x11) 0 (0x00)  CRC: 0xFF0A4B52
	-1061418269,	 // (0xc0bc0ae3) // 192 (0xc0) 188 (0xbc) 10 (0x0a) 227 (0xe3)  CRC: 0x9A639EC7
	535056,	 // (0x82a10) // 0 (0x00) 8 (0x08) 42 (0x2a) 16 (0x10)  CRC: 0xAEE65800
	1085603849,	 // (0x40b50009) // 64 (0x40) 181 (0xb5) 0 (0x00) 9 (0x09)  CRC: 0x3FACCD97
	53871893,	 // (0x3360515) // 3 (0x03) 54 (0x36) 5 (0x05) 21 (0x15)  CRC: 0x4AC5A5DF
	85000384,	 // (0x51100c0) // 5 (0x05) 17 (0x11) 0 (0x00) 192 (0xc0)  CRC: 0xB69A382E
	-1577052886,	 // (0xa200152a) // 162 (0xa2) 0 (0x00) 21 (0x15) 42 (0x2a)  CRC: 0xD5CF3171
	-503314411,	 // (0xe2000815) // 226 (0xe2) 0 (0x00) 8 (0x08) 21 (0x15)  CRC: 0x2236F933
	85066831,	 // (0x512044f) // 5 (0x05) 18 (0x12) 4 (0x04) 79 (0x4f)  CRC: 0x92D827D3
	352650336,	 // (0x15050460) // 21 (0x15) 5 (0x05) 4 (0x04) 96 (0x60)  CRC: 0x9F1FE7D5
	906340351,	 // (0x3605a7ff) // 54 (0x36) 5 (0x05) 167 (0xa7) 255 (0xff)  CRC: 0x7487B5D1
	-383112221,	 // (0xe92a2be3) // 233 (0xe9) 42 (0x2a) 43 (0x2b) 227 (0xe3)  CRC: 0x4EF4151A
	10781,	 // (0x2a1d) // 0 (0x00) 0 (0x00) 42 (0x2a) 29 (0x1d)  CRC: 0x2F665C42
	-1258290646,	 // (0xb500022a) // 181 (0xb5) 0 (0x00) 2 (0x02) 42 (0x2a)  CRC: 0xE340ED26
	352630016,	 // (0x1504b500) // 21 (0x15) 4 (0x04) 181 (0xb5) 0 (0x00)  CRC: 0x257A36A9
	52271616,	 // (0x31d9a00) // 3 (0x03) 29 (0x1d) 154 (0x9a) 0 (0x00)  CRC: 0xEDBCC89C
	187309237,	 // (0xb2a1cb5) // 11 (0x0b) 42 (0x2a) 28 (0x1c) 181 (0xb5)  CRC: 0x706F81FA
	108288,	 // (0x1a700) // 0 (0x00) 1 (0x01) 167 (0xa7) 0 (0x00)  CRC: 0x7CE80E38
	220863504,	 // (0xd2a1c10) // 13 (0x0d) 42 (0x2a) 28 (0x1c) 16 (0x10)  CRC: 0xA3159B13
	174064992,	 // (0xa600560) // 10 (0x0a) 96 (0x60) 5 (0x05) 96 (0x60)  CRC: 0x6F4BF949
	-1258290902,	 // (0xb500012a) // 181 (0xb5) 0 (0x00) 1 (0x01) 42 (0x2a)  CRC: 0x1D09A713
	62193669,	 // (0x3b50005) // 3 (0x03) 181 (0xb5) 0 (0x00) 5 (0x05)  CRC: 0xFD51A37A
	704886016,	 // (0x2a03b500) // 42 (0x2a) 3 (0x03) 181 (0xb5) 0 (0x00)  CRC: 0x4FC88DA7
	81789099,	 // (0x4e000ab) // 4 (0x04) 224 (0xe0) 0 (0x00) 171 (0xab)  CRC: 0xF5AD285E
	973406522,	 // (0x3a05013a) // 58 (0x3a) 5 (0x05) 1 (0x01) 58 (0x3a)  CRC: 0xCE0EEB27
	102303174,	 // (0x61905c6) // 6 (0x06) 25 (0x19) 5 (0x05) 198 (0xc6)  CRC: 0x3A6E2502
	1911476,	 // (0x1d2ab4) // 0 (0x00) 29 (0x1d) 42 (0x2a) 180 (0xb4)  CRC: 0x5D92871E
	71941,	 // (0x11905) // 0 (0x00) 1 (0x01) 25 (0x19) 5 (0x05)  CRC: 0x28D2EB89
	-1275067997,	 // (0xb40001a3) // 180 (0xb4) 0 (0x00) 1 (0x01) 163 (0xa3)  CRC: 0x44D03DF0
	1120517,	 // (0x111905) // 0 (0x00) 17 (0x11) 25 (0x19) 5 (0x05)  CRC: 0xFE6909C9
	973478149,	 // (0x3a061905) // 58 (0x3a) 6 (0x06) 25 (0x19) 5 (0x05)  CRC: 0x9A5D73D6
	-503313606,	 // (0xe2000b3a) // 226 (0xe2) 0 (0x00) 11 (0x0b) 58 (0x3a)  CRC: 0xE714FCA8
	94896100,	 // (0x5a7ffe4) // 5 (0x05) 167 (0xa7) 255 (0xff) 228 (0xe4)  CRC: 0xA4E5EA7C
	706282979,	 // (0x2a1905e3) // 42 (0x2a) 25 (0x19) 5 (0x05) 227 (0xe3)  CRC: 0x8F3B3C19
	727302,	 // (0xb1906) // 0 (0x00) 11 (0x0b) 25 (0x19) 6 (0x06)  CRC: 0xD2200E7E
	-973075431,	 // (0xc6000c19) // 198 (0xc6) 0 (0x00) 12 (0x0c) 25 (0x19)  CRC: 0x28725DDA
	103473920,	 // (0x62ae300) // 6 (0x06) 42 (0x2a) 227 (0xe3) 0 (0x00)  CRC: 0x81EB9602
	195493895,	 // (0xba70007) // 11 (0x0b) 167 (0xa7) 0 (0x00) 7 (0x07)  CRC: 0x0BEFA636
	719388843,	 // (0x2ae100ab) // 42 (0x2a) 225 (0xe1) 0 (0x00) 171 (0xab)  CRC: 0xE93DF8C3
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x063DB70D
	104707853,	// CRC do Jardel: 0x063DB70D
	0,	//	synchronized?, exception table length
//	7278: setProcessor(I)V
	706458880,	 // (0x2a1bb500) // 42 (0x2a) 27 (0x1b) 181 (0xb5) 0 (0x00)  CRC: 0x9328E22F
	112263168,	 // (0x6b10000) // 6 (0x06) 177 (0xb1)  CRC: 0x9D43B86B
	-1656506261,	// CRC do Jardel: 0x9D43B86B
	0,	//	synchronized?, exception table length
//	7282: genInt()V
	51413714,	 // (0x31082d2) // 3 (0x03) 16 (0x10) 130 (0x82) 210 (0xd2)  CRC: 0xCE0E0F76
	54204944,	 // (0x33b1a10) // 3 (0x03) 59 (0x3b) 26 (0x1a) 16 (0x10)  CRC: 0x21ABFC41
	178389002,	 // (0xaa2000a) // 10 (0x0a) 162 (0xa2) 0 (0x00) 10 (0x0a)  CRC: 0x89DF9EF9
	436494395,	 // (0x1a04603b) // 26 (0x1a) 4 (0x04) 96 (0x60) 59 (0x3b)  CRC: 0xB68BD85D
	-1476397391,	 // (0xa7fff6b1) // 167 (0xa7) 255 (0xff) 246 (0xf6) 177 (0xb1)  CRC: 0xF5179E1B
	-183001573,	// CRC do Jardel: 0xF5179E1B
	0,	//	synchronized?, exception table length
//	7289: startThread()V
	716439557,	 // (0x2ab40005) // 42 (0x2a) 180 (0xb4) 0 (0x00) 5 (0x05)  CRC: 0xE06BE280
	-1728052047,	 // (0x990004b1) // 153 (0x99) 0 (0x00) 4 (0x04) 177 (0xb1)  CRC: 0x91D9824E
	716439554,	 // (0x2ab40002) // 42 (0x2a) 180 (0xb4) 0 (0x00) 2 (0x02)  CRC: 0xD3EA6287
	-1711273174,	 // (0x9a000b2a) // 154 (0x9a) 0 (0x00) 11 (0x0b) 42 (0x2a)  CRC: 0x53F40346
	78970885,	 // (0x4b50005) // 4 (0x04) 181 (0xb5) 0 (0x00) 5 (0x05)  CRC: 0x37C4D0F4
	-1493170134,	 // (0xa700082a) // 167 (0xa7) 0 (0x00) 8 (0x08) 42 (0x2a)  CRC: 0x9BF37566
	95748101,	 // (0x5b50005) // 5 (0x05) 181 (0xb5) 0 (0x00) 5 (0x05)  CRC: 0xB45077AB
	716636166,	 // (0x2ab70006) // 42 (0x2a) 183 (0xb7) 0 (0x00) 6 (0x06)  CRC: 0xC2A7DEAB
	-1308586087,	 // (0xb2008f99) // 178 (0xb2) 0 (0x00) 143 (0x8f) 153 (0x99)  CRC: 0x58979B06
	3025634,	 // (0x2e2ae2) // 0 (0x00) 46 (0x2e) 42 (0x2a) 226 (0xe2)  CRC: 0x03985F45
	46592,	 // (0xb600) // 0 (0x00) 0 (0x00) 182 (0xb6) 0 (0x00)  CRC: 0x9EA77CCF
	120194741,	 // (0x72a06b5) // 7 (0x07) 42 (0x2a) 6 (0x06) 181 (0xb5)  CRC: 0x6AAC26AA
	385024,	 // (0x5e000) // 0 (0x00) 5 (0x05) 224 (0xe0) 0 (0x00)  CRC: 0x8D6B78BE
	-1629486932,	 // (0x9ee000ac) // 158 (0x9e) 224 (0xe0) 0 (0x00) 172 (0xac)  CRC: 0xF7A04AEE
	-1275066830,	 // (0xb4000632) // 180 (0xb4) 0 (0x00) 6 (0x06) 50 (0x32)  CRC: 0x381C8F48
	-503316438,	 // (0xe200002a) // 226 (0xe2) 0 (0x00) 0 (0x00) 42 (0x2a)  CRC: 0xBE8D7E46
	-1275066608,	 // (0xb4000710) // 180 (0xb4) 0 (0x00) 7 (0x07) 16 (0x10)  CRC: 0x0A380266
	-2117004978,	 // (0x81d1114e) // 129 (0x81) 209 (0xd1) 17 (0x11) 78 (0x4e)  CRC: 0xE3708267
	543182776,	 // (0x20604fb8) // 32 (0x20) 96 (0x60) 79 (0x4f) 184 (0xb8)  CRC: 0xFB91D020
	632831,	 // (0x9a7ff) // 0 (0x00) 9 (0x09) 167 (0xa7) 255 (0xff)  CRC: 0x4D50E42E
	-458162176,	 // (0xe4b10000) // 228 (0xe4) 177 (0xb1)  CRC: 0x57EA6638
	1474979384,	// CRC do Jardel: 0x57EA6638
	0,	//	synchronized?, exception table length
//	7312: createStack()V
	-683926777,	 // (0xd73c1b07) // 215 (0xd7) 60 (0x3c) 27 (0x1b) 7 (0x07)  CRC: 0xFDE67388
	1691696412,	 // (0x64d53d1c) // 100 (0x64) 213 (0xd5) 61 (0x3d) 28 (0x1c)  CRC: 0x7D76A68A
	124048701,	 // (0x764d53d) // 7 (0x07) 100 (0x64) 213 (0xd5) 61 (0x3d)  CRC: 0x3FC0FA5A
	706419812,	 // (0x2a1b1c64) // 42 (0x2a) 27 (0x1b) 28 (0x1c) 100 (0x64)  CRC: 0xE00EB54F
	272654517,	 // (0x104060b5) // 16 (0x10) 64 (0x40) 96 (0x60) 181 (0xb5)  CRC: 0xE56ABA60
	597054,	 // (0x91c3e) // 0 (0x00) 9 (0x09) 28 (0x1c) 62 (0x3e)  CRC: 0x212BD424
	471573248,	 // (0x1c1ba300) // 28 (0x1c) 27 (0x1b) 163 (0xa3) 0 (0x00)  CRC: 0x5860F22A
	338354688,	 // (0x142ae200) // 20 (0x14) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x81659E7D
	136060260,	 // (0x81c1d64) // 8 (0x08) 28 (0x1c) 29 (0x1d) 100 (0x64)  CRC: 0xB6FA1078
	483741468,	 // (0x1cd54f1c) // 28 (0x1c) 213 (0xd5) 79 (0x4f) 28 (0x1c)  CRC: 0x2EDA2A5E
	73416103,	 // (0x4603da7) // 4 (0x04) 96 (0x60) 61 (0x3d) 167 (0xa7)  CRC: 0x1BE34655
	-1237744,	 // (0xffed1d10) // 255 (0xff) 237 (0xed) 29 (0x1d) 16 (0x10)  CRC: 0xAB40ED79
	-1067434454,	 // (0xc0603e2a) // 192 (0xc0) 96 (0x60) 62 (0x3e) 42 (0x2a)  CRC: 0x2027571E
	-503314390,	 // (0xe200082a) // 226 (0xe2) 0 (0x00) 8 (0x08) 42 (0x2a)  CRC: 0xAF47ECD6
	-1275066096,	 // (0xb4000910) // 180 (0xb4) 0 (0x00) 9 (0x09) 16 (0x10)  CRC: 0xAB6C8334
	1080296804,	 // (0x40640564) // 64 (0x40) 100 (0x64) 5 (0x05) 100 (0x64)  CRC: 0xF7A82505
	1546526052,	 // (0x5c2e1d64) // 92 (0x5c) 46 (0x2e) 29 (0x1d) 100 (0x64)  CRC: 0x5F0BE0D2
	1328210432,	 // (0x4f2ae200) // 79 (0x4f) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0x90BA354C
	137016320,	 // (0x82ab400) // 8 (0x08) 42 (0x2a) 180 (0xb4) 0 (0x00)  CRC: 0xD1B03F04
	152060004,	 // (0x9104064) // 9 (0x09) 16 (0x10) 64 (0x40) 100 (0x64)  CRC: 0x0B8837F0
	124017710,	 // (0x7645c2e) // 7 (0x07) 100 (0x64) 92 (0x5c) 46 (0x2e)  CRC: 0x7EE78DEF
	493113130,	 // (0x1d644f2a) // 29 (0x1d) 100 (0x64) 79 (0x4f) 42 (0x2a)  CRC: 0xB87680B0
	-503314390,	 // (0xe200082a) // 226 (0xe2) 0 (0x00) 8 (0x08) 42 (0x2a)  CRC: 0x44D386EC
	-1275066096,	 // (0xb4000910) // 180 (0xb4) 0 (0x00) 9 (0x09) 16 (0x10)  CRC: 0xE9B44774
	1080297316,	 // (0x40640764) // 64 (0x40) 100 (0x64) 7 (0x07) 100 (0x64)  CRC: 0xA24AEF85
	775760610,	 // (0x2e3d2ae2) // 46 (0x2e) 61 (0x3d) 42 (0x2a) 226 (0xe2)  CRC: 0x35200DD2
	531472,	 // (0x81c10) // 0 (0x00) 8 (0x08) 28 (0x1c) 16 (0x10)  CRC: 0xEA6D8E05
	1080296804,	 // (0x40640564) // 64 (0x40) 100 (0x64) 5 (0x05) 100 (0x64)  CRC: 0x36885060
	1546526052,	 // (0x5c2e1d64) // 92 (0x5c) 46 (0x2e) 29 (0x1d) 100 (0x64)  CRC: 0x926FCB3D
	1328210432,	 // (0x4f2ae200) // 79 (0x4f) 42 (0x2a) 226 (0xe2) 0 (0x00)  CRC: 0xD18764E3
	136056896,	 // (0x81c1040) // 8 (0x08) 28 (0x1c) 16 (0x10) 64 (0x40)  CRC: 0x6C56295F
	1678206044,	 // (0x6407645c) // 100 (0x64) 7 (0x07) 100 (0x64) 92 (0x5c)  CRC: 0x889706EF
	773678159,	 // (0x2e1d644f) // 46 (0x2e) 29 (0x1d) 100 (0x64) 79 (0x4f)  CRC: 0x644596C6
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xBE661435
	-1100606411,	// CRC do Jardel: 0xBE661435
	0,	//	synchronized?, exception table length
//	7348: startMission()V
	-1308586342,	 // (0xb2008e9a) // 178 (0xb2) 0 (0x00) 142 (0x8e) 154 (0x9a)  CRC: 0x46FEDAD7
	440320,	 // (0x6b800) // 0 (0x00) 6 (0x06) 184 (0xb8) 0 (0x00)  CRC: 0x702F688B
	50532480,	 // (0x3031080) // 3 (0x03) 3 (0x03) 16 (0x10) 128 (0x80)  CRC: 0x911BF69A
	-771551096,	 // (0xd2031088) // 210 (0xd2) 3 (0x03) 16 (0x10) 136 (0x88)  CRC: 0xA8B4DAF4
	-757071701,	 // (0xd2e000ab) // 210 (0xd2) 224 (0xe0) 0 (0x00) 171 (0xab)  CRC: 0x35319058
	1308835117,	 // (0x4e033d2d) // 78 (0x4e) 3 (0x03) 61 (0x3d) 45 (0x2d)  CRC: 0xB1F8E917
	-973070112,	 // (0xc60020e0) // 198 (0xc6) 0 (0x00) 32 (0x20) 224 (0xe0)  CRC: 0xDD3ABF6B
	10366388,	 // (0x9e2db4) // 0 (0x00) 158 (0x9e) 45 (0x2d) 180 (0xb4)  CRC: 0x73A8A1F0
	406105,	 // (0x63259) // 0 (0x00) 6 (0x06) 50 (0x32) 89 (0x59)  CRC: 0x4FE92D29
	-1275067644,	 // (0xb4000304) // 180 (0xb4) 0 (0x00) 3 (0x03) 4 (0x04)  CRC: 0xCD945DEB
	1622474755,	 // (0x60b50003) // 96 (0x60) 181 (0xb5) 0 (0x00) 3 (0x03)  CRC: 0x9328825D
	769785867,	 // (0x2de2000b) // 45 (0x2d) 226 (0xe2) 0 (0x00) 11 (0x0b)  CRC: 0x1C993BE1
	1310458976,	 // (0x4e1c0460) // 78 (0x4e) 28 (0x1c) 4 (0x04) 96 (0x60)  CRC: 0x6E5E7DB4
	1034420194,	 // (0x3da7ffe2) // 61 (0x3d) 167 (0xa7) 255 (0xff) 226 (0xe2)  CRC: 0x4786748E
	54205152,	 // (0x33b1ae0) // 3 (0x03) 59 (0x3b) 26 (0x1a) 224 (0xe0)  CRC: 0x0CF6EF0A
	11318272,	 // (0xacb400) // 0 (0x00) 172 (0xac) 180 (0xb4) 0 (0x00)  CRC: 0xECA24988
	195166226,	 // (0xba20012) // 11 (0x0b) 162 (0xa2) 0 (0x00) 18 (0x12)  CRC: 0xF87AE8E6
	-536830438,	 // (0xe0009e1a) // 224 (0xe0) 0 (0x00) 158 (0x9e) 26 (0x1a)  CRC: 0xF4AB0FCE
	850788364,	 // (0x32b6000c) // 50 (0x32) 182 (0xb6) 0 (0x00) 12 (0x0c)  CRC: 0x1E968D8F
	436494395,	 // (0x1a04603b) // 26 (0x1a) 4 (0x04) 96 (0x60) 59 (0x3b)  CRC: 0x1A454B62
	-1476400416,	 // (0xa7ffeae0) // 167 (0xa7) 255 (0xff) 234 (0xea) 224 (0xe0)  CRC: 0x4E6029F2
	11226669,	 // (0xab4e2d) // 0 (0x00) 171 (0xab) 78 (0x4e) 45 (0x2d)  CRC: 0xC8CAFBF0
	-973056032,	 // (0xc60057e0) // 198 (0xc6) 0 (0x00) 87 (0x57) 224 (0xe0)  CRC: 0x2F8F0AEA
	10366388,	 // (0x9e2db4) // 0 (0x00) 158 (0x9e) 45 (0x2d) 180 (0xb4)  CRC: 0x21472239
	406074,	 // (0x6323a) // 0 (0x00) 6 (0x06) 50 (0x32) 58 (0x3a)  CRC: 0xABFBEA1C
	68748514,	 // (0x41904e2) // 4 (0x04) 25 (0x19) 4 (0x04) 226 (0xe2)  CRC: 0xA872FB6F
	71940,	 // (0x11904) // 0 (0x00) 1 (0x01) 25 (0x19) 4 (0x04)  CRC: 0xC5EA30E4
	-1275067091,	 // (0xb400052d) // 180 (0xb4) 0 (0x00) 5 (0x05) 45 (0x2d)  CRC: 0x8635A48C
	1395464452,	 // (0x532d1904) // 83 (0x53) 45 (0x2d) 25 (0x19) 4 (0x04)  CRC: 0xDB47FF42
	-1275066955,	 // (0xb40005b5) // 180 (0xb4) 0 (0x00) 5 (0x05) 181 (0xb5)  CRC: 0xAAE4C6CE
	470452,	 // (0x72db4) // 0 (0x00) 7 (0x07) 45 (0x2d) 180 (0xb4)  CRC: 0x2BA63E11
	301312,	 // (0x49900) // 0 (0x00) 4 (0x04) 153 (0x99) 0 (0x00)  CRC: 0x0CBDA107
	303629538,	 // (0x121904e2) // 18 (0x12) 25 (0x19) 4 (0x04) 226 (0xe2)  CRC: 0x022F4224
	137476,	 // (0x21904) // 0 (0x00) 2 (0x02) 25 (0x19) 4 (0x04)  CRC: 0x28C27B2E
	-1275067131,	 // (0xb4000505) // 180 (0xb4) 0 (0x00) 5 (0x05) 5 (0x05)  CRC: 0xAF6D1D2C
	1336344591,	 // (0x4fa7000f) // 79 (0x4f) 167 (0xa7) 0 (0x00) 15 (0x0f)  CRC: 0x306CF8D1
	419750400,	 // (0x1904e200) // 25 (0x19) 4 (0x04) 226 (0xe2) 0 (0x00)  CRC: 0xBC6BA1C3
	35194036,	 // (0x21904b4) // 2 (0x02) 25 (0x19) 4 (0x04) 180 (0xb4)  CRC: 0xDE67B156
	328527,	 // (0x5034f) // 0 (0x00) 5 (0x05) 3 (0x03) 79 (0x4f)  CRC: 0x52883B84
	419715508,	 // (0x190459b4) // 25 (0x19) 4 (0x04) 89 (0x59) 180 (0xb4)  CRC: 0x4279A482
	328804,	 // (0x50464) // 0 (0x00) 5 (0x05) 4 (0x04) 100 (0x64)  CRC: 0x6275D53C
	-1258289875,	 // (0xb500052d) // 181 (0xb5) 0 (0x00) 5 (0x05) 45 (0x2d)  CRC: 0x6BAC5037
	-503313586,	 // (0xe2000b4e) // 226 (0xe2) 0 (0x00) 11 (0x0b) 78 (0x4e)  CRC: 0xCF70D36B
	-1476416765,	 // (0xa7ffab03) // 167 (0xa7) 255 (0xff) 171 (0xab) 3 (0x03)  CRC: 0xFEF81DE6
	991617024,	 // (0x3b1ae000) // 59 (0x3b) 26 (0x1a) 224 (0xe0) 0 (0x00)  CRC: 0x57DB25C4
	-1397489653,	 // (0xacb4000b) // 172 (0xac) 180 (0xb4) 0 (0x00) 11 (0x0b)  CRC: 0xE22AFB00
	-1577053472,	 // (0xa20012e0) // 162 (0xa2) 0 (0x00) 18 (0x12) 224 (0xe0)  CRC: 0x67767C71
	10361394,	 // (0x9e1a32) // 0 (0x00) 158 (0x9e) 26 (0x1a) 50 (0x32)  CRC: 0x65E810ED
	-1241510630,	 // (0xb6000d1a) // 182 (0xb6) 0 (0x00) 13 (0x0d) 26 (0x1a)  CRC: 0xCDD98A28
	73415591,	 // (0x4603ba7) // 4 (0x04) 96 (0x60) 59 (0x3b) 167 (0xa7)  CRC: 0xB82FBFF2
	-1384448,	 // (0xffeae000) // 255 (0xff) 234 (0xea) 224 (0xe0) 0 (0x00)  CRC: 0x24A51E51
	-1629486932,	 // (0x9ee000ac) // 158 (0x9e) 224 (0xe0) 0 (0x00) 172 (0xac)  CRC: 0x7796A0DD
	-1275066830,	 // (0xb4000632) // 180 (0xb4) 0 (0x00) 6 (0x06) 50 (0x32)  CRC: 0xAC141531
	973341499,	 // (0x3a04033b) // 58 (0x3a) 4 (0x04) 3 (0x03) 59 (0x3b)  CRC: 0xBCF2F09E
	437847220,	 // (0x1a1904b4) // 26 (0x1a) 25 (0x19) 4 (0x04) 180 (0xb4)  CRC: 0x80EBDF86
	238080,	 // (0x3a200) // 0 (0x00) 3 (0x03) 162 (0xa2) 0 (0x00)  CRC: 0xB0AD3402
	337183970,	 // (0x141904e2) // 20 (0x14) 25 (0x19) 4 (0x04) 226 (0xe2)  CRC: 0x29028D33
	72242,	 // (0x11a32) // 0 (0x00) 1 (0x01) 26 (0x1a) 50 (0x32)  CRC: 0xE9575AA5
	-1224733158,	 // (0xb7000e1a) // 183 (0xb7) 0 (0x00) 14 (0x0e) 26 (0x1a)  CRC: 0x50FD9F67
	73415591,	 // (0x4603ba7) // 4 (0x04) 96 (0x60) 59 (0x3b) 167 (0xa7)  CRC: 0x077D75A4
	-1503103,	 // (0xffe91081) // 255 (0xff) 233 (0xe9) 16 (0x10) 129 (0x81)  CRC: 0x2D25D354
	-787405040,	 // (0xd1112710) // 209 (0xd1) 17 (0x11) 39 (0x27) 16 (0x10)  CRC: 0x5ACFDDBA
	1622343824,	 // (0x60b30090) // 96 (0x60) 179 (0xb3) 0 (0x00) 144 (0x90)  CRC: 0x93DC67D7
	54205152,	 // (0x33b1ae0) // 3 (0x03) 59 (0x3b) 26 (0x1a) 224 (0xe0)  CRC: 0xAED368AA
	11318272,	 // (0xacb400) // 0 (0x00) 172 (0xac) 180 (0xb4) 0 (0x00)  CRC: 0x6574642A
	195166264,	 // (0xba20038) // 11 (0x0b) 162 (0xa2) 0 (0x00) 56 (0x38)  CRC: 0x925D9827
	-536830438,	 // (0xe0009e1a) // 224 (0xe0) 0 (0x00) 158 (0x9e) 26 (0x1a)  CRC: 0x9C40F29B
	842662915,	 // (0x323a0403) // 50 (0x32) 58 (0x3a) 4 (0x04) 3 (0x03)  CRC: 0x5FB7B484
	1008408836,	 // (0x3c1b1904) // 60 (0x3c) 27 (0x1b) 25 (0x19) 4 (0x04)  CRC: 0xE6517888
	-1275067486,	 // (0xb40003a2) // 180 (0xb4) 0 (0x00) 3 (0x03) 162 (0xa2)  CRC: 0xDF341831
	2038020,	 // (0x1f1904) // 0 (0x00) 31 (0x1f) 25 (0x19) 4 (0x04)  CRC: 0xCD2A4E91
	-503316453,	 // (0xe200001b) // 226 (0xe2) 0 (0x00) 0 (0x00) 27 (0x1b)  CRC: 0xB540E267
	-1308585959,	 // (0xb2009019) // 178 (0xb2) 0 (0x00) 144 (0x90) 25 (0x19)  CRC: 0x0B2239AC
	81920001,	 // (0x4e20001) // 4 (0x04) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x814BF1CD
	456307712,	 // (0x1b32b400) // 27 (0x1b) 50 (0x32) 180 (0xb4) 0 (0x00)  CRC: 0x779B538B
	56643355,	 // (0x3604f1b) // 3 (0x03) 96 (0x60) 79 (0x4f) 27 (0x1b)  CRC: 0x336DE537
	73415847,	 // (0x4603ca7) // 4 (0x04) 96 (0x60) 60 (0x3c) 167 (0xa7)  CRC: 0x8BBE6A28
	-2221564,	 // (0xffde1a04) // 255 (0xff) 222 (0xde) 26 (0x1a) 4 (0x04)  CRC: 0x6B2975E8
	1614522367,	 // (0x603ba7ff) // 96 (0x60) 59 (0x3b) 167 (0xa7) 255 (0xff)  CRC: 0xAA9B0DFF
	-1006435360,	 // (0xc40303e0) // 196 (0xc4) 3 (0x03) 3 (0x03) 224 (0xe0)  CRC: 0xFB1D954B
	10355506,	 // (0x9e0332) // 0 (0x00) 158 (0x9e) 3 (0x03) 50 (0x32)  CRC: 0xA2804F38
	-1207955488,	 // (0xb8000fe0) // 184 (0xb8) 0 (0x00) 15 (0x0f) 224 (0xe0)  CRC: 0x1F5C692B
	11318272,	 // (0xacb400) // 0 (0x00) 172 (0xac) 180 (0xb4) 0 (0x00)  CRC: 0x5A4EF47A
	184837309,	 // (0xb0464bd) // 11 (0x0b) 4 (0x04) 100 (0x64) 189 (0xbd)  CRC: 0xA0B2A1B5
	1063429,	 // (0x103a05) // 0 (0x00) 16 (0x10) 58 (0x3a) 5 (0x05)  CRC: 0xC498D882
	54205152,	 // (0x33b1ae0) // 3 (0x03) 59 (0x3b) 26 (0x1a) 224 (0xe0)  CRC: 0x85B43002
	11318272,	 // (0xacb400) // 0 (0x00) 172 (0xac) 180 (0xb4) 0 (0x00)  CRC: 0x524DF1B1
	184837282,	 // (0xb0464a2) // 11 (0x0b) 4 (0x04) 100 (0x64) 162 (0xa2)  CRC: 0xA8B13C79
	1906949,	 // (0x1d1905) // 0 (0x00) 29 (0x1d) 25 (0x19) 5 (0x05)  CRC: 0xFC3C981E
	448462864,	 // (0x1abb0010) // 26 (0x1a) 187 (0xbb) 0 (0x00) 16 (0x10)  CRC: 0x7677AE2B
	1505165329,	 // (0x59b70011) // 89 (0x59) 183 (0xb7) 0 (0x00) 17 (0x11)  CRC: 0xD3F1291E
	1394148634,	 // (0x5319051a) // 83 (0x53) 25 (0x19) 5 (0x05) 26 (0x1a)  CRC: 0xDC4B7CA8
	840611840,	 // (0x321ab800) // 50 (0x32) 26 (0x1a) 184 (0xb8) 0 (0x00)  CRC: 0x35D19339
	303694944,	 // (0x121a0460) // 18 (0x12) 26 (0x1a) 4 (0x04) 96 (0x60)  CRC: 0x6E67F878
	1000865757,	 // (0x3ba7ffdd) // 59 (0x3b) 167 (0xa7) 255 (0xff) 221 (0xdd)  CRC: 0xF1209730
	-536826876,	 // (0xe000ac04) // 224 (0xe0) 0 (0x00) 172 (0xac) 4 (0x04)  CRC: 0x9BE8F314
	-1258289404,	 // (0xb5000704) // 181 (0xb5) 0 (0x00) 7 (0x07) 4 (0x04)  CRC: 0x6A01AA59
	906363707,	 // (0x3606033b) // 54 (0x36) 6 (0x06) 3 (0x03) 59 (0x3b)  CRC: 0x00728920
	450887852,	 // (0x1ae000ac) // 26 (0x1a) 224 (0xe0) 0 (0x00) 172 (0xac)  CRC: 0x5819EC1F
	-1275065596,	 // (0xb4000b04) // 180 (0xb4) 0 (0x00) 11 (0x0b) 4 (0x04)  CRC: 0x4B4285E1
	1688338464,	 // (0x64a20020) // 100 (0x64) 162 (0xa2) 0 (0x00) 32 (0x20)  CRC: 0xBE5847D7
	352753920,	 // (0x15069900) // 21 (0x15) 6 (0x06) 153 (0x99) 0 (0x00)  CRC: 0xDEEC6239
	286852378,	 // (0x1119051a) // 17 (0x11) 25 (0x19) 5 (0x05) 26 (0x1a)  CRC: 0x92495DF2
	850657280,	 // (0x32b40000) // 50 (0x32) 180 (0xb4) 0 (0x00) 0 (0x00)  CRC: 0x726C41FD
	-1728051452,	 // (0x99000704) // 153 (0x99) 0 (0x00) 7 (0x07) 4 (0x04)  CRC: 0x616DA291
	-1493171197,	 // (0xa7000403) // 167 (0xa7) 0 (0x00) 4 (0x04) 3 (0x03)  CRC: 0x09AAD771
	906369540,	 // (0x36061a04) // 54 (0x36) 6 (0x06) 26 (0x1a) 4 (0x04)  CRC: 0xB8F89BC1
	1614522367,	 // (0x603ba7ff) // 96 (0x60) 59 (0x3b) 167 (0xa7) 255 (0xff)  CRC: 0xFA3F0124
	-636156263,	 // (0xda150699) // 218 (0xda) 21 (0x15) 6 (0x06) 153 (0x99)  CRC: 0x924C135C
	435968,	 // (0x6a700) // 0 (0x00) 6 (0x06) 167 (0xa7) 0 (0x00)  CRC: 0x8ADB1073
	111673290,	 // (0x6a7ffca) // 6 (0x06) 167 (0xa7) 255 (0xff) 202 (0xca)  CRC: 0x9FA4CFF2
	78839951,	 // (0x4b3008f) // 4 (0x04) 179 (0xb3) 0 (0x00) 143 (0x8f)  CRC: 0x0AD35FE6
	68192722,	 // (0x41089d2) // 4 (0x04) 16 (0x10) 137 (0x89) 210 (0xd2)  CRC: 0x2F348014
	-1308585968,	 // (0xb2009010) // 178 (0xb2) 0 (0x00) 144 (0x90) 16 (0x10)  CRC: 0x4191AF6B
	-2116943344,	 // (0x81d20210) // 129 (0x81) 210 (0xd2) 2 (0x02) 16 (0x10)  CRC: 0x8F3DCBC9
	-1999502320,	 // (0x88d20410) // 136 (0x88) 210 (0xd2) 4 (0x04) 16 (0x10)  CRC: 0xE55F92AD
	-2133675776,	 // (0x80d2b100) // 128 (0x80) 210 (0xd2) 177 (0xb1)  CRC: 0x7E521CFE
	2119310590,	// CRC do Jardel: 0x7E521CFE
	0,	//	synchronized?, exception table length
//	7467: waitForNextPeriod()Z
	-536830240,	 // (0xe0009ee0) // 224 (0xe0) 0 (0x00) 158 (0x9e) 224 (0xe0)  CRC: 0xA37FC91A
	11318272,	 // (0xacb400) // 0 (0x00) 172 (0xac) 180 (0xb4) 0 (0x00)  CRC: 0x2FEA8DCA
	103960067,	 // (0x6324e03) // 6 (0x06) 50 (0x32) 78 (0x4e) 3 (0x03)  CRC: 0xD8A8B0FA
	276877869,	 // (0x1080d22d) // 16 (0x10) 128 (0x80) 210 (0xd2) 45 (0x2d)  CRC: 0x4D810954
	-503316438,	 // (0xe200002a) // 226 (0xe2) 0 (0x00) 0 (0x00) 42 (0x2a)  CRC: 0x351F858A
	-1275066578,	 // (0xb400072e) // 180 (0xb4) 0 (0x00) 7 (0x07) 46 (0x2e)  CRC: 0x80CB5EF8
	716439554,	 // (0x2ab40002) // 42 (0x2a) 180 (0xb4) 0 (0x00) 2 (0x02)  CRC: 0x5DE7C91D
	1614549121,	 // (0x603c1081) // 96 (0x60) 60 (0x3c) 16 (0x10) 129 (0x81)  CRC: 0x096B4B01
	-784524516,	 // (0xd13d1b1c) // 209 (0xd1) 61 (0x3d) 27 (0x1b) 28 (0x1c)  CRC: 0x82C1B777
	1687945235,	 // (0x649c0013) // 100 (0x64) 156 (0x9c) 0 (0x00) 19 (0x13)  CRC: 0x8F6893C0
	769785856,	 // (0x2de20000) // 45 (0x2d) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0x57BC2E6B
	716439559,	 // (0x2ab40007) // 42 (0x2a) 180 (0xb4) 0 (0x00) 7 (0x07)  CRC: 0x6D4983D4
	474940432,	 // (0x1c4f0410) // 28 (0x1c) 79 (0x4f) 4 (0x04) 16 (0x10)  CRC: 0x9CEC45D2
	-2133720148,	 // (0x80d203ac) // 128 (0x80) 210 (0xd2) 3 (0x03) 172 (0xac)  CRC: 0x635C17C7
	769785856,	 // (0x2de20000) // 45 (0x2d) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0xB7AD5265
	716439559,	 // (0x2ab40007) // 42 (0x2a) 180 (0xb4) 0 (0x00) 7 (0x07)  CRC: 0x6E510F12
	458162960,	 // (0x1b4f0310) // 27 (0x1b) 79 (0x4f) 3 (0x03) 16 (0x10)  CRC: 0xFE742B2C
	-2100165834,	 // (0x82d20336) // 130 (0x82) 210 (0xd2) 3 (0x03) 54 (0x36)  CRC: 0xBD6866EC
	68486160,	 // (0x4150410) // 4 (0x04) 21 (0x15) 4 (0x04) 16 (0x10)  CRC: 0xB11A073B
	178389004,	 // (0xaa2000c) // 10 (0x0a) 162 (0xa2) 0 (0x00) 12 (0x0c)  CRC: 0x1776935D
	352584800,	 // (0x15040460) // 21 (0x15) 4 (0x04) 4 (0x04) 96 (0x60)  CRC: 0x34F5850C
	906274815,	 // (0x3604a7ff) // 54 (0x36) 4 (0x04) 167 (0xa7) 255 (0xff)  CRC: 0x2D559590
	-217837440,	 // (0xf3041080) // 243 (0xf3) 4 (0x04) 16 (0x10) 128 (0x80)  CRC: 0x84CE6816
	-771445760,	 // (0xd204ac00) // 210 (0xd2) 4 (0x04) 172 (0xac)  CRC: 0x749B47E2
	1956333538,	// CRC do Jardel: 0x749B47E2
	0,	//	synchronized?, exception table length
//	7493: setEvent()V
	704951552,	 // (0x2a04b500) // 42 (0x2a) 4 (0x04) 181 (0xb5) 0 (0x00)  CRC: 0x3EFE4414
	78708736,	 // (0x4b10000) // 4 (0x04) 177 (0xb1)  CRC: 0xBA18009A
	-1172832102,	// CRC do Jardel: 0xBA18009A
	0,	//	synchronized?, exception table length
//	7497: fire()V
	-536830422,	 // (0xe0009e2a) // 224 (0xe0) 0 (0x00) 158 (0x9e) 42 (0x2a)  CRC: 0x917AD481
	-1275066830,	 // (0xb4000632) // 180 (0xb4) 0 (0x00) 6 (0x06) 50 (0x32)  CRC: 0x20236E63
	-503315926,	 // (0xe200022a) // 226 (0xe2) 0 (0x00) 2 (0x02) 42 (0x2a)  CRC: 0x1C8BD773
	-1275066620,	 // (0xb4000704) // 180 (0xb4) 0 (0x00) 7 (0x07) 4 (0x04)  CRC: 0x4C96B12C
	1337458697,	 // (0x4fb80009) // 79 (0x4f) 184 (0xb8) 0 (0x00) 9 (0x09)  CRC: 0x7D3344C5
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x46B83E78
	1186479736,	// CRC do Jardel: 0x46B83E78
	0,	//	synchronized?, exception table length
//	7505: blockEvent()V
	-536830422,	 // (0xe0009e2a) // 224 (0xe0) 0 (0x00) 158 (0x9e) 42 (0x2a)  CRC: 0x917AD481
	-1275066830,	 // (0xb4000632) // 180 (0xb4) 0 (0x00) 6 (0x06) 50 (0x32)  CRC: 0x20236E63
	-503315926,	 // (0xe200022a) // 226 (0xe2) 0 (0x00) 2 (0x02) 42 (0x2a)  CRC: 0x1C8BD773
	-1275066619,	 // (0xb4000705) // 180 (0xb4) 0 (0x00) 7 (0x07) 5 (0x05)  CRC: 0x90FB2B9B
	1337458697,	 // (0x4fb80009) // 79 (0x4f) 184 (0xb8) 0 (0x00) 9 (0x09)  CRC: 0x2692980F
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x414EDD7E
	1095687550,	// CRC do Jardel: 0x414EDD7E
	0,	//	synchronized?, exception table length
//	7513: sleepMs(I)V
	276943130,	 // (0x1081d11a) // 16 (0x10) 129 (0x81) 209 (0xd1) 26 (0x1a)  CRC: 0x284F59F3
	285468776,	 // (0x1103e868) // 17 (0x11) 3 (0x03) 232 (0xe8) 104 (0x68)  CRC: 0xB4DD33B5
	1614549121,	 // (0x603c1081) // 96 (0x60) 60 (0x3c) 16 (0x10) 129 (0x81)  CRC: 0x94BEB8A9
	-786733924,	 // (0xd11b649c) // 209 (0xd1) 27 (0x1b) 100 (0x64) 156 (0x9c)  CRC: 0x65114E3E
	636928,	 // (0x9b800) // 0 (0x00) 9 (0x09) 184 (0xb8) 0 (0x00)  CRC: 0xDD09C465
	162004981,	 // (0x9a7fff5) // 9 (0x09) 167 (0xa7) 255 (0xff) 245 (0xf5)  CRC: 0x21955773
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0xF3326BFF
	-214799361,	// CRC do Jardel: 0xF3326BFF
	0,	//	synchronized?, exception table length
//	7522: busyWait(I)V
	53871632,	 // (0x3360410) // 3 (0x03) 54 (0x36) 4 (0x04) 16 (0x10)  CRC: 0x2811ABF5
	-2116994032,	 // (0x81d13c10) // 129 (0x81) 209 (0xd1) 60 (0x3c) 16 (0x10)  CRC: 0x7FC36E04
	-2116993764,	 // (0x81d13d1c) // 129 (0x81) 209 (0xd1) 61 (0x3d) 28 (0x1c)  CRC: 0x9C491230
	459554332,	 // (0x1b643e1c) // 27 (0x1b) 100 (0x64) 62 (0x3e) 28 (0x1c)  CRC: 0xD4530086
	1008537610,	 // (0x3c1d100a) // 60 (0x3c) 29 (0x1d) 16 (0x10) 10 (0x0a)  CRC: 0x5236CBE8
	-1577055979,	 // (0xa2000915) // 162 (0xa2) 0 (0x00) 9 (0x09) 21 (0x15)  CRC: 0xC0A51BF7
	69034038,	 // (0x41d6036) // 4 (0x04) 29 (0x1d) 96 (0x60) 54 (0x36)  CRC: 0x570DBA6B
	68486170,	 // (0x415041a) // 4 (0x04) 21 (0x15) 4 (0x04) 26 (0x1a)  CRC: 0x0C3EBEEE
	-1577064527,	 // (0xa1ffe7b1) // 161 (0xa1) 255 (0xff) 231 (0xe7) 177 (0xb1)  CRC: 0xF5151A22
	-183166430,	// CRC do Jardel: 0xF5151A22
	0,	//	synchronized?, exception table length
//	7533: getStack(I)[I
	-536830240,	 // (0xe0009ee0) // 224 (0xe0) 0 (0x00) 158 (0x9e) 224 (0xe0)  CRC: 0xA37FC91A
	11318272,	 // (0xacb400) // 0 (0x00) 172 (0xac) 180 (0xb4) 0 (0x00)  CRC: 0x2FEA8DCA
	103997952,	 // (0x632e200) // 6 (0x06) 50 (0x32) 226 (0xe2) 0 (0x00)  CRC: 0x663B07D0
	18494178,	 // (0x11a32e2) // 1 (0x01) 26 (0x1a) 50 (0x32) 226 (0xe2)  CRC: 0xCD70D7CD
	569344,	 // (0x8b000) // 0 (0x00) 8 (0x08) 176 (0xb0)  CRC: 0xB6A18515
	-1230928619,	// CRC do Jardel: 0xB6A18515
	0,	//	synchronized?, exception table length
//	7540: getSP(I)I
	-536830240,	 // (0xe0009ee0) // 224 (0xe0) 0 (0x00) 158 (0x9e) 224 (0xe0)  CRC: 0xA37FC91A
	11318272,	 // (0xacb400) // 0 (0x00) 172 (0xac) 180 (0xb4) 0 (0x00)  CRC: 0x2FEA8DCA
	103997952,	 // (0x632e200) // 6 (0x06) 50 (0x32) 226 (0xe2) 0 (0x00)  CRC: 0x663B07D0
	18494132,	 // (0x11a32b4) // 1 (0x01) 26 (0x1a) 50 (0x32) 180 (0xb4)  CRC: 0x2B980EE7
	633856,	 // (0x9ac00) // 0 (0x00) 9 (0x09) 172 (0xac)  CRC: 0xBEA88E1F
	-1096249825,	// CRC do Jardel: 0xBEA88E1F
	0,	//	synchronized?, exception table length
//	7547: getCnt()I
	-536830240,	 // (0xe0009ee0) // 224 (0xe0) 0 (0x00) 158 (0x9e) 224 (0xe0)  CRC: 0xA37FC91A
	11318272,	 // (0xacb400) // 0 (0x00) 172 (0xac) 180 (0xb4) 0 (0x00)  CRC: 0x2FEA8DCA
	103986176,	 // (0x632b400) // 6 (0x06) 50 (0x32) 180 (0xb4) 0 (0x00)  CRC: 0x09490572
	61603840,	 // (0x3ac0000) // 3 (0x03) 172 (0xac)  CRC: 0x42BA87A2
	1119520674,	// CRC do Jardel: 0x42BA87A2
	0,	//	synchronized?, exception table length
//	7553: getActive()I
	-536830240,	 // (0xe0009ee0) // 224 (0xe0) 0 (0x00) 158 (0x9e) 224 (0xe0)  CRC: 0xA37FC91A
	11318272,	 // (0xacb400) // 0 (0x00) 172 (0xac) 180 (0xb4) 0 (0x00)  CRC: 0x2FEA8DCA
	103986176,	 // (0x632b400) // 6 (0x06) 50 (0x32) 180 (0xb4) 0 (0x00)  CRC: 0x09490572
	78381056,	 // (0x4ac0000) // 4 (0x04) 172 (0xac)  CRC: 0x5CFDD7A7
	1560139687,	// CRC do Jardel: 0x5CFDD7A7
	0,	//	synchronized?, exception table length
//	7559: currentRtThread()Ljoprt/RtThread;
	-536830240,	 // (0xe0009ee0) // 224 (0xe0) 0 (0x00) 158 (0x9e) 224 (0xe0)  CRC: 0xA37FC91A
	11318272,	 // (0xacb400) // 0 (0x00) 172 (0xac) 180 (0xb4) 0 (0x00)  CRC: 0x2FEA8DCA
	103959338,	 // (0x6324b2a) // 6 (0x06) 50 (0x32) 75 (0x4b) 42 (0x2a)  CRC: 0x117CEA2D
	-503316025,	 // (0xe20001c7) // 226 (0xe2) 0 (0x00) 1 (0x01) 199 (0xc7)  CRC: 0xB4D3954F
	328112,	 // (0x501b0) // 0 (0x00) 5 (0x05) 1 (0x01) 176 (0xb0)  CRC: 0x66A7317A
	719454209,	 // (0x2ae20001) // 42 (0x2a) 226 (0xe2) 0 (0x00) 1 (0x01)  CRC: 0x2CD76729
	716439556,	 // (0x2ab40004) // 42 (0x2a) 180 (0xb4) 0 (0x00) 4 (0x04)  CRC: 0x3DCC6593
	853671936,	 // (0x32e20000) // 50 (0x32) 226 (0xe2) 0 (0x00) 0 (0x00)  CRC: 0x97F87CD5
	-1342177280,	 // (0xb0000000) // 176 (0xb0)  CRC: 0xFAEFBE43
	-84951485,	// CRC do Jardel: 0xFAEFBE43
	0,	//	synchronized?, exception table length
//	7570: getCurrentScope()Lcom/jopdesign/sys/Scope;
	-536830240,	 // (0xe0009ee0) // 224 (0xe0) 0 (0x00) 158 (0x9e) 224 (0xe0)  CRC: 0xA37FC91A
	11318272,	 // (0xacb400) // 0 (0x00) 172 (0xac) 180 (0xb4) 0 (0x00)  CRC: 0x2FEA8DCA
	103959338,	 // (0x6324b2a) // 6 (0x06) 50 (0x32) 75 (0x4b) 42 (0x2a)  CRC: 0x117CEA2D
	-503316182,	 // (0xe200012a) // 226 (0xe2) 0 (0x00) 1 (0x01) 42 (0x2a)  CRC: 0x70BD304E
	-1275067342,	 // (0xb4000432) // 180 (0xb4) 0 (0x00) 4 (0x04) 50 (0x32)  CRC: 0x3E1DEDC9
	-503313744,	 // (0xe2000ab0) // 226 (0xe2) 0 (0x00) 10 (0x0a) 176 (0xb0)  CRC: 0xCA16127A
	-904523142,	// CRC do Jardel: 0xCA16127A
	0,	//	synchronized?, exception table length
//	7578: setCurrentScope(Lcom/jopdesign/sys/Scope;)V
	21815296,	 // (0x14ce000) // 1 (0x01) 76 (0x4c) 224 (0xe0) 0 (0x00)  CRC: 0x2B83E1A0
	-1629486932,	 // (0x9ee000ac) // 158 (0x9e) 224 (0xe0) 0 (0x00) 172 (0xac)  CRC: 0x6EFE7939
	-1275066830,	 // (0xb4000632) // 180 (0xb4) 0 (0x00) 6 (0x06) 50 (0x32)  CRC: 0x601B12DB
	1294780160,	 // (0x4d2cc700) // 77 (0x4d) 44 (0x2c) 199 (0xc7) 0 (0x00)  CRC: 0xD55D8D5D
	170713600,	 // (0xa2ce200) // 10 (0x0a) 44 (0x2c) 226 (0xe2) 0 (0x00)  CRC: 0xF798BA84
	29753359,	 // (0x1c6000f) // 1 (0x01) 198 (0xc6) 0 (0x00) 15 (0x0f)  CRC: 0xACEA99DF
	749993988,	 // (0x2cb40004) // 44 (0x2c) 180 (0xb4) 0 (0x00) 4 (0x04)  CRC: 0xA0D462A1
	1043128832,	 // (0x3e2ce200) // 62 (0x3e) 44 (0x2c) 226 (0xe2) 0 (0x00)  CRC: 0x5DC9DEF5
	18690636,	 // (0x11d324c) // 1 (0x01) 29 (0x1d) 50 (0x32) 76 (0x4c)  CRC: 0xB0AA7CA7
	724230912,	 // (0x2b2ae300) // 43 (0x2b) 42 (0x2a) 227 (0xe3) 0 (0x00)  CRC: 0x2AEC8C43
	179372032,	 // (0xab10000) // 10 (0x0a) 177 (0xb1)  CRC: 0x3C1E5CCC
	1008622796,	// CRC do Jardel: 0x3C1E5CCC
	0,	//	synchronized?, exception table length
//	7591: trace([II)V
	453469245,	 // (0x1b07643d) // 27 (0x1b) 7 (0x07) 100 (0x64) 61 (0x3d)  CRC: 0x5E4648BD
	470828452,	 // (0x1c1045a4) // 28 (0x1c) 16 (0x10) 69 (0x45) 164 (0xa4)  CRC: 0x03207CF4
	4729372,	 // (0x482a1c) // 0 (0x00) 72 (0x48) 42 (0x2a) 28 (0x1c)  CRC: 0xF06271BD
	123736128,	 // (0x7601040) // 7 (0x07) 96 (0x60) 16 (0x10) 64 (0x40)  CRC: 0xB8E27776
	1680752170,	 // (0x642e3e2a) // 100 (0x64) 46 (0x2e) 62 (0x3e) 42 (0x2a)  CRC: 0x2F6DD1BC
	470114320,	 // (0x1c056010) // 28 (0x1c) 5 (0x05) 96 (0x60) 16 (0x10)  CRC: 0x977A2FF0
	1080307254,	 // (0x40642e36) // 64 (0x40) 100 (0x64) 46 (0x2e) 54 (0x36)  CRC: 0xF87A4744
	69063478,	 // (0x41dd336) // 4 (0x04) 29 (0x1d) 211 (0xd3) 54 (0x36)  CRC: 0xD9851034
	135596048,	 // (0x8150810) // 8 (0x08) 21 (0x15) 8 (0x08) 16 (0x10)  CRC: 0xC0588057
	175912453,	 // (0xa7c3605) // 10 (0x0a) 124 (0x7c) 54 (0x36) 5 (0x05)  CRC: 0xE54B133E
	352696320,	 // (0x1505b800) // 21 (0x15) 5 (0x05) 184 (0xb8) 0 (0x00)  CRC: 0xC5E0AB66
	337445984,	 // (0x141d0460) // 20 (0x14) 29 (0x1d) 4 (0x04) 96 (0x60)  CRC: 0xF4030160
	-751433707,	 // (0xd3360815) // 211 (0xd3) 54 (0x36) 8 (0x08) 21 (0x15)  CRC: 0xFA9D9857
	135274366,	 // (0x8101f7e) // 8 (0x08) 16 (0x10) 31 (0x1f) 126 (0x7e)  CRC: 0x7DE8E6E6
	906433800,	 // (0x36071508) // 54 (0x36) 7 (0x07) 21 (0x15) 8 (0x08)  CRC: 0xF8006501
	142348319,	 // (0x87c101f) // 8 (0x08) 124 (0x7c) 16 (0x10) 31 (0x1f)  CRC: 0xF6DD3430
	2117469717,	 // (0x7e360615) // 126 (0x7e) 54 (0x36) 6 (0x06) 21 (0x15)  CRC: 0xDECA2C24
	68487008,	 // (0x4150760) // 4 (0x04) 21 (0x15) 7 (0x07) 96 (0x60)  CRC: 0xE09C2B21
	352739389,	 // (0x1506603d) // 21 (0x15) 6 (0x06) 96 (0x60) 61 (0x3d)  CRC: 0x9636ACEA
	-1476413263,	 // (0xa7ffb8b1) // 167 (0xa7) 255 (0xff) 184 (0xb8) 177 (0xb1)  CRC: 0x369C2A18
	916204056,	// CRC do Jardel: 0x369C2A18
	0,	//	synchronized?, exception table length
//	7613: access$000(Lcom/jopdesign/sys/RtThreadImpl;)V
	716636174,	 // (0x2ab7000e) // 42 (0x2a) 183 (0xb7) 0 (0x00) 14 (0x0e)  CRC: 0x0B1D9737
	-1325400064,	 // (0xb1000000) // 177 (0xb1)  CRC: 0x5AF0081A
	1525680154,	// CRC do Jardel: 0x5AF0081A
	0,	//	synchronized?, exception table length
//	7617: <clinit>()V
	-1207953994,	 // (0xb80015b6) // 184 (0xb8) 0 (0x00) 21 (0x15) 182 (0xb6)  CRC: 0xFBF284BE
	1499392,	 // (0x16e100) // 0 (0x00) 22 (0x16) 225 (0xe1) 0 (0x00)  CRC: 0x5FE92177
	-1397686272,	 // (0xacb10000) // 172 (0xac) 177 (0xb1)  CRC: 0xC517228B
	-988339573,	// CRC do Jardel: 0xC517228B
	0,	//	synchronized?, exception table length
//
//	special pointer at 7622:
//
		9142,	// pointer to boot method struct: com.jopdesign.sys.Startup:boot()V
		9980,	// pointer to first non Object method struct of class JVM
		11711,	// pointer to first non Object method struct of of class JVMHelp
		8961,	// pointer to main method struct
		146,	// pointer to static reference fields
		27,	// number of static reference fields
//
//	<clinit> pointer to method struct
//
		8,	//	number of methods
		11648,	//	util.Dbg
		12331,	//	java.lang.Long
		11326,	//	java.lang.Integer
		9182,	//	com.jopdesign.sys.Startup
		11236,	//	java.lang.StringBuffer
		9751,	//	com.jopdesign.io.IOFactory
		11000,	//	com.jopdesign.sys.Scheduler
		12581,	//	com.jopdesign.sys.RtThreadImpl
//TODO: GC info
//
//	String table: 60 strings
//
//	first a String object (with pointer to mtab and pointer to char arr.)
//	followed by a character array (len + data)
//
//	11891	pointer to method table of class String
//
	//	7637	"Hello World from JOP..."
	7641,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7642,	//	char[] handle points to the first element
	21,	// array length in the handle
	7639,	//	char ref. points to char[] handle
	72, 101, 108, 108, 111, 32, 87, 111, 
	114, 108, 100, 32, 102, 114, 111, 109, 
	32, 74, 79, 80, 33, 
	//	7663	"Object "
	7667,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7668,	//	char[] handle points to the first element
	7,	// array length in the handle
	7665,	//	char ref. points to char[] handle
	79, 98, 106, 101, 99, 116, 32, 
	//	7675	"Object not cloneable"
	7679,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7680,	//	char[] handle points to the first element
	20,	// array length in the handle
	7677,	//	char ref. points to char[] handle
	79, 98, 106, 101, 99, 116, 32, 110, 
	111, 116, 32, 99, 108, 111, 110, 101, 
	97, 98, 108, 101, 
	//	7700	"getClass() NYI"
	7704,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7705,	//	char[] handle points to the first element
	14,	// array length in the handle
	7702,	//	char ref. points to char[] handle
	103, 101, 116, 67, 108, 97, 115, 115, 
	40, 41, 32, 78, 89, 73, 
	//	7719	"lang.Character: work..."
	7723,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7724,	//	char[] handle points to the first element
	39,	// array length in the handle
	7721,	//	char ref. points to char[] handle
	108, 97, 110, 103, 46, 67, 104, 97, 
	114, 97, 99, 116, 101, 114, 58, 32, 
	119, 111, 114, 107, 115, 32, 111, 110, 
	108, 121, 32, 102, 111, 114, 32, 114, 
	97, 100, 105, 120, 32, 49, 48, 
	//	7763	"NullPointer"
	7767,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7768,	//	char[] handle points to the first element
	11,	// array length in the handle
	7765,	//	char ref. points to char[] handle
	78, 117, 108, 108, 80, 111, 105, 110, 
	116, 101, 114, 
	//	7779	"JOP start"
	7783,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7784,	//	char[] handle points to the first element
	9,	// array length in the handle
	7781,	//	char ref. points to char[] handle
	74, 79, 80, 32, 115, 116, 97, 114, 
	116, 
	//	7793	" V "
	7797,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7798,	//	char[] handle points to the first element
	3,	// array length in the handle
	7795,	//	char ref. points to char[] handle
	32, 86, 32, 
	//	7801	"pre2005"
	7805,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7806,	//	char[] handle points to the first element
	7,	// array length in the handle
	7803,	//	char ref. points to char[] handle
	112, 114, 101, 50, 48, 48, 53, 
	//	7813	"\r\n"
	7817,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7818,	//	char[] handle points to the first element
	2,	// array length in the handle
	7815,	//	char ref. points to char[] handle
	13, 10, 
	//	7820	"MHz, "
	7824,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7825,	//	char[] handle points to the first element
	5,	// array length in the handle
	7822,	//	char ref. points to char[] handle
	77, 72, 122, 44, 32, 
	//	7830	"KB RAM"
	7834,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7835,	//	char[] handle points to the first element
	6,	// array length in the handle
	7832,	//	char ref. points to char[] handle
	75, 66, 32, 82, 65, 77, 
	//	7841	", "
	7845,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7846,	//	char[] handle points to the first element
	2,	// array length in the handle
	7843,	//	char ref. points to char[] handle
	44, 32, 
	//	7848	"Byte on-chip RAM"
	7852,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7853,	//	char[] handle points to the first element
	16,	// array length in the handle
	7850,	//	char ref. points to char[] handle
	66, 121, 116, 101, 32, 111, 110, 45, 
	99, 104, 105, 112, 32, 82, 65, 77, 
	
	//	7869	"CPUs"
	7873,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7874,	//	char[] handle points to the first element
	4,	// array length in the handle
	7871,	//	char ref. points to char[] handle
	67, 80, 85, 115, 
	//	7878	"\r\nJVM exit!\r\n"
	7882,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7883,	//	char[] handle points to the first element
	13,	// array length in the handle
	7880,	//	char ref. points to char[] handle
	13, 10, 74, 86, 77, 32, 101, 120, 
	105, 116, 33, 13, 10, 
	//	7896	"JVM interpreter: byt..."
	7900,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7901,	//	char[] handle points to the first element
	26,	// array length in the handle
	7898,	//	char ref. points to char[] handle
	74, 86, 77, 32, 105, 110, 116, 101, 
	114, 112, 114, 101, 116, 101, 114, 58, 
	32, 98, 121, 116, 101, 99, 111, 100, 
	101, 32, 
	//	7927	" not implemented"
	7931,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7932,	//	char[] handle points to the first element
	16,	// array length in the handle
	7929,	//	char ref. points to char[] handle
	32, 110, 111, 116, 32, 105, 109, 112, 
	108, 101, 109, 101, 110, 116, 101, 100, 
	
	//	7948	"String index out of ..."
	7952,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7953,	//	char[] handle points to the first element
	27,	// array length in the handle
	7950,	//	char ref. points to char[] handle
	83, 116, 114, 105, 110, 103, 32, 105, 
	110, 100, 101, 120, 32, 111, 117, 116, 
	32, 111, 102, 32, 114, 97, 110, 103, 
	101, 58, 32, 
	//	7980	"true"
	7984,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7985,	//	char[] handle points to the first element
	4,	// array length in the handle
	7982,	//	char ref. points to char[] handle
	116, 114, 117, 101, 
	//	7989	"false"
	7993,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	7994,	//	char[] handle points to the first element
	5,	// array length in the handle
	7991,	//	char ref. points to char[] handle
	102, 97, 108, 115, 101, 
	//	7999	"null"
	8003,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8004,	//	char[] handle points to the first element
	4,	// array length in the handle
	8001,	//	char ref. points to char[] handle
	110, 117, 108, 108, 
	//	8008	"true "
	8012,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8013,	//	char[] handle points to the first element
	5,	// array length in the handle
	8010,	//	char ref. points to char[] handle
	116, 114, 117, 101, 32, 
	//	8018	"false "
	8022,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8023,	//	char[] handle points to the first element
	6,	// array length in the handle
	8020,	//	char ref. points to char[] handle
	102, 97, 108, 115, 101, 32, 
	//	8029	"Uncaught exception: "
	8033,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8034,	//	char[] handle points to the first element
	20,	// array length in the handle
	8031,	//	char ref. points to char[] handle
	85, 110, 99, 97, 117, 103, 104, 116, 
	32, 101, 120, 99, 101, 112, 116, 105, 
	111, 110, 58, 32, 
	//	8054	"\n"
	8058,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8059,	//	char[] handle points to the first element
	1,	// array length in the handle
	8056,	//	char ref. points to char[] handle
	10, 
	//	8060	"multianewarray - GC ..."
	8064,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8065,	//	char[] handle points to the first element
	26,	// array length in the handle
	8062,	//	char ref. points to char[] handle
	109, 117, 108, 116, 105, 97, 110, 101, 
	119, 97, 114, 114, 97, 121, 32, 45, 
	32, 71, 67, 32, 105, 115, 115, 117, 
	101, 63, 
	//	8091	"dimensions not suppo..."
	8095,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8096,	//	char[] handle points to the first element
	24,	// array length in the handle
	8093,	//	char ref. points to char[] handle
	100, 105, 109, 101, 110, 115, 105, 111, 
	110, 115, 32, 110, 111, 116, 32, 115, 
	117, 112, 112, 111, 114, 116, 101, 100, 
	
	//	8120	""
	8124,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8125,	//	char[] handle points to the first element
	0,	// array length in the handle
	8122,	//	char ref. points to char[] handle
	
	//	8125	"GC: gray list not em..."
	8129,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8130,	//	char[] handle points to the first element
	23,	// array length in the handle
	8127,	//	char ref. points to char[] handle
	71, 67, 58, 32, 103, 114, 97, 121, 
	32, 108, 105, 115, 116, 32, 110, 111, 
	116, 32, 101, 109, 112, 116, 121, 
	//	8153	"GC allocation trigge..."
	8157,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8158,	//	char[] handle points to the first element
	23,	// array length in the handle
	8155,	//	char ref. points to char[] handle
	71, 67, 32, 97, 108, 108, 111, 99, 
	97, 116, 105, 111, 110, 32, 116, 114, 
	105, 103, 103, 101, 114, 101, 100, 
	//	8181	"Run out of handles i..."
	8185,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8186,	//	char[] handle points to the first element
	33,	// array length in the handle
	8183,	//	char ref. points to char[] handle
	82, 117, 110, 32, 111, 117, 116, 32, 
	111, 102, 32, 104, 97, 110, 100, 108, 
	101, 115, 32, 105, 110, 32, 110, 101, 
	119, 32, 79, 98, 106, 101, 99, 116, 
	33, 
	//	8219	"Run out of handles i..."
	8223,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8224,	//	char[] handle points to the first element
	32,	// array length in the handle
	8221,	//	char ref. points to char[] handle
	82, 117, 110, 32, 111, 117, 116, 32, 
	111, 102, 32, 104, 97, 110, 100, 108, 
	101, 115, 32, 105, 110, 32, 110, 101, 
	119, 32, 97, 114, 114, 97, 121, 33, 
	
	//	8256	" "
	8260,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8261,	//	char[] handle points to the first element
	1,	// array length in the handle
	8258,	//	char ref. points to char[] handle
	32, 
	//	8262	"OutOfMemoryError"
	8266,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8267,	//	char[] handle points to the first element
	16,	// array length in the handle
	8264,	//	char ref. points to char[] handle
	79, 117, 116, 79, 102, 77, 101, 109, 
	111, 114, 121, 69, 114, 114, 111, 114, 
	
	//	8283	"mark/reset not suppo..."
	8287,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8288,	//	char[] handle points to the first element
	24,	// array length in the handle
	8285,	//	char ref. points to char[] handle
	109, 97, 114, 107, 47, 114, 101, 115, 
	101, 116, 32, 110, 111, 116, 32, 115, 
	117, 112, 112, 111, 114, 116, 101, 100, 
	
	//	8312	"NYI"
	8316,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8317,	//	char[] handle points to the first element
	3,	// array length in the handle
	8314,	//	char ref. points to char[] handle
	78, 89, 73, 
	//	8320	"String.arraycopy"
	8324,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8325,	//	char[] handle points to the first element
	16,	// array length in the handle
	8322,	//	char ref. points to char[] handle
	83, 116, 114, 105, 110, 103, 46, 97, 
	114, 114, 97, 121, 99, 111, 112, 121, 
	
	//	8341	"lang.Integer.parseIn..."
	8345,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8346,	//	char[] handle points to the first element
	61,	// array length in the handle
	8343,	//	char ref. points to char[] handle
	108, 97, 110, 103, 46, 73, 110, 116, 
	101, 103, 101, 114, 46, 112, 97, 114, 
	115, 101, 73, 110, 116, 40, 41, 58, 
	32, 83, 116, 114, 105, 110, 103, 32, 
	99, 111, 117, 110, 116, 32, 97, 110, 
	100, 32, 108, 101, 110, 103, 116, 104, 
	32, 100, 111, 32, 110, 111, 116, 32, 
	109, 97, 116, 99, 104, 
	//	8407	"lang.Integer.parseIn..."
	8411,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8412,	//	char[] handle points to the first element
	56,	// array length in the handle
	8409,	//	char ref. points to char[] handle
	108, 97, 110, 103, 46, 73, 110, 116, 
	101, 103, 101, 114, 46, 112, 97, 114, 
	115, 101, 73, 110, 116, 40, 41, 58, 
	32, 83, 116, 114, 105, 110, 103, 32, 
	99, 111, 110, 116, 97, 105, 110, 115, 
	32, 110, 111, 116, 32, 111, 110, 108, 
	121, 32, 68, 105, 103, 105, 116, 115, 
	
	//	8468	"string length is nul..."
	8472,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8473,	//	char[] handle points to the first element
	21,	// array length in the handle
	8470,	//	char ref. points to char[] handle
	115, 116, 114, 105, 110, 103, 32, 108, 
	101, 110, 103, 116, 104, 32, 105, 115, 
	32, 110, 117, 108, 108, 
	//	8494	"pure '-'"
	8498,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8499,	//	char[] handle points to the first element
	8,	// array length in the handle
	8496,	//	char ref. points to char[] handle
	112, 117, 114, 101, 32, 39, 45, 39, 
	
	//	8507	"non terminated numbe..."
	8511,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8512,	//	char[] handle points to the first element
	23,	// array length in the handle
	8509,	//	char ref. points to char[] handle
	110, 111, 110, 32, 116, 101, 114, 109, 
	105, 110, 97, 116, 101, 100, 32, 110, 
	117, 109, 98, 101, 114, 58, 32, 
	//	8535	"number overflow (pos..."
	8539,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8540,	//	char[] handle points to the first element
	21,	// array length in the handle
	8537,	//	char ref. points to char[] handle
	110, 117, 109, 98, 101, 114, 32, 111, 
	118, 101, 114, 102, 108, 111, 119, 32, 
	40, 112, 111, 115, 61, 
	//	8561	") : "
	8565,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8566,	//	char[] handle points to the first element
	4,	// array length in the handle
	8563,	//	char ref. points to char[] handle
	41, 32, 58, 32, 
	//	8570	"invalid character at..."
	8574,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8575,	//	char[] handle points to the first element
	30,	// array length in the handle
	8572,	//	char ref. points to char[] handle
	105, 110, 118, 97, 108, 105, 100, 32, 
	99, 104, 97, 114, 97, 99, 116, 101, 
	114, 32, 97, 116, 32, 112, 111, 115, 
	105, 116, 105, 111, 110, 32, 
	//	8605	" in "
	8609,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8610,	//	char[] handle points to the first element
	4,	// array length in the handle
	8607,	//	char ref. points to char[] handle
	32, 105, 110, 32, 
	//	8614	"JOP: bytecode "
	8618,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8619,	//	char[] handle points to the first element
	14,	// array length in the handle
	8616,	//	char ref. points to char[] handle
	74, 79, 80, 58, 32, 98, 121, 116, 
	101, 99, 111, 100, 101, 32, 
	//	8633	"saved sp="
	8637,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8638,	//	char[] handle points to the first element
	9,	// array length in the handle
	8635,	//	char ref. points to char[] handle
	115, 97, 118, 101, 100, 32, 115, 112, 
	61, 
	//	8647	"  mp     pc     fp"
	8651,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8652,	//	char[] handle points to the first element
	18,	// array length in the handle
	8649,	//	char ref. points to char[] handle
	32, 32, 109, 112, 32, 32, 32, 32, 
	32, 112, 99, 32, 32, 32, 32, 32, 
	102, 112, 
	//	8670	"ASCII"
	8674,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8675,	//	char[] handle points to the first element
	5,	// array length in the handle
	8672,	//	char ref. points to char[] handle
	65, 83, 67, 73, 73, 
	//	8680	"offset: "
	8684,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8685,	//	char[] handle points to the first element
	8,	// array length in the handle
	8682,	//	char ref. points to char[] handle
	111, 102, 102, 115, 101, 116, 58, 32, 
	
	//	8693	"count: "
	8697,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8698,	//	char[] handle points to the first element
	7,	// array length in the handle
	8695,	//	char ref. points to char[] handle
	99, 111, 117, 110, 116, 58, 32, 
	//	8705	"offset + count: "
	8709,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8710,	//	char[] handle points to the first element
	16,	// array length in the handle
	8707,	//	char ref. points to char[] handle
	111, 102, 102, 115, 101, 116, 32, 43, 
	32, 99, 111, 117, 110, 116, 58, 32, 
	
	//	8726	"at String.getBytes(S..."
	8730,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8731,	//	char[] handle points to the first element
	35,	// array length in the handle
	8728,	//	char ref. points to char[] handle
	97, 116, 32, 83, 116, 114, 105, 110, 
	103, 46, 103, 101, 116, 66, 121, 116, 
	101, 115, 40, 83, 116, 114, 105, 110, 
	103, 32, 101, 110, 99, 111, 100, 105, 
	110, 103, 41, 
	//	8766	"StackOverflowError"
	8770,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8771,	//	char[] handle points to the first element
	18,	// array length in the handle
	8768,	//	char ref. points to char[] handle
	83, 116, 97, 99, 107, 79, 118, 101, 
	114, 102, 108, 111, 119, 69, 114, 114, 
	111, 114, 
	//	8789	"No cyclic enter and ..."
	8793,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8794,	//	char[] handle points to the first element
	46,	// array length in the handle
	8791,	//	char ref. points to char[] handle
	78, 111, 32, 99, 121, 99, 108, 105, 
	99, 32, 101, 110, 116, 101, 114, 32, 
	97, 110, 100, 32, 110, 111, 32, 115, 
	104, 97, 114, 105, 110, 103, 32, 98, 
	101, 116, 119, 101, 101, 110, 32, 116, 
	104, 114, 101, 97, 100, 115, 
	//	8840	"io.JOPPrintStream: b..."
	8844,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8845,	//	char[] handle points to the first element
	33,	// array length in the handle
	8842,	//	char ref. points to char[] handle
	105, 111, 46, 74, 79, 80, 80, 114, 
	105, 110, 116, 83, 116, 114, 101, 97, 
	109, 58, 32, 98, 117, 102, 102, 101, 
	114, 32, 105, 115, 32, 110, 117, 108, 
	108, 
	//	8878	"ArrayIndexOutOfBound..."
	8882,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8883,	//	char[] handle points to the first element
	30,	// array length in the handle
	8880,	//	char ref. points to char[] handle
	65, 114, 114, 97, 121, 73, 110, 100, 
	101, 120, 79, 117, 116, 79, 102, 66, 
	111, 117, 110, 100, 115, 69, 120, 99, 
	101, 112, 116, 105, 111, 110, 
	//	8913	"Array index out of r..."
	8917,	//	String handle points to the first field
	11891,	//	 pointer to String mtab 
	8918,	//	char[] handle points to the first element
	26,	// array length in the handle
	8915,	//	char ref. points to char[] handle
	65, 114, 114, 97, 121, 32, 105, 110, 
	100, 101, 120, 32, 111, 117, 116, 32, 
	111, 102, 32, 114, 97, 110, 103, 101, 
	58, 32, 
//
//	8944: test.HelloWorld
//
		0,	//	instance size
		2,	//	pointer to static primitive fields
		0,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	8949: test.HelloWorld method table
//
	//	8949: test.HelloWorld.<init>()V
		//	code start: 173
		//	code length: 2
		//	cp: 8964
		//	locals: 1 args size: 1
		177154,
		9179137,
	//	8951: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	8953: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	8955: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	8957: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	8959: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	8961: test.HelloWorld.main([Ljava/lang/String;)V
		//	code start: 177
		//	code length: 3
		//	cp: 8964
		//	locals: 2 args size: 1
		181251,
		9179169,

		8944,	//	pointer back to class struct (cp-1)

//
//	8964: test.HelloWorld constants
//
		4,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		7637,	//	String: "Hello World from JOP..."
		13825,	//	virtual index: 27 args: 2 java.io.PrintStream.println(Ljava/lang/String;)V
//
//	8968: java.lang.Object
//
		0,	//	instance size
		2,	//	pointer to static primitive fields
		0,	//	instance GC info
		0,	//	pointer to super class - null
		0,	//	pointer to interface table
//
//	8973: java.lang.Object method table
//
	//	8973: java.lang.Object.<init>()V
		//	code start: 182
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		186369,
		9201665,
	//	8975: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	8977: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	8979: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	8981: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	8983: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,

		8968,	//	pointer back to class struct (cp-1)

//
//	8986: java.lang.Object constants
//
		15,	//	const pool length

		0,	//	static com.jopdesign.sys.Native.toInt(Ljava/lang/Object;)I
		10555,	//	Class: java.lang.StringBuilder
		10560,	//	static, special or private java.lang.StringBuilder.<init>()V
		7663,	//	String: "Object "
		8705,	//	virtual index: 17 args: 2 java.lang.StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
		1024,	//	virtual index: 2 args: 1 java.lang.Object.hashCode()I
		12801,	//	virtual index: 25 args: 2 java.lang.StringBuilder.append(I)Ljava/lang/StringBuilder;
		1536,	//	virtual index: 3 args: 1 java.lang.StringBuilder.toString()Ljava/lang/String;
		9341,	//	Class: java.lang.CloneNotSupportedException
		7675,	//	String: "Object not cloneable"
		9358,	//	static, special or private java.lang.CloneNotSupportedException.<init>(Ljava/lang/String;)V
		10701,	//	Class: java.lang.Error
		7700,	//	String: "getClass() NYI"
		10718,	//	static, special or private java.lang.Error.<init>(Ljava/lang/String;)V
//
//	9001: java.lang.Character
//
		1,	//	instance size
				//	0 valueC
		2,	//	pointer to static primitive fields
		0,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	9006: java.lang.Character method table
//
	//	9006: java.lang.Object.<init>()V
		//	code start: 182
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		186369,
		9201665,
	//	9008: java.lang.Character.equals(Ljava/lang/Object;)Z
		//	code start: 232
		//	code length: 5
		//	cp: 9035
		//	locals: 2 args size: 2
		237573,
		9251842,
	//	9010: java.lang.Character.hashCode()I
		//	code start: 239
		//	code length: 2
		//	cp: 9035
		//	locals: 1 args size: 1
		244738,
		9251841,
	//	9012: java.lang.Character.toString()Ljava/lang/String;
		//	code start: 275
		//	code length: 5
		//	cp: 9035
		//	locals: 1 args size: 1
		281605,
		9251841,
	//	9014: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9016: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9018: java.lang.Character.<init>(C)V
		//	code start: 211
		//	code length: 3
		//	cp: 9035
		//	locals: 2 args size: 2
		216067,
		9251842,
	//	9020: java.lang.Character.charValue()C
		//	code start: 216
		//	code length: 2
		//	cp: 9035
		//	locals: 1 args size: 1
		221186,
		9251841,
	//	9022: java.lang.Character.digit(CI)I
		//	code start: 220
		//	code length: 10
		//	cp: 9035
		//	locals: 3 args size: 2
		225290,
		9251874,
	//	9024: java.lang.Character.isDigit(C)Z
		//	code start: 243
		//	code length: 5
		//	cp: 9035
		//	locals: 2 args size: 1
		248837,
		9251873,
	//	9026: java.lang.Character.isLowerCase(C)Z
		//	code start: 250
		//	code length: 5
		//	cp: 9035
		//	locals: 2 args size: 1
		256005,
		9251873,
	//	9028: java.lang.Character.isUpperCase(C)Z
		//	code start: 257
		//	code length: 5
		//	cp: 9035
		//	locals: 2 args size: 1
		263173,
		9251873,
	//	9030: java.lang.Character.toLowerCase(C)C
		//	code start: 264
		//	code length: 9
		//	cp: 9035
		//	locals: 2 args size: 1
		270345,
		9251873,
	//	9032: java.lang.Character.toUpperCase(C)C
		//	code start: 282
		//	code length: 9
		//	cp: 9035
		//	locals: 2 args size: 1
		288777,
		9251873,

		9001,	//	pointer back to class struct (cp-1)

//
//	9035: java.lang.Character constants
//
		8,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		9382,	//	Class: java.lang.IllegalArgumentException
		7719,	//	String: "lang.Character: work..."
		9399,	//	static, special or private java.lang.IllegalArgumentException.<init>(Ljava/lang/String;)V
		9001,	//	Class: java.lang.Character
		11886,	//	Class: java.lang.String
		11913,	//	static, special or private java.lang.String.<init>([CII)V
//
//	9043: java.lang.ArithmeticException
//
		3,	//	instance size
		6,	//	pointer to static primitive fields
		3,	//	instance GC info
		9810,	//	pointer to super class - java.lang.RuntimeException
		0,	//	pointer to interface table
//
//	9048: java.lang.ArithmeticException method table
//
	//	9048: java.lang.ArithmeticException.<init>()V
		//	code start: 293
		//	code length: 2
		//	cp: 9081
		//	locals: 1 args size: 1
		300034,
		9298945,
	//	9050: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9052: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9054: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9056: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9058: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9060: java.lang.ArithmeticException.<init>(Ljava/lang/String;)V
		//	code start: 297
		//	code length: 2
		//	cp: 9081
		//	locals: 2 args size: 2
		304130,
		9298946,
	//	9062: java.lang.RuntimeException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 1226
		//	code length: 2
		//	cp: 9848
		//	locals: 3 args size: 3
		1255426,
		10084355,
	//	9064: java.lang.RuntimeException.<init>(Ljava/lang/Throwable;)V
		//	code start: 1230
		//	code length: 2
		//	cp: 9848
		//	locals: 2 args size: 2
		1259522,
		10084354,
	//	9066: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	9068: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	9070: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	9072: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	9074: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	9076: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	9078: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		9043,	//	pointer back to class struct (cp-1)

//
//	9081: java.lang.ArithmeticException constants
//
		3,	//	const pool length

		9815,	//	static, special or private java.lang.RuntimeException.<init>()V
		9827,	//	static, special or private java.lang.RuntimeException.<init>(Ljava/lang/String;)V
//
//	9084: java.lang.NullPointerException
//
		3,	//	instance size
		8,	//	pointer to static primitive fields
		3,	//	instance GC info
		9810,	//	pointer to super class - java.lang.RuntimeException
		0,	//	pointer to interface table
//
//	9089: java.lang.NullPointerException method table
//
	//	9089: java.lang.NullPointerException.<init>()V
		//	code start: 301
		//	code length: 2
		//	cp: 9122
		//	locals: 1 args size: 1
		308226,
		9340929,
	//	9091: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9093: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9095: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9097: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9099: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9101: java.lang.NullPointerException.<init>(Ljava/lang/String;)V
		//	code start: 305
		//	code length: 2
		//	cp: 9122
		//	locals: 2 args size: 2
		312322,
		9340930,
	//	9103: java.lang.RuntimeException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 1226
		//	code length: 2
		//	cp: 9848
		//	locals: 3 args size: 3
		1255426,
		10084355,
	//	9105: java.lang.RuntimeException.<init>(Ljava/lang/Throwable;)V
		//	code start: 1230
		//	code length: 2
		//	cp: 9848
		//	locals: 2 args size: 2
		1259522,
		10084354,
	//	9107: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	9109: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	9111: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	9113: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	9115: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	9117: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	9119: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		9084,	//	pointer back to class struct (cp-1)

//
//	9122: java.lang.NullPointerException constants
//
		3,	//	const pool length

		7763,	//	String: "NullPointer"
		9827,	//	static, special or private java.lang.RuntimeException.<init>(Ljava/lang/String;)V
//
//	9125: com.jopdesign.sys.Startup
//
		0,	//	instance size
		10,	//	pointer to static primitive fields
		0,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	9130: com.jopdesign.sys.Startup method table
//
	//	9130: com.jopdesign.sys.Startup.<init>()V
		//	code start: 309
		//	code length: 2
		//	cp: 9185
		//	locals: 1 args size: 1
		316418,
		9405441,
	//	9132: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9134: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9136: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9138: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9140: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9142: com.jopdesign.sys.Startup.boot()V
		//	code start: 313
		//	code length: 30
		//	cp: 9185
		//	locals: 1 args size: 0
		320542,
		9405472,
	//	9144: com.jopdesign.sys.Startup.msg()V
		//	code start: 345
		//	code length: 2
		//	cp: 9185
		//	locals: 0 args size: 0
		353282,
		9405440,
	//	9146: com.jopdesign.sys.Startup.setRunnable(Ljava/lang/Runnable;I)V
		//	code start: 349
		//	code length: 2
		//	cp: 9185
		//	locals: 2 args size: 2
		357378,
		9405442,
	//	9148: com.jopdesign.sys.Startup.getRamSize(I)I
		//	code start: 353
		//	code length: 22
		//	cp: 9185
		//	locals: 4 args size: 1
		361494,
		9405537,
	//	9150: com.jopdesign.sys.Startup.getSpeed()I
		//	code start: 377
		//	code length: 14
		//	cp: 9185
		//	locals: 3 args size: 0
		386062,
		9405536,
	//	9152: com.jopdesign.sys.Startup.version()V
		//	code start: 393
		//	code length: 30
		//	cp: 9185
		//	locals: 2 args size: 0
		402462,
		9405504,
	//	9154: com.jopdesign.sys.Startup.exit()V
		//	code start: 425
		//	code length: 9
		//	cp: 9185
		//	locals: 2 args size: 0
		435209,
		9405504,
	//	9156: com.jopdesign.sys.Startup.getSPMSize()I
		//	code start: 438
		//	code length: 2
		//	cp: 9185
		//	locals: 0 args size: 0
		448514,
		9405440,
	//	9158: com.jopdesign.sys.Startup.clazzinit()V
		//	code start: 442
		//	code length: 25
		//	cp: 9185
		//	locals: 5 args size: 0
		452633,
		9405600,
	//	9160: com.jopdesign.sys.Startup.interpret()V
		//	code start: 469
		//	code length: 163
		//	cp: 9185
		//	locals: 4 args size: 0
		480419,
		9405568,
	//	9162: com.jopdesign.sys.Startup.readBC8u()I
		//	code start: 634
		//	code length: 10
		//	cp: 9185
		//	locals: 1 args size: 0
		649226,
		9405472,
	//	9164: com.jopdesign.sys.Startup.readBC8s()B
		//	code start: 646
		//	code length: 9
		//	cp: 9185
		//	locals: 1 args size: 0
		661513,
		9405472,
	//	9166: com.jopdesign.sys.Startup.readBC16s()S
		//	code start: 657
		//	code length: 6
		//	cp: 9185
		//	locals: 1 args size: 0
		672774,
		9405472,
	//	9168: com.jopdesign.sys.Startup.readBC16u()I
		//	code start: 665
		//	code length: 3
		//	cp: 9185
		//	locals: 1 args size: 0
		680963,
		9405472,
	//	9170: com.jopdesign.sys.Startup.putstatic()V
		//	code start: 670
		//	code length: 5
		//	cp: 9185
		//	locals: 1 args size: 0
		686085,
		9405472,
	//	9172: com.jopdesign.sys.Startup.getstatic()V
		//	code start: 677
		//	code length: 5
		//	cp: 9185
		//	locals: 1 args size: 0
		693253,
		9405472,
	//	9174: com.jopdesign.sys.Startup.putfield()V
		//	code start: 684
		//	code length: 11
		//	cp: 9185
		//	locals: 3 args size: 0
		700427,
		9405536,
	//	9176: com.jopdesign.sys.Startup.getfield()V
		//	code start: 697
		//	code length: 7
		//	cp: 9185
		//	locals: 2 args size: 0
		713735,
		9405504,
	//	9178: com.jopdesign.sys.Startup.newarray()V
		//	code start: 706
		//	code length: 7
		//	cp: 9185
		//	locals: 2 args size: 0
		722951,
		9405504,
	//	9180: com.jopdesign.sys.Startup.anewarray()V
		//	code start: 715
		//	code length: 7
		//	cp: 9185
		//	locals: 2 args size: 0
		732167,
		9405504,
	//	9182: com.jopdesign.sys.Startup.<clinit>()V
		//	code start: 724
		//	code length: 3
		//	cp: 9185
		//	locals: 0 args size: 0
		741379,
		9405440,

		9125,	//	pointer back to class struct (cp-1)

//
//	9185: com.jopdesign.sys.Startup constants
//
		55,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		0,	//	static com.jopdesign.sys.Native.wr(II)V
		0,	//	static com.jopdesign.sys.Native.rdMem(I)I
		9144,	//	static, special or private com.jopdesign.sys.Startup.msg()V
		4194304,	//	Integer
		9148,	//	static, special or private com.jopdesign.sys.Startup.getRamSize(I)I
		10892,	//	static, special or private com.jopdesign.sys.GC.init(II)V
		9259,	//	static, special or private java.lang.System.init()V
		9152,	//	static, special or private com.jopdesign.sys.Startup.version()V
		9158,	//	static, special or private com.jopdesign.sys.Startup.clazzinit()V
		11723,	//	static, special or private com.jopdesign.sys.JVMHelp.init()V
		0,	//	static com.jopdesign.sys.Native.invoke(II)V
		9154,	//	static, special or private com.jopdesign.sys.Startup.exit()V
		0,	//	interface index: 0 args: 1 java.lang.Runnable.run()V
		7779,	//	String: "JOP start"
		11745,	//	static, special or private com.jopdesign.sys.JVMHelp.wr(Ljava/lang/String;)V
		0,	//	static com.jopdesign.sys.Native.rd(I)I
		-1431677611,	//	Integer
		305419896,	//	Integer
		0,	//	static com.jopdesign.sys.Native.rdIntMem(I)I
		7793,	//	String: " V "
		7801,	//	String: "pre2005"
		11747,	//	static, special or private com.jopdesign.sys.JVMHelp.intVal(I)V
		7813,	//	String: "\r\n"
		9150,	//	static, special or private com.jopdesign.sys.Startup.getSpeed()I
		7820,	//	String: "MHz, "
		7830,	//	String: "KB RAM"
		7841,	//	String: ", "
		7848,	//	String: "Byte on-chip RAM"
		7869,	//	String: "CPUs"
		12559,	//	static, special or private com.jopdesign.sys.RtThreadImpl.sleepMs(I)V
		7878,	//	String: "\r\nJVM exit!\r\n"
		0,	//	static com.jopdesign.sys.Native.invoke(I)V
		9160,	//	static, special or private com.jopdesign.sys.Startup.interpret()V
		9162,	//	static, special or private com.jopdesign.sys.Startup.readBC8u()I
		1065353216,	//	Integer
		1073741824,	//	Integer
		9164,	//	static, special or private com.jopdesign.sys.Startup.readBC8s()B
		9166,	//	static, special or private com.jopdesign.sys.Startup.readBC16s()S
		0,	//	static com.jopdesign.sys.Native.wrMem(II)V
		9172,	//	static, special or private com.jopdesign.sys.Startup.getstatic()V
		9170,	//	static, special or private com.jopdesign.sys.Startup.putstatic()V
		9178,	//	static, special or private com.jopdesign.sys.Startup.newarray()V
		9180,	//	static, special or private com.jopdesign.sys.Startup.anewarray()V
		7896,	//	String: "JVM interpreter: byt..."
		9217,	//	virtual index: 18 args: 2 java.io.PrintStream.print(Ljava/lang/Object;)V
		8193,	//	virtual index: 16 args: 2 java.io.PrintStream.print(I)V
		7927,	//	String: " not implemented"
		13825,	//	virtual index: 27 args: 2 java.io.PrintStream.println(Ljava/lang/String;)V
		65535,	//	Integer
		9168,	//	static, special or private com.jopdesign.sys.Startup.readBC16u()I
		10356,	//	static, special or private com.jopdesign.sys.JVM.f_newarray(II)I
		10358,	//	static, special or private com.jopdesign.sys.JVM.f_anewarray(II)I
		10548,	//	Class: java.lang.Runnable
//
//	9240: java.lang.System
//
		0,	//	instance size
		18,	//	pointer to static primitive fields
		0,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	9245: java.lang.System method table
//
	//	9245: java.lang.System.<init>()V
		//	code start: 729
		//	code length: 2
		//	cp: 9272
		//	locals: 1 args size: 1
		746498,
		9494529,
	//	9247: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9249: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9251: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9253: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9255: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9257: java.lang.System.currentTimeMillis()J
		//	code start: 733
		//	code length: 3
		//	cp: 9272
		//	locals: 0 args size: 0
		750595,
		9494528,
	//	9259: java.lang.System.init()V
		//	code start: 738
		//	code length: 7
		//	cp: 9272
		//	locals: 0 args size: 0
		755719,
		9494528,
	//	9261: java.lang.System.exit(I)V
		//	code start: 747
		//	code length: 1
		//	cp: 9272
		//	locals: 1 args size: 1
		764929,
		9494529,
	//	9263: java.lang.System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
		//	code start: 750
		//	code length: 64
		//	cp: 9272
		//	locals: 20 args size: 5
		768064,
		9495013,
	//	9265: java.lang.System.getProperty(Ljava/lang/String;)Ljava/lang/String;
		//	code start: 820
		//	code length: 1
		//	cp: 9272
		//	locals: 1 args size: 1
		839681,
		9494529,
	//	9267: java.lang.System.gc()V
		//	code start: 823
		//	code length: 1
		//	cp: 9272
		//	locals: 0 args size: 0
		842753,
		9494528,
	//	9269: java.lang.System.identityHashCode(Ljava/lang/Object;)I
		//	code start: 826
		//	code length: 2
		//	cp: 9272
		//	locals: 2 args size: 2
		845826,
		9494530,

		9240,	//	pointer back to class struct (cp-1)

//
//	9272: java.lang.System constants
//
		20,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		0,	//	static com.jopdesign.sys.Native.rd(I)I
		12200,	//	Class: java.io.JOPPrintStream
		12205,	//	static, special or private java.io.JOPPrintStream.<init>()V
		9771,	//	Class: java.io.JOPInputStream
		9776,	//	static, special or private java.io.JOPInputStream.<init>()V
		9154,	//	static, special or private com.jopdesign.sys.Startup.exit()V
		9084,	//	Class: java.lang.NullPointerException
		9089,	//	static, special or private java.lang.NullPointerException.<init>()V
		0,	//	static com.jopdesign.sys.Native.toInt(Ljava/lang/Object;)I
		0,	//	static com.jopdesign.sys.Native.rdMem(I)I
		9453,	//	Class: java.lang.ArrayStoreException
		9458,	//	static, special or private java.lang.ArrayStoreException.<init>()V
		10894,	//	static, special or private com.jopdesign.sys.GC.getMutex()Ljava/lang/Object;
		9494,	//	Class: java.lang.IndexOutOfBoundsException
		9499,	//	static, special or private java.lang.IndexOutOfBoundsException.<init>()V
		0,	//	static com.jopdesign.sys.Native.wrMem(II)V
		10914,	//	static, special or private com.jopdesign.sys.GC.gc()V
		1024,	//	virtual index: 2 args: 1 java.lang.Object.hashCode()I
//
//	9292: java.lang.StringIndexOutOfBoundsException
//
		3,	//	instance size
		18,	//	pointer to static primitive fields
		3,	//	instance GC info
		9494,	//	pointer to super class - java.lang.IndexOutOfBoundsException
		0,	//	pointer to interface table
//
//	9297: java.lang.StringIndexOutOfBoundsException method table
//
	//	9297: java.lang.StringIndexOutOfBoundsException.<init>()V
		//	code start: 830
		//	code length: 2
		//	cp: 9332
		//	locals: 1 args size: 1
		849922,
		9555969,
	//	9299: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9301: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9303: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9305: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9307: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9309: java.lang.StringIndexOutOfBoundsException.<init>(Ljava/lang/String;)V
		//	code start: 834
		//	code length: 2
		//	cp: 9332
		//	locals: 2 args size: 2
		854018,
		9555970,
	//	9311: java.lang.RuntimeException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 1226
		//	code length: 2
		//	cp: 9848
		//	locals: 3 args size: 3
		1255426,
		10084355,
	//	9313: java.lang.RuntimeException.<init>(Ljava/lang/Throwable;)V
		//	code start: 1230
		//	code length: 2
		//	cp: 9848
		//	locals: 2 args size: 2
		1259522,
		10084354,
	//	9315: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	9317: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	9319: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	9321: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	9323: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	9325: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	9327: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,
	//	9329: java.lang.StringIndexOutOfBoundsException.<init>(I)V
		//	code start: 838
		//	code length: 6
		//	cp: 9332
		//	locals: 2 args size: 2
		858118,
		9555970,

		9292,	//	pointer back to class struct (cp-1)

//
//	9332: java.lang.StringIndexOutOfBoundsException constants
//
		9,	//	const pool length

		9499,	//	static, special or private java.lang.IndexOutOfBoundsException.<init>()V
		9511,	//	static, special or private java.lang.IndexOutOfBoundsException.<init>(Ljava/lang/String;)V
		10555,	//	Class: java.lang.StringBuilder
		10560,	//	static, special or private java.lang.StringBuilder.<init>()V
		7948,	//	String: "String index out of ..."
		8705,	//	virtual index: 17 args: 2 java.lang.StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
		12801,	//	virtual index: 25 args: 2 java.lang.StringBuilder.append(I)Ljava/lang/StringBuilder;
		1536,	//	virtual index: 3 args: 1 java.lang.StringBuilder.toString()Ljava/lang/String;
//
//	9341: java.lang.CloneNotSupportedException
//
		3,	//	instance size
		20,	//	pointer to static primitive fields
		3,	//	instance GC info
		11502,	//	pointer to super class - java.lang.Exception
		0,	//	pointer to interface table
//
//	9346: java.lang.CloneNotSupportedException method table
//
	//	9346: java.lang.CloneNotSupportedException.<init>()V
		//	code start: 846
		//	code length: 2
		//	cp: 9379
		//	locals: 1 args size: 1
		866306,
		9604097,
	//	9348: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9350: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9352: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9354: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9356: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9358: java.lang.CloneNotSupportedException.<init>(Ljava/lang/String;)V
		//	code start: 850
		//	code length: 2
		//	cp: 9379
		//	locals: 2 args size: 2
		870402,
		9604098,
	//	9360: java.lang.Exception.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 5534
		//	code length: 2
		//	cp: 11540
		//	locals: 3 args size: 3
		5666818,
		11816963,
	//	9362: java.lang.Exception.<init>(Ljava/lang/Throwable;)V
		//	code start: 5538
		//	code length: 2
		//	cp: 11540
		//	locals: 2 args size: 2
		5670914,
		11816962,
	//	9364: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	9366: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	9368: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	9370: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	9372: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	9374: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	9376: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		9341,	//	pointer back to class struct (cp-1)

//
//	9379: java.lang.CloneNotSupportedException constants
//
		3,	//	const pool length

		11507,	//	static, special or private java.lang.Exception.<init>()V
		11519,	//	static, special or private java.lang.Exception.<init>(Ljava/lang/String;)V
//
//	9382: java.lang.IllegalArgumentException
//
		3,	//	instance size
		22,	//	pointer to static primitive fields
		3,	//	instance GC info
		9810,	//	pointer to super class - java.lang.RuntimeException
		0,	//	pointer to interface table
//
//	9387: java.lang.IllegalArgumentException method table
//
	//	9387: java.lang.IllegalArgumentException.<init>()V
		//	code start: 854
		//	code length: 2
		//	cp: 9420
		//	locals: 1 args size: 1
		874498,
		9646081,
	//	9389: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9391: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9393: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9395: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9397: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9399: java.lang.IllegalArgumentException.<init>(Ljava/lang/String;)V
		//	code start: 858
		//	code length: 2
		//	cp: 9420
		//	locals: 2 args size: 2
		878594,
		9646082,
	//	9401: java.lang.IllegalArgumentException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 862
		//	code length: 2
		//	cp: 9420
		//	locals: 3 args size: 3
		882690,
		9646083,
	//	9403: java.lang.IllegalArgumentException.<init>(Ljava/lang/Throwable;)V
		//	code start: 866
		//	code length: 2
		//	cp: 9420
		//	locals: 2 args size: 2
		886786,
		9646082,
	//	9405: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	9407: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	9409: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	9411: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	9413: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	9415: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	9417: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		9382,	//	pointer back to class struct (cp-1)

//
//	9420: java.lang.IllegalArgumentException constants
//
		5,	//	const pool length

		9815,	//	static, special or private java.lang.RuntimeException.<init>()V
		9827,	//	static, special or private java.lang.RuntimeException.<init>(Ljava/lang/String;)V
		12488,	//	static, special or private java.lang.RuntimeException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		12490,	//	static, special or private java.lang.RuntimeException.<init>(Ljava/lang/Throwable;)V
//
//	9425: com.jopdesign.sys.DummyHandler
//
		0,	//	instance size
		24,	//	pointer to static primitive fields
		0,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		9448,	//	pointer to interface table
//
//	9430: com.jopdesign.sys.DummyHandler method table
//
	//	9430: com.jopdesign.sys.DummyHandler.<init>()V
		//	code start: 870
		//	code length: 2
		//	cp: 9445
		//	locals: 1 args size: 1
		890882,
		9671681,
	//	9432: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9434: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9436: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9438: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9440: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9442: com.jopdesign.sys.DummyHandler.run()V
		//	code start: 874
		//	code length: 1
		//	cp: 9445
		//	locals: 1 args size: 1
		894977,
		9671681,

		9425,	//	pointer back to class struct (cp-1)

//
//	9445: com.jopdesign.sys.DummyHandler constants
//
		2,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
//
//	9447: com.jopdesign.sys.DummyHandler implements table
//
		1,	//	java.lang.Runnable, 
//
//	9448: com.jopdesign.sys.DummyHandler interface table
//
//	TODO: is it enough to use methodId as key???
//
		9442,	//	run()V
		0,		//	charAt(I)C
		0,		//	length()I
		0,		//	subSequence(II)Ljava/lang/CharSequence;
		9436,	//	toString()Ljava/lang/String;
//
//	9453: java.lang.ArrayStoreException
//
		3,	//	instance size
		24,	//	pointer to static primitive fields
		3,	//	instance GC info
		9810,	//	pointer to super class - java.lang.RuntimeException
		0,	//	pointer to interface table
//
//	9458: java.lang.ArrayStoreException method table
//
	//	9458: java.lang.ArrayStoreException.<init>()V
		//	code start: 877
		//	code length: 2
		//	cp: 9491
		//	locals: 1 args size: 1
		898050,
		9718785,
	//	9460: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9462: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9464: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9466: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9468: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9470: java.lang.ArrayStoreException.<init>(Ljava/lang/String;)V
		//	code start: 881
		//	code length: 2
		//	cp: 9491
		//	locals: 2 args size: 2
		902146,
		9718786,
	//	9472: java.lang.RuntimeException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 1226
		//	code length: 2
		//	cp: 9848
		//	locals: 3 args size: 3
		1255426,
		10084355,
	//	9474: java.lang.RuntimeException.<init>(Ljava/lang/Throwable;)V
		//	code start: 1230
		//	code length: 2
		//	cp: 9848
		//	locals: 2 args size: 2
		1259522,
		10084354,
	//	9476: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	9478: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	9480: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	9482: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	9484: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	9486: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	9488: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		9453,	//	pointer back to class struct (cp-1)

//
//	9491: java.lang.ArrayStoreException constants
//
		3,	//	const pool length

		9815,	//	static, special or private java.lang.RuntimeException.<init>()V
		9827,	//	static, special or private java.lang.RuntimeException.<init>(Ljava/lang/String;)V
//
//	9494: java.lang.IndexOutOfBoundsException
//
		3,	//	instance size
		26,	//	pointer to static primitive fields
		3,	//	instance GC info
		9810,	//	pointer to super class - java.lang.RuntimeException
		0,	//	pointer to interface table
//
//	9499: java.lang.IndexOutOfBoundsException method table
//
	//	9499: java.lang.IndexOutOfBoundsException.<init>()V
		//	code start: 885
		//	code length: 2
		//	cp: 9532
		//	locals: 1 args size: 1
		906242,
		9760769,
	//	9501: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9503: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9505: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9507: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9509: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9511: java.lang.IndexOutOfBoundsException.<init>(Ljava/lang/String;)V
		//	code start: 889
		//	code length: 2
		//	cp: 9532
		//	locals: 2 args size: 2
		910338,
		9760770,
	//	9513: java.lang.RuntimeException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 1226
		//	code length: 2
		//	cp: 9848
		//	locals: 3 args size: 3
		1255426,
		10084355,
	//	9515: java.lang.RuntimeException.<init>(Ljava/lang/Throwable;)V
		//	code start: 1230
		//	code length: 2
		//	cp: 9848
		//	locals: 2 args size: 2
		1259522,
		10084354,
	//	9517: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	9519: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	9521: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	9523: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	9525: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	9527: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	9529: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		9494,	//	pointer back to class struct (cp-1)

//
//	9532: java.lang.IndexOutOfBoundsException constants
//
		3,	//	const pool length

		9815,	//	static, special or private java.lang.RuntimeException.<init>()V
		9827,	//	static, special or private java.lang.RuntimeException.<init>(Ljava/lang/String;)V
//
//	9535: java.io.PrintStream
//
		2,	//	instance size
				//	0 outLjava/io/OutputStream;
				//	1 error_occurredZ
		28,	//	pointer to static primitive fields
		1,	//	instance GC info
		12394,	//	pointer to super class - java.io.OutputStream
		0,	//	pointer to interface table
//
//	9540: java.io.PrintStream method table
//
	//	9540: java.io.PrintStream.<init>()V
		//	code start: 899
		//	code length: 4
		//	cp: 9601
		//	locals: 1 args size: 1
		920580,
		9831425,
	//	9542: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9544: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9546: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9548: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9550: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9552: java.io.PrintStream.write(I)V
		//	code start: 1023
		//	code length: 6
		//	cp: 9601
		//	locals: 3 args size: 2
		1047558,
		9831458,
	//	9554: java.io.OutputStream.write([B)V
		//	code start: 7169
		//	code length: 3
		//	cp: 12422
		//	locals: 2 args size: 2
		7341059,
		12720130,
	//	9556: java.io.PrintStream.write([BII)V
		//	code start: 1033
		//	code length: 3
		//	cp: 9601
		//	locals: 4 args size: 4
		1057795,
		9831428,
	//	9558: java.io.PrintStream.flush()V
		//	code start: 919
		//	code length: 3
		//	cp: 9601
		//	locals: 2 args size: 1
		941059,
		9831457,
	//	9560: java.io.PrintStream.close()V
		//	code start: 910
		//	code length: 5
		//	cp: 9601
		//	locals: 2 args size: 1
		931845,
		9831457,
	//	9562: java.io.PrintStream.<init>(Ljava/io/OutputStream;)V
		//	code start: 893
		//	code length: 4
		//	cp: 9601
		//	locals: 2 args size: 2
		914436,
		9831426,
	//	9564: java.io.PrintStream.checkError()Z
		//	code start: 905
		//	code length: 3
		//	cp: 9601
		//	locals: 1 args size: 1
		926723,
		9831425,
	//	9566: java.io.PrintStream.print(Z)V
		//	code start: 926
		//	code length: 5
		//	cp: 9601
		//	locals: 2 args size: 2
		948229,
		9831426,
	//	9568: java.io.PrintStream.print(C)V
		//	code start: 933
		//	code length: 6
		//	cp: 9601
		//	locals: 3 args size: 2
		955398,
		9831458,
	//	9570: java.io.PrintStream.print([C)V
		//	code start: 941
		//	code length: 4
		//	cp: 9601
		//	locals: 3 args size: 2
		963588,
		9831458,
	//	9572: java.io.PrintStream.print(I)V
		//	code start: 947
		//	code length: 3
		//	cp: 9601
		//	locals: 2 args size: 2
		969731,
		9831426,
	//	9574: java.io.PrintStream.print(J)V
		//	code start: 952
		//	code length: 3
		//	cp: 9601
		//	locals: 3 args size: 3
		974851,
		9831427,
	//	9576: java.io.PrintStream.print(Ljava/lang/Object;)V
		//	code start: 957
		//	code length: 5
		//	cp: 9601
		//	locals: 2 args size: 2
		979973,
		9831426,
	//	9578: java.io.PrintStream.print(Ljava/lang/String;)V
		//	code start: 964
		//	code length: 6
		//	cp: 9601
		//	locals: 3 args size: 2
		987142,
		9831458,
	//	9580: java.io.PrintStream.println()V
		//	code start: 974
		//	code length: 5
		//	cp: 9601
		//	locals: 3 args size: 1
		997381,
		9831489,
	//	9582: java.io.PrintStream.println(Z)V
		//	code start: 983
		//	code length: 3
		//	cp: 9601
		//	locals: 2 args size: 2
		1006595,
		9831426,
	//	9584: java.io.PrintStream.println(C)V
		//	code start: 988
		//	code length: 4
		//	cp: 9601
		//	locals: 2 args size: 2
		1011716,
		9831426,
	//	9586: java.io.PrintStream.println([C)V
		//	code start: 994
		//	code length: 3
		//	cp: 9601
		//	locals: 2 args size: 2
		1017859,
		9831426,
	//	9588: java.io.PrintStream.println(I)V
		//	code start: 999
		//	code length: 3
		//	cp: 9601
		//	locals: 2 args size: 2
		1022979,
		9831426,
	//	9590: java.io.PrintStream.println(J)V
		//	code start: 1004
		//	code length: 3
		//	cp: 9601
		//	locals: 3 args size: 3
		1028099,
		9831427,
	//	9592: java.io.PrintStream.println(Ljava/lang/Object;)V
		//	code start: 1009
		//	code length: 3
		//	cp: 9601
		//	locals: 2 args size: 2
		1033219,
		9831426,
	//	9594: java.io.PrintStream.println(Ljava/lang/String;)V
		//	code start: 1014
		//	code length: 3
		//	cp: 9601
		//	locals: 2 args size: 2
		1038339,
		9831426,
	//	9596: java.io.PrintStream.setError()V
		//	code start: 1019
		//	code length: 2
		//	cp: 9601
		//	locals: 1 args size: 1
		1043458,
		9831425,
	//	9598: java.io.PrintStream.writeChars(Ljava/lang/String;)V
		//	code start: 1038
		//	code length: 7
		//	cp: 9601
		//	locals: 3 args size: 2
		1062919,
		9831458,

		9535,	//	pointer back to class struct (cp-1)

//
//	9601: java.io.PrintStream constants
//
		34,	//	const pool length

		12399,	//	static, special or private java.io.OutputStream.<init>()V
		4608,	//	virtual index: 9 args: 1 java.io.PrintStream.flush()V
		5120,	//	virtual index: 10 args: 1 java.io.OutputStream.close()V
		6656,	//	virtual index: 13 args: 1 java.io.IOException.printStackTrace()V
		11653,	//	Class: java.io.IOException
		4608,	//	virtual index: 9 args: 1 java.io.OutputStream.flush()V
		7980,	//	String: "true"
		9578,	//	static, special or private java.io.PrintStream.print(Ljava/lang/String;)V
		7989,	//	String: "false"
		9001,	//	Class: java.lang.Character
		9018,	//	static, special or private java.lang.Character.<init>(C)V
		1536,	//	virtual index: 3 args: 1 java.lang.Character.toString()Ljava/lang/String;
		11886,	//	Class: java.lang.String
		11911,	//	static, special or private java.lang.String.<init>([C)V
		11979,	//	static, special or private java.lang.String.valueOf(I)Ljava/lang/String;
		11981,	//	static, special or private java.lang.String.valueOf(J)Ljava/lang/String;
		7999,	//	String: "null"
		1536,	//	virtual index: 3 args: 1 java.lang.Object.toString()Ljava/lang/String;
		14849,	//	virtual index: 29 args: 2 java.io.PrintStream.writeChars(Ljava/lang/String;)V
		14336,	//	virtual index: 28 args: 1 java.io.PrintStream.setError()V
		7813,	//	String: "\r\n"
		6657,	//	virtual index: 13 args: 2 java.io.PrintStream.print(Z)V
		10240,	//	virtual index: 20 args: 1 java.io.PrintStream.println()V
		7169,	//	virtual index: 14 args: 2 java.io.PrintStream.print(C)V
		7681,	//	virtual index: 15 args: 2 java.io.PrintStream.print([C)V
		8193,	//	virtual index: 16 args: 2 java.io.PrintStream.print(I)V
		8706,	//	virtual index: 17 args: 3 java.io.PrintStream.print(J)V
		9217,	//	virtual index: 18 args: 2 java.io.PrintStream.print(Ljava/lang/Object;)V
		3073,	//	virtual index: 6 args: 2 java.io.OutputStream.write(I)V
		4099,	//	virtual index: 8 args: 4 java.io.OutputStream.write([BII)V
		13824,	//	virtual index: 27 args: 1 java.lang.String.length()I
		17922,	//	virtual index: 35 args: 3 java.lang.String.substring(II)Ljava/lang/String;
		9216,	//	virtual index: 18 args: 1 java.lang.String.getBytes()[B
//
//	9635: com.jopdesign.io.SerialPort
//
		2,	//	instance size
				//	0 statusI
				//	1 dataI
		28,	//	pointer to static primitive fields
		0,	//	instance GC info
		10814,	//	pointer to super class - com.jopdesign.io.HardwareObject
		0,	//	pointer to interface table
//
//	9640: com.jopdesign.io.SerialPort method table
//
	//	9640: com.jopdesign.io.SerialPort.<init>()V
		//	code start: 1047
		//	code length: 2
		//	cp: 9661
		//	locals: 1 args size: 1
		1072130,
		9892865,
	//	9642: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9644: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9646: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9648: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9650: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9652: com.jopdesign.io.SerialPort.read()I
		//	code start: 1051
		//	code length: 2
		//	cp: 9661
		//	locals: 1 args size: 1
		1076226,
		9892865,
	//	9654: com.jopdesign.io.SerialPort.write(I)V
		//	code start: 1055
		//	code length: 2
		//	cp: 9661
		//	locals: 2 args size: 2
		1080322,
		9892866,
	//	9656: com.jopdesign.io.SerialPort.rxFull()Z
		//	code start: 1059
		//	code length: 4
		//	cp: 9661
		//	locals: 1 args size: 1
		1084420,
		9892865,
	//	9658: com.jopdesign.io.SerialPort.txEmpty()Z
		//	code start: 1065
		//	code length: 4
		//	cp: 9661
		//	locals: 1 args size: 1
		1090564,
		9892865,

		9635,	//	pointer back to class struct (cp-1)

//
//	9661: com.jopdesign.io.SerialPort constants
//
		2,	//	const pool length

		10819,	//	static, special or private com.jopdesign.io.HardwareObject.<init>()V
//
//	9663: java.lang.Throwable
//
		3,	//	instance size
				//	0 detailMessageLjava/lang/String;
				//	1 causeLjava/lang/Throwable;
				//	2 stack_pointerI
		30,	//	pointer to static primitive fields
		3,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	9668: java.lang.Throwable method table
//
	//	9668: java.lang.Throwable.<init>()V
		//	code start: 1071
		//	code length: 3
		//	cp: 9701
		//	locals: 1 args size: 1
		1096707,
		9933825,
	//	9670: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9672: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9674: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9676: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9678: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9680: java.lang.Throwable.<init>(Ljava/lang/String;)V
		//	code start: 1076
		//	code length: 5
		//	cp: 9701
		//	locals: 2 args size: 2
		1101829,
		9933826,
	//	9682: java.lang.Throwable.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 1083
		//	code length: 3
		//	cp: 9701
		//	locals: 3 args size: 3
		1108995,
		9933827,
	//	9684: java.lang.Throwable.<init>(Ljava/lang/Throwable;)V
		//	code start: 1088
		//	code length: 5
		//	cp: 9701
		//	locals: 2 args size: 2
		1114117,
		9933826,
	//	9686: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	9688: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	9690: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	9692: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	9694: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	9696: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	9698: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		9663,	//	pointer back to class struct (cp-1)

//
//	9701: java.lang.Throwable constants
//
		13,	//	const pool length

		11886,	//	Class: java.lang.String
		9680,	//	static, special or private java.lang.Throwable.<init>(Ljava/lang/String;)V
		12523,	//	static, special or private java.lang.Object.<init>()V
		7680,	//	virtual index: 15 args: 1 java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		1536,	//	virtual index: 3 args: 1 java.lang.Object.toString()Ljava/lang/String;
		9682,	//	static, special or private java.lang.Throwable.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		4608,	//	virtual index: 9 args: 1 java.lang.Throwable.getMessage()Ljava/lang/String;
		9382,	//	Class: java.lang.IllegalArgumentException
		9387,	//	static, special or private java.lang.IllegalArgumentException.<init>()V
		12351,	//	Class: java.lang.IllegalStateException
		12356,	//	static, special or private java.lang.IllegalStateException.<init>()V
		7169,	//	virtual index: 14 args: 2 java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
//
//	9714: com.jopdesign.io.IOFactory
//
		3,	//	instance size
				//	0 spLcom/jopdesign/io/SerialPort;
				//	1 sysLcom/jopdesign/io/SysDevice;
				//	2 spMem[I
		30,	//	pointer to static primitive fields
		7,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	9719: com.jopdesign.io.IOFactory method table
//
	//	9719: com.jopdesign.io.IOFactory.<init>()V
		//	code start: 1131
		//	code length: 15
		//	cp: 9754
		//	locals: 1 args size: 1
		1158159,
		9988097,
	//	9721: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9723: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9725: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9727: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9729: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9731: com.jopdesign.io.IOFactory.makeHWObject(Ljava/lang/Object;II)Ljava/lang/Object;
		//	code start: 1148
		//	code length: 3
		//	cp: 9754
		//	locals: 4 args size: 3
		1175555,
		9988131,
	//	9733: com.jopdesign.io.IOFactory.makeHWArray(III)[I
		//	code start: 1153
		//	code length: 3
		//	cp: 9754
		//	locals: 4 args size: 3
		1180675,
		9988131,
	//	9735: com.jopdesign.io.IOFactory.getFactory()Lcom/jopdesign/io/IOFactory;
		//	code start: 1158
		//	code length: 1
		//	cp: 9754
		//	locals: 0 args size: 0
		1185793,
		9988096,
	//	9737: com.jopdesign.io.IOFactory.registerInterruptHandler(ILjava/lang/Runnable;)V
		//	code start: 1161
		//	code length: 2
		//	cp: 9754
		//	locals: 3 args size: 3
		1188866,
		9988099,
	//	9739: com.jopdesign.io.IOFactory.deregisterInterruptHandler(I)V
		//	code start: 1165
		//	code length: 2
		//	cp: 9754
		//	locals: 2 args size: 2
		1192962,
		9988098,
	//	9741: com.jopdesign.io.IOFactory.enableInterrupt(I)V
		//	code start: 1169
		//	code length: 6
		//	cp: 9754
		//	locals: 2 args size: 2
		1197062,
		9988098,
	//	9743: com.jopdesign.io.IOFactory.disableInterrupt(I)V
		//	code start: 1177
		//	code length: 7
		//	cp: 9754
		//	locals: 3 args size: 2
		1205255,
		9988130,
	//	9745: com.jopdesign.io.IOFactory.getSerialPort()Lcom/jopdesign/io/SerialPort;
		//	code start: 1186
		//	code length: 2
		//	cp: 9754
		//	locals: 1 args size: 1
		1214466,
		9988097,
	//	9747: com.jopdesign.io.IOFactory.getSysDevice()Lcom/jopdesign/io/SysDevice;
		//	code start: 1190
		//	code length: 2
		//	cp: 9754
		//	locals: 1 args size: 1
		1218562,
		9988097,
	//	9749: com.jopdesign.io.IOFactory.getScratchpadMemory()[I
		//	code start: 1194
		//	code length: 2
		//	cp: 9754
		//	locals: 1 args size: 1
		1222658,
		9988097,
	//	9751: com.jopdesign.io.IOFactory.<clinit>()V
		//	code start: 1198
		//	code length: 3
		//	cp: 9754
		//	locals: 0 args size: 0
		1226755,
		9988096,

		9714,	//	pointer back to class struct (cp-1)

//
//	9754: com.jopdesign.io.IOFactory constants
//
		17,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		9635,	//	Class: com.jopdesign.io.SerialPort
		9640,	//	static, special or private com.jopdesign.io.SerialPort.<init>()V
		9731,	//	static, special or private com.jopdesign.io.IOFactory.makeHWObject(Ljava/lang/Object;II)Ljava/lang/Object;
		10794,	//	Class: com.jopdesign.io.SysDevice
		10799,	//	static, special or private com.jopdesign.io.SysDevice.<init>()V
		10918,	//	static, special or private com.jopdesign.sys.GC.getScratchpadSize()I
		4194304,	//	Integer
		9733,	//	static, special or private com.jopdesign.io.IOFactory.makeHWArray(III)[I
		0,	//	static com.jopdesign.sys.Native.rdIntMem(I)I
		11727,	//	static, special or private com.jopdesign.sys.JVMHelp.makeHWObject(Ljava/lang/Object;III)Ljava/lang/Object;
		11729,	//	static, special or private com.jopdesign.sys.JVMHelp.makeHWArray(IIII)[I
		11731,	//	static, special or private com.jopdesign.sys.JVMHelp.addInterruptHandler(ILjava/lang/Runnable;)V
		11735,	//	static, special or private com.jopdesign.sys.JVMHelp.removeInterruptHandler(I)V
		9714,	//	Class: com.jopdesign.io.IOFactory
		9719,	//	static, special or private com.jopdesign.io.IOFactory.<init>()V
//
//	9771: java.io.JOPInputStream
//
		0,	//	instance size
		37,	//	pointer to static primitive fields
		0,	//	instance GC info
		11098,	//	pointer to super class - java.io.InputStream
		0,	//	pointer to interface table
//
//	9776: java.io.JOPInputStream method table
//
	//	9776: java.io.JOPInputStream.<init>()V
		//	code start: 1203
		//	code length: 2
		//	cp: 9807
		//	locals: 1 args size: 1
		1231874,
		10042369,
	//	9778: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9780: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9782: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9784: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9786: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9788: java.io.JOPInputStream.available()I
		//	code start: 1207
		//	code length: 3
		//	cp: 9807
		//	locals: 1 args size: 1
		1235971,
		10042369,
	//	9790: java.io.InputStream.close()V
		//	code start: 3953
		//	code length: 1
		//	cp: 11134
		//	locals: 1 args size: 1
		4047873,
		11401217,
	//	9792: java.io.InputStream.mark(I)V
		//	code start: 3956
		//	code length: 1
		//	cp: 11134
		//	locals: 2 args size: 2
		4050945,
		11401218,
	//	9794: java.io.InputStream.markSupported()Z
		//	code start: 3959
		//	code length: 1
		//	cp: 11134
		//	locals: 1 args size: 1
		4054017,
		11401217,
	//	9796: java.io.JOPInputStream.read()I
		//	code start: 1212
		//	code length: 4
		//	cp: 9807
		//	locals: 1 args size: 1
		1241092,
		10042369,
	//	9798: java.io.InputStream.read([B)I
		//	code start: 3962
		//	code length: 3
		//	cp: 11134
		//	locals: 2 args size: 2
		4057091,
		11401218,
	//	9800: java.io.InputStream.read([BII)I
		//	code start: 3967
		//	code length: 25
		//	cp: 11134
		//	locals: 7 args size: 4
		4062233,
		11401316,
	//	9802: java.io.InputStream.reset()V
		//	code start: 3998
		//	code length: 3
		//	cp: 11134
		//	locals: 1 args size: 1
		4093955,
		11401217,
	//	9804: java.io.InputStream.skip(J)J
		//	code start: 4003
		//	code length: 19
		//	cp: 11134
		//	locals: 8 args size: 3
		4099091,
		11401379,

		9771,	//	pointer back to class struct (cp-1)

//
//	9807: java.io.JOPInputStream constants
//
		3,	//	const pool length

		11103,	//	static, special or private java.io.InputStream.<init>()V
		0,	//	static com.jopdesign.sys.Native.rd(I)I
//
//	9810: java.lang.RuntimeException
//
		3,	//	instance size
		37,	//	pointer to static primitive fields
		3,	//	instance GC info
		11502,	//	pointer to super class - java.lang.Exception
		0,	//	pointer to interface table
//
//	9815: java.lang.RuntimeException method table
//
	//	9815: java.lang.RuntimeException.<init>()V
		//	code start: 1218
		//	code length: 2
		//	cp: 9848
		//	locals: 1 args size: 1
		1247234,
		10084353,
	//	9817: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9819: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9821: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9823: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9825: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9827: java.lang.RuntimeException.<init>(Ljava/lang/String;)V
		//	code start: 1222
		//	code length: 2
		//	cp: 9848
		//	locals: 2 args size: 2
		1251330,
		10084354,
	//	9829: java.lang.RuntimeException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 1226
		//	code length: 2
		//	cp: 9848
		//	locals: 3 args size: 3
		1255426,
		10084355,
	//	9831: java.lang.RuntimeException.<init>(Ljava/lang/Throwable;)V
		//	code start: 1230
		//	code length: 2
		//	cp: 9848
		//	locals: 2 args size: 2
		1259522,
		10084354,
	//	9833: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	9835: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	9837: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	9839: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	9841: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	9843: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	9845: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		9810,	//	pointer back to class struct (cp-1)

//
//	9848: java.lang.RuntimeException constants
//
		5,	//	const pool length

		11507,	//	static, special or private java.lang.Exception.<init>()V
		11519,	//	static, special or private java.lang.Exception.<init>(Ljava/lang/String;)V
		11672,	//	static, special or private java.lang.Exception.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		11674,	//	static, special or private java.lang.Exception.<init>(Ljava/lang/Throwable;)V
//
//	9853: java.io.UnsupportedEncodingException
//
		3,	//	instance size
		39,	//	pointer to static primitive fields
		3,	//	instance GC info
		11653,	//	pointer to super class - java.io.IOException
		0,	//	pointer to interface table
//
//	9858: java.io.UnsupportedEncodingException method table
//
	//	9858: java.io.UnsupportedEncodingException.<init>()V
		//	code start: 1234
		//	code length: 2
		//	cp: 9891
		//	locals: 1 args size: 1
		1263618,
		10128385,
	//	9860: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9862: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9864: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9866: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9868: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9870: java.io.UnsupportedEncodingException.<init>(Ljava/lang/String;)V
		//	code start: 1238
		//	code length: 2
		//	cp: 9891
		//	locals: 2 args size: 2
		1267714,
		10128386,
	//	9872: java.lang.Exception.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 5534
		//	code length: 2
		//	cp: 11540
		//	locals: 3 args size: 3
		5666818,
		11816963,
	//	9874: java.lang.Exception.<init>(Ljava/lang/Throwable;)V
		//	code start: 5538
		//	code length: 2
		//	cp: 11540
		//	locals: 2 args size: 2
		5670914,
		11816962,
	//	9876: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	9878: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	9880: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	9882: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	9884: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	9886: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	9888: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		9853,	//	pointer back to class struct (cp-1)

//
//	9891: java.io.UnsupportedEncodingException constants
//
		3,	//	const pool length

		11658,	//	static, special or private java.io.IOException.<init>()V
		11670,	//	static, special or private java.io.IOException.<init>(Ljava/lang/String;)V
//
//	9894: util.Dbg
//
		0,	//	instance size
		41,	//	pointer to static primitive fields
		0,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	9899: util.Dbg method table
//
	//	9899: util.Dbg.<init>()V
		//	code start: 1242
		//	code length: 2
		//	cp: 9944
		//	locals: 1 args size: 1
		1271810,
		10182657,
	//	9901: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9903: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9905: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9907: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9909: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9911: abstract util.Dbg.dbgWr(I)V
		//	code start: 1246
		//	code length: 0
		//	cp: 9944
		//	locals: 2 args size: 2
		0,
		0,
	//	9913: abstract util.Dbg.dbgReadBuffer([II)I
		//	code start: 1246
		//	code length: 0
		//	cp: 9944
		//	locals: 3 args size: 3
		0,
		0,
	//	9915: util.Dbg.init()V
		//	code start: 1246
		//	code length: 3
		//	cp: 9944
		//	locals: 0 args size: 0
		1275907,
		10182656,
	//	9917: util.Dbg.initSer()V
		//	code start: 1251
		//	code length: 3
		//	cp: 9944
		//	locals: 0 args size: 0
		1281027,
		10182656,
	//	9919: util.Dbg.initSerWait()V
		//	code start: 1256
		//	code length: 3
		//	cp: 9944
		//	locals: 0 args size: 0
		1286147,
		10182656,
	//	9921: util.Dbg.wr(I)V
		//	code start: 1261
		//	code length: 2
		//	cp: 9944
		//	locals: 1 args size: 1
		1291266,
		10182657,
	//	9923: util.Dbg.lf()V
		//	code start: 1265
		//	code length: 5
		//	cp: 9944
		//	locals: 0 args size: 0
		1295365,
		10182656,
	//	9925: util.Dbg.readBuffer([II)I
		//	code start: 1272
		//	code length: 3
		//	cp: 9944
		//	locals: 2 args size: 2
		1302531,
		10182658,
	//	9927: util.Dbg.wr(Ljava/lang/String;I)V
		//	code start: 1277
		//	code length: 4
		//	cp: 9944
		//	locals: 2 args size: 2
		1307652,
		10182658,
	//	9929: util.Dbg.wr(Ljava/lang/String;)V
		//	code start: 1283
		//	code length: 7
		//	cp: 9944
		//	locals: 3 args size: 1
		1313799,
		10182721,
	//	9931: util.Dbg.wr(Ljava/lang/StringBuffer;)V
		//	code start: 1292
		//	code length: 7
		//	cp: 9944
		//	locals: 3 args size: 1
		1323015,
		10182721,
	//	9933: util.Dbg.wr(Z)V
		//	code start: 1301
		//	code length: 4
		//	cp: 9944
		//	locals: 1 args size: 1
		1332228,
		10182657,
	//	9935: util.Dbg.intVal(I)V
		//	code start: 1307
		//	code length: 21
		//	cp: 9944
		//	locals: 3 args size: 1
		1338389,
		10182721,
	//	9937: util.Dbg.hexVal(I)V
		//	code start: 1330
		//	code length: 25
		//	cp: 9944
		//	locals: 3 args size: 1
		1361945,
		10182721,
	//	9939: util.Dbg.byteVal(I)V
		//	code start: 1357
		//	code length: 16
		//	cp: 9944
		//	locals: 2 args size: 1
		1389584,
		10182689,
	//	9941: util.Dbg.<clinit>()V
		//	code start: 1375
		//	code length: 2
		//	cp: 9944
		//	locals: 0 args size: 0
		1408002,
		10182656,

		9894,	//	pointer back to class struct (cp-1)

//
//	9944: util.Dbg constants
//
		19,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		11601,	//	Class: util.DbgUdp
		11606,	//	static, special or private util.DbgUdp.<init>()V
		11545,	//	Class: util.DbgSerial
		11550,	//	static, special or private util.DbgSerial.<init>()V
		11594,	//	static, special or private util.DbgSerial.<init>(Z)V
		3073,	//	virtual index: 6 args: 2 util.Dbg.dbgWr(I)V
		3586,	//	virtual index: 7 args: 3 util.Dbg.dbgReadBuffer([II)I
		11636,	//	static, special or private util.Dbg.wr(Ljava/lang/String;)V
		11642,	//	static, special or private util.Dbg.intVal(I)V
		7813,	//	String: "\r\n"
		13824,	//	virtual index: 27 args: 1 java.lang.String.length()I
		7169,	//	virtual index: 14 args: 2 java.lang.String.charAt(I)C
		11628,	//	static, special or private util.Dbg.wr(I)V
		18432,	//	virtual index: 36 args: 1 java.lang.StringBuffer.length()I
		9729,	//	virtual index: 19 args: 2 java.lang.StringBuffer.charAt(I)C
		8008,	//	String: "true "
		8018,	//	String: "false "
//
//	9963: com.jopdesign.sys.JVM
//
		0,	//	instance size
		42,	//	pointer to static primitive fields
		0,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	9968: com.jopdesign.sys.JVM method table
//
	//	9968: com.jopdesign.sys.JVM.<init>()V
		//	code start: 1379
		//	code length: 2
		//	cp: 10493
		//	locals: 1 args size: 1
		1412098,
		10744833,
	//	9970: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	9972: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	9974: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	9976: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	9978: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	9980: com.jopdesign.sys.JVM.f_nop()V
		//	code start: 1383
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1416193,
		10744832,
	//	9982: com.jopdesign.sys.JVM.f_aconst_null()I
		//	code start: 1386
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1419265,
		10744832,
	//	9984: com.jopdesign.sys.JVM.f_iconst_m1()V
		//	code start: 1389
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1422337,
		10744832,
	//	9986: com.jopdesign.sys.JVM.f_iconst_0()V
		//	code start: 1392
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1425409,
		10744832,
	//	9988: com.jopdesign.sys.JVM.f_iconst_1()V
		//	code start: 1395
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1428481,
		10744832,
	//	9990: com.jopdesign.sys.JVM.f_iconst_2()V
		//	code start: 1398
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1431553,
		10744832,
	//	9992: com.jopdesign.sys.JVM.f_iconst_3()V
		//	code start: 1401
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1434625,
		10744832,
	//	9994: com.jopdesign.sys.JVM.f_iconst_4()V
		//	code start: 1404
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1437697,
		10744832,
	//	9996: com.jopdesign.sys.JVM.f_iconst_5()V
		//	code start: 1407
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1440769,
		10744832,
	//	9998: com.jopdesign.sys.JVM.f_lconst_0()V
		//	code start: 1410
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1443841,
		10744832,
	//	10000: com.jopdesign.sys.JVM.f_lconst_1()V
		//	code start: 1413
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1446913,
		10744832,
	//	10002: com.jopdesign.sys.JVM.f_fconst_0()I
		//	code start: 1416
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1449985,
		10744832,
	//	10004: com.jopdesign.sys.JVM.f_fconst_1()I
		//	code start: 1419
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1453057,
		10744832,
	//	10006: com.jopdesign.sys.JVM.f_fconst_2()I
		//	code start: 1422
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1456129,
		10744832,
	//	10008: com.jopdesign.sys.JVM.f_dconst_0()V
		//	code start: 1425
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1459201,
		10744832,
	//	10010: com.jopdesign.sys.JVM.f_dconst_1()V
		//	code start: 1428
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1462273,
		10744832,
	//	10012: com.jopdesign.sys.JVM.f_bipush()V
		//	code start: 1431
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1465345,
		10744832,
	//	10014: com.jopdesign.sys.JVM.f_sipush()V
		//	code start: 1434
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1468417,
		10744832,
	//	10016: com.jopdesign.sys.JVM.f_ldc()V
		//	code start: 1437
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1471489,
		10744832,
	//	10018: com.jopdesign.sys.JVM.f_ldc_w()V
		//	code start: 1440
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1474561,
		10744832,
	//	10020: com.jopdesign.sys.JVM.f_ldc2_w()V
		//	code start: 1443
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1477633,
		10744832,
	//	10022: com.jopdesign.sys.JVM.f_iload()V
		//	code start: 1446
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1480705,
		10744832,
	//	10024: com.jopdesign.sys.JVM.f_lload()V
		//	code start: 1449
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1483777,
		10744832,
	//	10026: com.jopdesign.sys.JVM.f_fload()V
		//	code start: 1452
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1486849,
		10744832,
	//	10028: com.jopdesign.sys.JVM.f_dload()V
		//	code start: 1455
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1489921,
		10744832,
	//	10030: com.jopdesign.sys.JVM.f_aload()V
		//	code start: 1458
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1492993,
		10744832,
	//	10032: com.jopdesign.sys.JVM.f_iload_0()V
		//	code start: 1461
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1496065,
		10744832,
	//	10034: com.jopdesign.sys.JVM.f_iload_1()V
		//	code start: 1464
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1499137,
		10744832,
	//	10036: com.jopdesign.sys.JVM.f_iload_2()V
		//	code start: 1467
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1502209,
		10744832,
	//	10038: com.jopdesign.sys.JVM.f_iload_3()V
		//	code start: 1470
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1505281,
		10744832,
	//	10040: com.jopdesign.sys.JVM.f_lload_0()V
		//	code start: 1473
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1508353,
		10744832,
	//	10042: com.jopdesign.sys.JVM.f_lload_1()V
		//	code start: 1476
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1511425,
		10744832,
	//	10044: com.jopdesign.sys.JVM.f_lload_2()V
		//	code start: 1479
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1514497,
		10744832,
	//	10046: com.jopdesign.sys.JVM.f_lload_3()V
		//	code start: 1482
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1517569,
		10744832,
	//	10048: com.jopdesign.sys.JVM.f_fload_0()V
		//	code start: 1485
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1520641,
		10744832,
	//	10050: com.jopdesign.sys.JVM.f_fload_1()V
		//	code start: 1488
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1523713,
		10744832,
	//	10052: com.jopdesign.sys.JVM.f_fload_2()V
		//	code start: 1491
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1526785,
		10744832,
	//	10054: com.jopdesign.sys.JVM.f_fload_3()V
		//	code start: 1494
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1529857,
		10744832,
	//	10056: com.jopdesign.sys.JVM.f_dload_0()V
		//	code start: 1497
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1532929,
		10744832,
	//	10058: com.jopdesign.sys.JVM.f_dload_1()V
		//	code start: 1500
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1536001,
		10744832,
	//	10060: com.jopdesign.sys.JVM.f_dload_2()V
		//	code start: 1503
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1539073,
		10744832,
	//	10062: com.jopdesign.sys.JVM.f_dload_3()V
		//	code start: 1506
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1542145,
		10744832,
	//	10064: com.jopdesign.sys.JVM.f_aload_0()V
		//	code start: 1509
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1545217,
		10744832,
	//	10066: com.jopdesign.sys.JVM.f_aload_1()V
		//	code start: 1512
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1548289,
		10744832,
	//	10068: com.jopdesign.sys.JVM.f_aload_2()V
		//	code start: 1515
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1551361,
		10744832,
	//	10070: com.jopdesign.sys.JVM.f_aload_3()V
		//	code start: 1518
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1554433,
		10744832,
	//	10072: com.jopdesign.sys.JVM.f_iaload()V
		//	code start: 1521
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1557505,
		10744832,
	//	10074: com.jopdesign.sys.JVM.f_laload()V
		//	code start: 1524
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1560577,
		10744832,
	//	10076: com.jopdesign.sys.JVM.f_faload()V
		//	code start: 1527
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1563649,
		10744832,
	//	10078: com.jopdesign.sys.JVM.f_daload()V
		//	code start: 1530
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1566721,
		10744832,
	//	10080: com.jopdesign.sys.JVM.f_aaload()V
		//	code start: 1533
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1569793,
		10744832,
	//	10082: com.jopdesign.sys.JVM.f_baload()V
		//	code start: 1536
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1572865,
		10744832,
	//	10084: com.jopdesign.sys.JVM.f_caload()V
		//	code start: 1539
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1575937,
		10744832,
	//	10086: com.jopdesign.sys.JVM.f_saload()V
		//	code start: 1542
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1579009,
		10744832,
	//	10088: com.jopdesign.sys.JVM.f_istore()V
		//	code start: 1545
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1582081,
		10744832,
	//	10090: com.jopdesign.sys.JVM.f_lstore()V
		//	code start: 1548
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1585153,
		10744832,
	//	10092: com.jopdesign.sys.JVM.f_fstore()V
		//	code start: 1551
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1588225,
		10744832,
	//	10094: com.jopdesign.sys.JVM.f_dstore()V
		//	code start: 1554
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1591297,
		10744832,
	//	10096: com.jopdesign.sys.JVM.f_astore()V
		//	code start: 1557
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1594369,
		10744832,
	//	10098: com.jopdesign.sys.JVM.f_istore_0()V
		//	code start: 1560
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1597441,
		10744832,
	//	10100: com.jopdesign.sys.JVM.f_istore_1()V
		//	code start: 1563
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1600513,
		10744832,
	//	10102: com.jopdesign.sys.JVM.f_istore_2()V
		//	code start: 1566
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1603585,
		10744832,
	//	10104: com.jopdesign.sys.JVM.f_istore_3()V
		//	code start: 1569
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1606657,
		10744832,
	//	10106: com.jopdesign.sys.JVM.f_lstore_0()V
		//	code start: 1572
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1609729,
		10744832,
	//	10108: com.jopdesign.sys.JVM.f_lstore_1()V
		//	code start: 1575
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1612801,
		10744832,
	//	10110: com.jopdesign.sys.JVM.f_lstore_2()V
		//	code start: 1578
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1615873,
		10744832,
	//	10112: com.jopdesign.sys.JVM.f_lstore_3()V
		//	code start: 1581
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1618945,
		10744832,
	//	10114: com.jopdesign.sys.JVM.f_fstore_0()V
		//	code start: 1584
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1622017,
		10744832,
	//	10116: com.jopdesign.sys.JVM.f_fstore_1()V
		//	code start: 1587
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1625089,
		10744832,
	//	10118: com.jopdesign.sys.JVM.f_fstore_2()V
		//	code start: 1590
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1628161,
		10744832,
	//	10120: com.jopdesign.sys.JVM.f_fstore_3()V
		//	code start: 1593
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1631233,
		10744832,
	//	10122: com.jopdesign.sys.JVM.f_dstore_0()V
		//	code start: 1596
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1634305,
		10744832,
	//	10124: com.jopdesign.sys.JVM.f_dstore_1()V
		//	code start: 1599
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1637377,
		10744832,
	//	10126: com.jopdesign.sys.JVM.f_dstore_2()V
		//	code start: 1602
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1640449,
		10744832,
	//	10128: com.jopdesign.sys.JVM.f_dstore_3()V
		//	code start: 1605
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1643521,
		10744832,
	//	10130: com.jopdesign.sys.JVM.f_astore_0()V
		//	code start: 1608
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1646593,
		10744832,
	//	10132: com.jopdesign.sys.JVM.f_astore_1()V
		//	code start: 1611
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1649665,
		10744832,
	//	10134: com.jopdesign.sys.JVM.f_astore_2()V
		//	code start: 1614
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1652737,
		10744832,
	//	10136: com.jopdesign.sys.JVM.f_astore_3()V
		//	code start: 1617
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1655809,
		10744832,
	//	10138: com.jopdesign.sys.JVM.f_iastore()V
		//	code start: 1620
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1658881,
		10744832,
	//	10140: com.jopdesign.sys.JVM.f_lastore()V
		//	code start: 1623
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1661953,
		10744832,
	//	10142: com.jopdesign.sys.JVM.f_fastore()V
		//	code start: 1626
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1665025,
		10744832,
	//	10144: com.jopdesign.sys.JVM.f_dastore()V
		//	code start: 1629
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1668097,
		10744832,
	//	10146: com.jopdesign.sys.JVM.f_aastore(III)V
		//	code start: 1632
		//	code length: 17
		//	cp: 10493
		//	locals: 6 args size: 3
		1671185,
		10744931,
	//	10148: com.jopdesign.sys.JVM.f_bastore()V
		//	code start: 1655
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1694721,
		10744832,
	//	10150: com.jopdesign.sys.JVM.f_castore()V
		//	code start: 1658
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1697793,
		10744832,
	//	10152: com.jopdesign.sys.JVM.f_sastore()V
		//	code start: 1661
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1700865,
		10744832,
	//	10154: com.jopdesign.sys.JVM.f_pop()V
		//	code start: 1664
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1703937,
		10744832,
	//	10156: com.jopdesign.sys.JVM.f_pop2()V
		//	code start: 1667
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1707009,
		10744832,
	//	10158: com.jopdesign.sys.JVM.f_dup()V
		//	code start: 1670
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1710081,
		10744832,
	//	10160: com.jopdesign.sys.JVM.f_dup_x1()V
		//	code start: 1673
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1713153,
		10744832,
	//	10162: com.jopdesign.sys.JVM.f_dup_x2()V
		//	code start: 1676
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1716225,
		10744832,
	//	10164: com.jopdesign.sys.JVM.f_dup2()V
		//	code start: 1679
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1719297,
		10744832,
	//	10166: com.jopdesign.sys.JVM.f_dup2_x1()V
		//	code start: 1682
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1722369,
		10744832,
	//	10168: com.jopdesign.sys.JVM.f_dup2_x2()V
		//	code start: 1685
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1725441,
		10744832,
	//	10170: com.jopdesign.sys.JVM.f_swap()V
		//	code start: 1688
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1728513,
		10744832,
	//	10172: com.jopdesign.sys.JVM.f_iadd()V
		//	code start: 1691
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1731585,
		10744832,
	//	10174: com.jopdesign.sys.JVM.f_ladd(IIII)J
		//	code start: 1694
		//	code length: 8
		//	cp: 10493
		//	locals: 5 args size: 4
		1734664,
		10744868,
	//	10176: com.jopdesign.sys.JVM.f_fadd(II)I
		//	code start: 1704
		//	code length: 2
		//	cp: 10493
		//	locals: 2 args size: 2
		1744898,
		10744834,
	//	10178: com.jopdesign.sys.JVM.f_dadd()V
		//	code start: 1708
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1748993,
		10744832,
	//	10180: com.jopdesign.sys.JVM.f_isub()V
		//	code start: 1711
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1752065,
		10744832,
	//	10182: com.jopdesign.sys.JVM.f_lsub(JJ)J
		//	code start: 1714
		//	code length: 3
		//	cp: 10493
		//	locals: 4 args size: 4
		1755139,
		10744836,
	//	10184: com.jopdesign.sys.JVM.f_fsub(II)I
		//	code start: 1719
		//	code length: 2
		//	cp: 10493
		//	locals: 2 args size: 2
		1760258,
		10744834,
	//	10186: com.jopdesign.sys.JVM.f_dsub()V
		//	code start: 1723
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1764353,
		10744832,
	//	10188: com.jopdesign.sys.JVM.f_imul()V
		//	code start: 1726
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1767425,
		10744832,
	//	10190: com.jopdesign.sys.JVM.f_lmul(JJ)J
		//	code start: 1729
		//	code length: 46
		//	cp: 10493
		//	locals: 17 args size: 4
		1770542,
		10745252,
	//	10192: com.jopdesign.sys.JVM.f_fmul(II)I
		//	code start: 1777
		//	code length: 2
		//	cp: 10493
		//	locals: 2 args size: 2
		1819650,
		10744834,
	//	10194: com.jopdesign.sys.JVM.f_dmul()V
		//	code start: 1781
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1823745,
		10744832,
	//	10196: com.jopdesign.sys.JVM.f_idiv(II)I
		//	code start: 1784
		//	code length: 32
		//	cp: 10493
		//	locals: 6 args size: 2
		1826848,
		10744962,
	//	10198: com.jopdesign.sys.JVM.f_ldiv(JJ)J
		//	code start: 1818
		//	code length: 40
		//	cp: 10493
		//	locals: 10 args size: 4
		1861672,
		10745028,
	//	10200: com.jopdesign.sys.JVM.f_fdiv(II)I
		//	code start: 1860
		//	code length: 2
		//	cp: 10493
		//	locals: 2 args size: 2
		1904642,
		10744834,
	//	10202: com.jopdesign.sys.JVM.f_ddiv()V
		//	code start: 1864
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1908737,
		10744832,
	//	10204: com.jopdesign.sys.JVM.f_irem(II)I
		//	code start: 1867
		//	code length: 25
		//	cp: 10493
		//	locals: 5 args size: 2
		1911833,
		10744930,
	//	10206: com.jopdesign.sys.JVM.f_lrem(JJ)J
		//	code start: 1894
		//	code length: 32
		//	cp: 10493
		//	locals: 8 args size: 4
		1939488,
		10744964,
	//	10208: com.jopdesign.sys.JVM.f_frem(II)I
		//	code start: 1928
		//	code length: 2
		//	cp: 10493
		//	locals: 2 args size: 2
		1974274,
		10744834,
	//	10210: com.jopdesign.sys.JVM.f_drem()V
		//	code start: 1932
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1978369,
		10744832,
	//	10212: com.jopdesign.sys.JVM.f_ineg()V
		//	code start: 1935
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1981441,
		10744832,
	//	10214: com.jopdesign.sys.JVM.f_lneg(J)J
		//	code start: 1938
		//	code length: 2
		//	cp: 10493
		//	locals: 2 args size: 2
		1984514,
		10744834,
	//	10216: com.jopdesign.sys.JVM.f_fneg(I)I
		//	code start: 1942
		//	code length: 2
		//	cp: 10493
		//	locals: 1 args size: 1
		1988610,
		10744833,
	//	10218: com.jopdesign.sys.JVM.f_dneg()V
		//	code start: 1946
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1992705,
		10744832,
	//	10220: com.jopdesign.sys.JVM.f_ishl()V
		//	code start: 1949
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		1995777,
		10744832,
	//	10222: com.jopdesign.sys.JVM.f_lshl(III)J
		//	code start: 1952
		//	code length: 13
		//	cp: 10493
		//	locals: 3 args size: 3
		1998861,
		10744835,
	//	10224: com.jopdesign.sys.JVM.f_ishr()V
		//	code start: 1967
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2014209,
		10744832,
	//	10226: com.jopdesign.sys.JVM.f_lshr(III)J
		//	code start: 1970
		//	code length: 16
		//	cp: 10493
		//	locals: 3 args size: 3
		2017296,
		10744835,
	//	10228: com.jopdesign.sys.JVM.f_iushr()V
		//	code start: 1988
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2035713,
		10744832,
	//	10230: com.jopdesign.sys.JVM.f_lushr(III)J
		//	code start: 1991
		//	code length: 13
		//	cp: 10493
		//	locals: 3 args size: 3
		2038797,
		10744835,
	//	10232: com.jopdesign.sys.JVM.f_iand()V
		//	code start: 2006
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2054145,
		10744832,
	//	10234: com.jopdesign.sys.JVM.f_land(IIII)J
		//	code start: 2009
		//	code length: 3
		//	cp: 10493
		//	locals: 4 args size: 4
		2057219,
		10744836,
	//	10236: com.jopdesign.sys.JVM.f_ior()V
		//	code start: 2014
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2062337,
		10744832,
	//	10238: com.jopdesign.sys.JVM.f_lor(IIII)J
		//	code start: 2017
		//	code length: 3
		//	cp: 10493
		//	locals: 4 args size: 4
		2065411,
		10744836,
	//	10240: com.jopdesign.sys.JVM.f_ixor()V
		//	code start: 2022
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2070529,
		10744832,
	//	10242: com.jopdesign.sys.JVM.f_lxor(IIII)J
		//	code start: 2025
		//	code length: 3
		//	cp: 10493
		//	locals: 4 args size: 4
		2073603,
		10744836,
	//	10244: com.jopdesign.sys.JVM.f_iinc()V
		//	code start: 2030
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2078721,
		10744832,
	//	10246: com.jopdesign.sys.JVM.f_i2l(I)J
		//	code start: 2033
		//	code length: 2
		//	cp: 10493
		//	locals: 1 args size: 1
		2081794,
		10744833,
	//	10248: com.jopdesign.sys.JVM.f_i2f(I)I
		//	code start: 2037
		//	code length: 2
		//	cp: 10493
		//	locals: 1 args size: 1
		2085890,
		10744833,
	//	10250: com.jopdesign.sys.JVM.f_i2d()V
		//	code start: 2041
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2089985,
		10744832,
	//	10252: com.jopdesign.sys.JVM.f_l2i()V
		//	code start: 2044
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2093057,
		10744832,
	//	10254: com.jopdesign.sys.JVM.f_l2f()V
		//	code start: 2047
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2096129,
		10744832,
	//	10256: com.jopdesign.sys.JVM.f_l2d()V
		//	code start: 2050
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2099201,
		10744832,
	//	10258: com.jopdesign.sys.JVM.f_f2i(I)I
		//	code start: 2053
		//	code length: 2
		//	cp: 10493
		//	locals: 1 args size: 1
		2102274,
		10744833,
	//	10260: com.jopdesign.sys.JVM.f_f2l()V
		//	code start: 2057
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2106369,
		10744832,
	//	10262: com.jopdesign.sys.JVM.f_f2d()V
		//	code start: 2060
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2109441,
		10744832,
	//	10264: com.jopdesign.sys.JVM.f_d2i()V
		//	code start: 2063
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2112513,
		10744832,
	//	10266: com.jopdesign.sys.JVM.f_d2l()V
		//	code start: 2066
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2115585,
		10744832,
	//	10268: com.jopdesign.sys.JVM.f_d2f()V
		//	code start: 2069
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2118657,
		10744832,
	//	10270: com.jopdesign.sys.JVM.f_i2b(I)I
		//	code start: 2072
		//	code length: 6
		//	cp: 10493
		//	locals: 1 args size: 1
		2121734,
		10744833,
	//	10272: com.jopdesign.sys.JVM.f_i2c()V
		//	code start: 2080
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2129921,
		10744832,
	//	10274: com.jopdesign.sys.JVM.f_i2s(I)I
		//	code start: 2083
		//	code length: 5
		//	cp: 10493
		//	locals: 1 args size: 1
		2132997,
		10744833,
	//	10276: com.jopdesign.sys.JVM.f_lcmp(JJ)I
		//	code start: 2090
		//	code length: 18
		//	cp: 10493
		//	locals: 7 args size: 4
		2140178,
		10744932,
	//	10278: com.jopdesign.sys.JVM.f_fcmpl(II)I
		//	code start: 2110
		//	code length: 2
		//	cp: 10493
		//	locals: 2 args size: 2
		2160642,
		10744834,
	//	10280: com.jopdesign.sys.JVM.f_fcmpg(II)I
		//	code start: 2114
		//	code length: 2
		//	cp: 10493
		//	locals: 2 args size: 2
		2164738,
		10744834,
	//	10282: com.jopdesign.sys.JVM.f_dcmpl()V
		//	code start: 2118
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2168833,
		10744832,
	//	10284: com.jopdesign.sys.JVM.f_dcmpg()V
		//	code start: 2121
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2171905,
		10744832,
	//	10286: com.jopdesign.sys.JVM.f_ifeq()V
		//	code start: 2124
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2174977,
		10744832,
	//	10288: com.jopdesign.sys.JVM.f_ifne()V
		//	code start: 2127
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2178049,
		10744832,
	//	10290: com.jopdesign.sys.JVM.f_iflt()V
		//	code start: 2130
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2181121,
		10744832,
	//	10292: com.jopdesign.sys.JVM.f_ifge()V
		//	code start: 2133
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2184193,
		10744832,
	//	10294: com.jopdesign.sys.JVM.f_ifgt()V
		//	code start: 2136
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2187265,
		10744832,
	//	10296: com.jopdesign.sys.JVM.f_ifle()V
		//	code start: 2139
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2190337,
		10744832,
	//	10298: com.jopdesign.sys.JVM.f_if_icmpeq()V
		//	code start: 2142
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2193409,
		10744832,
	//	10300: com.jopdesign.sys.JVM.f_if_icmpne()V
		//	code start: 2145
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2196481,
		10744832,
	//	10302: com.jopdesign.sys.JVM.f_if_icmplt()V
		//	code start: 2148
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2199553,
		10744832,
	//	10304: com.jopdesign.sys.JVM.f_if_icmpge()V
		//	code start: 2151
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2202625,
		10744832,
	//	10306: com.jopdesign.sys.JVM.f_if_icmpgt()V
		//	code start: 2154
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2205697,
		10744832,
	//	10308: com.jopdesign.sys.JVM.f_if_icmple()V
		//	code start: 2157
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2208769,
		10744832,
	//	10310: com.jopdesign.sys.JVM.f_if_acmpeq()V
		//	code start: 2160
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2211841,
		10744832,
	//	10312: com.jopdesign.sys.JVM.f_if_acmpne()V
		//	code start: 2163
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2214913,
		10744832,
	//	10314: com.jopdesign.sys.JVM.f_goto()V
		//	code start: 2166
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2217985,
		10744832,
	//	10316: com.jopdesign.sys.JVM.f_jsr()V
		//	code start: 2169
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2221057,
		10744832,
	//	10318: com.jopdesign.sys.JVM.f_ret()V
		//	code start: 2172
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2224129,
		10744832,
	//	10320: com.jopdesign.sys.JVM.f_tableswitch(I)V
		//	code start: 2175
		//	code length: 19
		//	cp: 10493
		//	locals: 6 args size: 1
		2227219,
		10744993,
	//	10322: com.jopdesign.sys.JVM.f_lookupswitch(I)V
		//	code start: 2196
		//	code length: 23
		//	cp: 10493
		//	locals: 8 args size: 1
		2248727,
		10745057,
	//	10324: com.jopdesign.sys.JVM.f_ireturn()V
		//	code start: 2221
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2274305,
		10744832,
	//	10326: com.jopdesign.sys.JVM.f_lreturn()V
		//	code start: 2224
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2277377,
		10744832,
	//	10328: com.jopdesign.sys.JVM.f_freturn()V
		//	code start: 2227
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2280449,
		10744832,
	//	10330: com.jopdesign.sys.JVM.f_dreturn()V
		//	code start: 2230
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2283521,
		10744832,
	//	10332: com.jopdesign.sys.JVM.f_areturn()V
		//	code start: 2233
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2286593,
		10744832,
	//	10334: com.jopdesign.sys.JVM.f_return()V
		//	code start: 2236
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2289665,
		10744832,
	//	10336: com.jopdesign.sys.JVM.f_getstatic()V
		//	code start: 2239
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2292737,
		10744832,
	//	10338: com.jopdesign.sys.JVM.f_putstatic()V
		//	code start: 2242
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2295809,
		10744832,
	//	10340: com.jopdesign.sys.JVM.f_getfield()V
		//	code start: 2245
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2298881,
		10744832,
	//	10342: com.jopdesign.sys.JVM.f_putfield()V
		//	code start: 2248
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2301953,
		10744832,
	//	10344: com.jopdesign.sys.JVM.f_invokevirtual()V
		//	code start: 2251
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2305025,
		10744832,
	//	10346: com.jopdesign.sys.JVM.f_invokespecial()V
		//	code start: 2254
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2308097,
		10744832,
	//	10348: com.jopdesign.sys.JVM.f_invokestatic()V
		//	code start: 2257
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2311169,
		10744832,
	//	10350: com.jopdesign.sys.JVM.f_invokeinterface()V
		//	code start: 2260
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2314241,
		10744832,
	//	10352: com.jopdesign.sys.JVM.f_unused_ba()V
		//	code start: 2263
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2317313,
		10744832,
	//	10354: com.jopdesign.sys.JVM.f_new(I)I
		//	code start: 2266
		//	code length: 2
		//	cp: 10493
		//	locals: 1 args size: 1
		2320386,
		10744833,
	//	10356: com.jopdesign.sys.JVM.f_newarray(II)I
		//	code start: 2270
		//	code length: 2
		//	cp: 10493
		//	locals: 2 args size: 2
		2324482,
		10744834,
	//	10358: com.jopdesign.sys.JVM.f_anewarray(II)I
		//	code start: 2274
		//	code length: 2
		//	cp: 10493
		//	locals: 2 args size: 2
		2328578,
		10744834,
	//	10360: com.jopdesign.sys.JVM.f_arraylength()V
		//	code start: 2278
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2332673,
		10744832,
	//	10362: com.jopdesign.sys.JVM.f_athrow(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 2281
		//	code length: 68
		//	cp: 10493
		//	locals: 16 args size: 1
		2335812,
		10745313,
	//	10364: com.jopdesign.sys.JVM.f_checkcast(II)I
		//	code start: 2351
		//	code length: 24
		//	cp: 10493
		//	locals: 6 args size: 2
		2407448,
		10744962,
	//	10366: com.jopdesign.sys.JVM.f_instanceof(II)I
		//	code start: 2377
		//	code length: 21
		//	cp: 10493
		//	locals: 6 args size: 2
		2434069,
		10744962,
	//	10368: com.jopdesign.sys.JVM.f_monitorenter(I)V
		//	code start: 2400
		//	code length: 4
		//	cp: 10493
		//	locals: 1 args size: 1
		2457604,
		10744833,
	//	10370: com.jopdesign.sys.JVM.f_monitorexit(I)V
		//	code start: 2406
		//	code length: 9
		//	cp: 10493
		//	locals: 1 args size: 1
		2463753,
		10744833,
	//	10372: com.jopdesign.sys.JVM.f_wide()V
		//	code start: 2417
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2475009,
		10744832,
	//	10374: com.jopdesign.sys.JVM.f_multianewarray()I
		//	code start: 2420
		//	code length: 47
		//	cp: 10493
		//	locals: 12 args size: 0
		2478127,
		10745216,
	//	10376: com.jopdesign.sys.JVM.f_ifnull()V
		//	code start: 2469
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2528257,
		10744832,
	//	10378: com.jopdesign.sys.JVM.f_ifnonnull()V
		//	code start: 2472
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2531329,
		10744832,
	//	10380: com.jopdesign.sys.JVM.f_goto_w()V
		//	code start: 2475
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2534401,
		10744832,
	//	10382: com.jopdesign.sys.JVM.f_jsr_w()V
		//	code start: 2478
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2537473,
		10744832,
	//	10384: com.jopdesign.sys.JVM.f_breakpoint()V
		//	code start: 2481
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2540545,
		10744832,
	//	10386: com.jopdesign.sys.JVM.f_resCB()V
		//	code start: 2484
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2543617,
		10744832,
	//	10388: com.jopdesign.sys.JVM.f_resCC()V
		//	code start: 2487
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2546689,
		10744832,
	//	10390: com.jopdesign.sys.JVM.f_resCD()V
		//	code start: 2490
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2549761,
		10744832,
	//	10392: com.jopdesign.sys.JVM.f_resCE()V
		//	code start: 2493
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2552833,
		10744832,
	//	10394: com.jopdesign.sys.JVM.f_resCF()V
		//	code start: 2496
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2555905,
		10744832,
	//	10396: com.jopdesign.sys.JVM.f_jopsys_null()V
		//	code start: 2499
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2558977,
		10744832,
	//	10398: com.jopdesign.sys.JVM.f_jopsys_rd()V
		//	code start: 2502
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2562049,
		10744832,
	//	10400: com.jopdesign.sys.JVM.f_jopsys_wr()V
		//	code start: 2505
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2565121,
		10744832,
	//	10402: com.jopdesign.sys.JVM.f_jopsys_rdmem()V
		//	code start: 2508
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2568193,
		10744832,
	//	10404: com.jopdesign.sys.JVM.f_jopsys_wrmem()V
		//	code start: 2511
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2571265,
		10744832,
	//	10406: com.jopdesign.sys.JVM.f_jopsys_rdint()V
		//	code start: 2514
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2574337,
		10744832,
	//	10408: com.jopdesign.sys.JVM.f_jopsys_wrint()V
		//	code start: 2517
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2577409,
		10744832,
	//	10410: com.jopdesign.sys.JVM.f_jopsys_getsp()V
		//	code start: 2520
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2580481,
		10744832,
	//	10412: com.jopdesign.sys.JVM.f_jopsys_setsp()V
		//	code start: 2523
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2583553,
		10744832,
	//	10414: com.jopdesign.sys.JVM.f_jopsys_getvp()V
		//	code start: 2526
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2586625,
		10744832,
	//	10416: com.jopdesign.sys.JVM.f_jopsys_setvp()V
		//	code start: 2529
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2589697,
		10744832,
	//	10418: com.jopdesign.sys.JVM.f_resDB()V
		//	code start: 2532
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2592769,
		10744832,
	//	10420: com.jopdesign.sys.JVM.f_resDC()V
		//	code start: 2535
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2595841,
		10744832,
	//	10422: com.jopdesign.sys.JVM.f_resDD()V
		//	code start: 2538
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2598913,
		10744832,
	//	10424: com.jopdesign.sys.JVM.f_resDE()V
		//	code start: 2541
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2601985,
		10744832,
	//	10426: com.jopdesign.sys.JVM.f_resDF()V
		//	code start: 2544
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2605057,
		10744832,
	//	10428: com.jopdesign.sys.JVM.f_resE0()V
		//	code start: 2547
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2608129,
		10744832,
	//	10430: com.jopdesign.sys.JVM.f_putstatic_ref(II)V
		//	code start: 2550
		//	code length: 15
		//	cp: 10493
		//	locals: 5 args size: 2
		2611215,
		10744930,
	//	10432: com.jopdesign.sys.JVM.f_resE2()V
		//	code start: 2571
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2632705,
		10744832,
	//	10434: com.jopdesign.sys.JVM.f_putfield_ref(III)V
		//	code start: 2574
		//	code length: 17
		//	cp: 10493
		//	locals: 6 args size: 3
		2635793,
		10744931,
	//	10436: com.jopdesign.sys.JVM.f_resE4()V
		//	code start: 2597
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2659329,
		10744832,
	//	10438: com.jopdesign.sys.JVM.f_resE5()V
		//	code start: 2600
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2662401,
		10744832,
	//	10440: com.jopdesign.sys.JVM.f_resE6()V
		//	code start: 2603
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2665473,
		10744832,
	//	10442: com.jopdesign.sys.JVM.f_resE7()V
		//	code start: 2606
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2668545,
		10744832,
	//	10444: com.jopdesign.sys.JVM.f_jopsys_memcpy()V
		//	code start: 2609
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2671617,
		10744832,
	//	10446: com.jopdesign.sys.JVM.f_jopsys_getfield()V
		//	code start: 2612
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2674689,
		10744832,
	//	10448: com.jopdesign.sys.JVM.f_jopsys_putfield()V
		//	code start: 2615
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2677761,
		10744832,
	//	10450: com.jopdesign.sys.JVM.f_resEB()V
		//	code start: 2618
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2680833,
		10744832,
	//	10452: com.jopdesign.sys.JVM.f_invokesuper()V
		//	code start: 2621
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2683905,
		10744832,
	//	10454: com.jopdesign.sys.JVM.f_resED()V
		//	code start: 2624
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2686977,
		10744832,
	//	10456: com.jopdesign.sys.JVM.f_resEE()V
		//	code start: 2627
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2690049,
		10744832,
	//	10458: com.jopdesign.sys.JVM.f_resEF()V
		//	code start: 2630
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2693121,
		10744832,
	//	10460: com.jopdesign.sys.JVM.f_resF0()V
		//	code start: 2633
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2696193,
		10744832,
	//	10462: com.jopdesign.sys.JVM.f_resF1()V
		//	code start: 2636
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2699265,
		10744832,
	//	10464: com.jopdesign.sys.JVM.f_resF2()V
		//	code start: 2639
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2702337,
		10744832,
	//	10466: com.jopdesign.sys.JVM.f_resF3()V
		//	code start: 2642
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2705409,
		10744832,
	//	10468: com.jopdesign.sys.JVM.f_resF4()V
		//	code start: 2645
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2708481,
		10744832,
	//	10470: com.jopdesign.sys.JVM.f_resF5()V
		//	code start: 2648
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2711553,
		10744832,
	//	10472: com.jopdesign.sys.JVM.f_resF6()V
		//	code start: 2651
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2714625,
		10744832,
	//	10474: com.jopdesign.sys.JVM.f_resF7()V
		//	code start: 2654
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2717697,
		10744832,
	//	10476: com.jopdesign.sys.JVM.f_resF8()V
		//	code start: 2657
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2720769,
		10744832,
	//	10478: com.jopdesign.sys.JVM.f_resF9()V
		//	code start: 2660
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2723841,
		10744832,
	//	10480: com.jopdesign.sys.JVM.f_resFA()V
		//	code start: 2663
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2726913,
		10744832,
	//	10482: com.jopdesign.sys.JVM.f_resFB()V
		//	code start: 2666
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2729985,
		10744832,
	//	10484: com.jopdesign.sys.JVM.f_resFC()V
		//	code start: 2669
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2733057,
		10744832,
	//	10486: com.jopdesign.sys.JVM.f_resFD()V
		//	code start: 2672
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2736129,
		10744832,
	//	10488: com.jopdesign.sys.JVM.f_sys_noim()V
		//	code start: 2675
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2739201,
		10744832,
	//	10490: com.jopdesign.sys.JVM.f_sys_init()V
		//	code start: 2678
		//	code length: 1
		//	cp: 10493
		//	locals: 0 args size: 0
		2742273,
		10744832,

		9963,	//	pointer back to class struct (cp-1)

//
//	10493: com.jopdesign.sys.JVM constants
//
		55,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		11719,	//	static, special or private com.jopdesign.sys.JVMHelp.noim()V
		1065353216,	//	Integer
		1073741824,	//	Integer
		0,	//	static com.jopdesign.sys.Native.arrayLoad(II)I
		0,	//	static com.jopdesign.sys.Native.rdMem(I)I
		0,	//	static com.jopdesign.sys.Native.wrMem(II)V
		0,	//	static com.jopdesign.sys.Native.arrayStore(III)V
		0,	//	static com.jopdesign.sys.Native.makeLong(II)J
		11453,	//	static, special or private com.jopdesign.sys.SoftFloat.float32_add(II)I
		-1,	//	Long: -1
		-1,	//	
		11455,	//	static, special or private com.jopdesign.sys.SoftFloat.float32_sub(II)I
		10222,	//	static, special or private com.jopdesign.sys.JVM.f_lshl(III)J
		11457,	//	static, special or private com.jopdesign.sys.SoftFloat.float32_mul(II)I
		-2147483648,	//	Integer
		-2147483648,	//	Long: -9223372036854775808
		0,	//	
		11459,	//	static, special or private com.jopdesign.sys.SoftFloat.float32_div(II)I
		11461,	//	static, special or private com.jopdesign.sys.SoftFloat.float32_rem(II)I
		11443,	//	static, special or private com.jopdesign.sys.SoftFloat.int32_to_float32(I)I
		11447,	//	static, special or private com.jopdesign.sys.SoftFloat.float32_to_int32_round_to_zero(I)I
		65535,	//	Integer
		32768,	//	Integer
		-65536,	//	Integer
		11465,	//	static, special or private com.jopdesign.sys.SoftFloat.float32_cmpl(II)I
		11463,	//	static, special or private com.jopdesign.sys.SoftFloat.float32_cmpg(II)I
		0,	//	static com.jopdesign.sys.Native.getSP()I
		0,	//	static com.jopdesign.sys.Native.rdIntMem(I)I
		0,	//	static com.jopdesign.sys.Native.wrIntMem(II)V
		10920,	//	static, special or private com.jopdesign.sys.GC.newObject(I)I
		10922,	//	static, special or private com.jopdesign.sys.GC.newArray(II)I
		65536,	//	Integer
		0,	//	static com.jopdesign.sys.Native.toInt(Ljava/lang/Object;)I
		10366,	//	static, special or private com.jopdesign.sys.JVM.f_instanceof(II)I
		0,	//	static com.jopdesign.sys.Native.setSP(I)V
		0,	//	static com.jopdesign.sys.Native.monitorExit(I)V
		8029,	//	String: "Uncaught exception: "
		11745,	//	static, special or private com.jopdesign.sys.JVMHelp.wr(Ljava/lang/String;)V
		4608,	//	virtual index: 9 args: 1 java.lang.Throwable.getMessage()Ljava/lang/String;
		8054,	//	String: "\n"
		11725,	//	static, special or private com.jopdesign.sys.JVMHelp.trace(I)V
		9261,	//	static, special or private java.lang.System.exit(I)V
		0,	//	static com.jopdesign.sys.Native.wr(II)V
		11743,	//	static, special or private com.jopdesign.sys.JVMHelp.wr(I)V
		8060,	//	String: "multianewarray - GC ..."
		7813,	//	String: "\r\n"
		8193,	//	virtual index: 16 args: 2 java.io.PrintStream.print(I)V
		8091,	//	String: "dimensions not suppo..."
		13825,	//	virtual index: 27 args: 2 java.io.PrintStream.println(Ljava/lang/String;)V
		10358,	//	static, special or private com.jopdesign.sys.JVM.f_anewarray(II)I
		10356,	//	static, special or private com.jopdesign.sys.JVM.f_newarray(II)I
		0,	//	static com.jopdesign.sys.Native.getField(II)I
		0,	//	static com.jopdesign.sys.Native.putField(III)V
//
//	10548: java.lang.Runnable
//
		0,	//	instance size
		43,	//	pointer to static primitive fields
		0,	//	instance GC info
		-1,	//	interface ID
		0,	//	pointer to interface table
//
//	no method table for interfaces
//

		10548,	//	pointer back to class struct (cp-1)

//
//	10554: java.lang.Runnable constants
//
		1,	//	const pool length

//
//	10555: java.lang.StringBuilder
//
		2,	//	instance size
				//	0 countI
				//	1 value[C
		43,	//	pointer to static primitive fields
		2,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		10696,	//	pointer to interface table
//
//	10560: java.lang.StringBuilder method table
//
	//	10560: java.lang.StringBuilder.<init>()V
		//	code start: 2681
		//	code length: 2
		//	cp: 10661
		//	locals: 1 args size: 1
		2745346,
		10916865,
	//	10562: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	10564: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	10566: java.lang.StringBuilder.toString()Ljava/lang/String;
		//	code start: 3166
		//	code length: 5
		//	cp: 10661
		//	locals: 1 args size: 1
		3241989,
		10916865,
	//	10568: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	10570: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	10572: java.lang.StringBuilder.<init>(I)V
		//	code start: 2685
		//	code length: 3
		//	cp: 10661
		//	locals: 2 args size: 2
		2749443,
		10916866,
	//	10574: java.lang.StringBuilder.<init>(Ljava/lang/String;)V
		//	code start: 2690
		//	code length: 10
		//	cp: 10661
		//	locals: 2 args size: 2
		2754570,
		10916866,
	//	10576: java.lang.StringBuilder.<init>(Ljava/lang/CharSequence;)V
		//	code start: 2702
		//	code length: 17
		//	cp: 10661
		//	locals: 4 args size: 2
		2766865,
		10916930,
	//	10578: java.lang.StringBuilder.length()I
		//	code start: 2721
		//	code length: 2
		//	cp: 10661
		//	locals: 1 args size: 1
		2786306,
		10916865,
	//	10580: java.lang.StringBuilder.capacity()I
		//	code start: 2725
		//	code length: 2
		//	cp: 10661
		//	locals: 1 args size: 1
		2790402,
		10916865,
	//	10582: java.lang.StringBuilder.ensureCapacity(I)V
		//	code start: 2729
		//	code length: 14
		//	cp: 10661
		//	locals: 4 args size: 2
		2794510,
		10916930,
	//	10584: java.lang.StringBuilder.setLength(I)V
		//	code start: 2745
		//	code length: 17
		//	cp: 10661
		//	locals: 3 args size: 2
		2810897,
		10916898,
	//	10586: java.lang.StringBuilder.charAt(I)C
		//	code start: 2764
		//	code length: 7
		//	cp: 10661
		//	locals: 2 args size: 2
		2830343,
		10916866,
	//	10588: java.lang.StringBuilder.getChars(II[CI)V
		//	code start: 2773
		//	code length: 10
		//	cp: 10661
		//	locals: 5 args size: 5
		2839562,
		10916869,
	//	10590: java.lang.StringBuilder.setCharAt(IC)V
		//	code start: 2785
		//	code length: 10
		//	cp: 10661
		//	locals: 3 args size: 3
		2851850,
		10916867,
	//	10592: java.lang.StringBuilder.append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
		//	code start: 2797
		//	code length: 5
		//	cp: 10661
		//	locals: 2 args size: 2
		2864133,
		10916866,
	//	10594: java.lang.StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
		//	code start: 2804
		//	code length: 12
		//	cp: 10661
		//	locals: 3 args size: 2
		2871308,
		10916898,
	//	10596: java.lang.StringBuilder.append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;
		//	code start: 2818
		//	code length: 18
		//	cp: 10661
		//	locals: 5 args size: 2
		2885650,
		10916962,
	//	10598: java.lang.StringBuilder.append([C)Ljava/lang/StringBuilder;
		//	code start: 2842
		//	code length: 3
		//	cp: 10661
		//	locals: 2 args size: 2
		2910211,
		10916866,
	//	10600: java.lang.StringBuilder.append([CII)Ljava/lang/StringBuilder;
		//	code start: 2847
		//	code length: 15
		//	cp: 10661
		//	locals: 4 args size: 4
		2915343,
		10916868,
	//	10602: java.lang.StringBuilder.append(Z)Ljava/lang/StringBuilder;
		//	code start: 2864
		//	code length: 4
		//	cp: 10661
		//	locals: 2 args size: 2
		2932740,
		10916866,
	//	10604: java.lang.StringBuilder.append(C)Ljava/lang/StringBuilder;
		//	code start: 2870
		//	code length: 8
		//	cp: 10661
		//	locals: 2 args size: 2
		2938888,
		10916866,
	//	10606: java.lang.StringBuilder.append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
		//	code start: 2880
		//	code length: 4
		//	cp: 10661
		//	locals: 2 args size: 2
		2949124,
		10916866,
	//	10608: java.lang.StringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
		//	code start: 2886
		//	code length: 17
		//	cp: 10661
		//	locals: 4 args size: 4
		2955281,
		10916868,
	//	10610: java.lang.StringBuilder.append(I)Ljava/lang/StringBuilder;
		//	code start: 2905
		//	code length: 3
		//	cp: 10661
		//	locals: 2 args size: 2
		2974723,
		10916866,
	//	10612: java.lang.StringBuilder.append(J)Ljava/lang/StringBuilder;
		//	code start: 2910
		//	code length: 3
		//	cp: 10661
		//	locals: 3 args size: 3
		2979843,
		10916867,
	//	10614: java.lang.StringBuilder.append(F)Ljava/lang/StringBuilder;
		//	code start: 2915
		//	code length: 3
		//	cp: 10661
		//	locals: 2 args size: 2
		2984963,
		10916866,
	//	10616: java.lang.StringBuilder.delete(II)Ljava/lang/StringBuilder;
		//	code start: 2920
		//	code length: 23
		//	cp: 10661
		//	locals: 3 args size: 3
		2990103,
		10916867,
	//	10618: java.lang.StringBuilder.deleteCharAt(I)Ljava/lang/StringBuilder;
		//	code start: 2945
		//	code length: 3
		//	cp: 10661
		//	locals: 2 args size: 2
		3015683,
		10916866,
	//	10620: java.lang.StringBuilder.replace(IILjava/lang/String;)Ljava/lang/StringBuilder;
		//	code start: 2950
		//	code length: 32
		//	cp: 10661
		//	locals: 6 args size: 4
		3020832,
		10916932,
	//	10622: java.lang.StringBuilder.substring(I)Ljava/lang/String;
		//	code start: 2984
		//	code length: 3
		//	cp: 10661
		//	locals: 2 args size: 2
		3055619,
		10916866,
	//	10624: java.lang.StringBuilder.subSequence(II)Ljava/lang/CharSequence;
		//	code start: 2989
		//	code length: 2
		//	cp: 10661
		//	locals: 3 args size: 3
		3060738,
		10916867,
	//	10626: java.lang.StringBuilder.substring(II)Ljava/lang/String;
		//	code start: 2993
		//	code length: 13
		//	cp: 10661
		//	locals: 4 args size: 3
		3064845,
		10916899,
	//	10628: java.lang.StringBuilder.insert(I[CII)Ljava/lang/StringBuilder;
		//	code start: 3008
		//	code length: 24
		//	cp: 10661
		//	locals: 5 args size: 5
		3080216,
		10916869,
	//	10630: java.lang.StringBuilder.insert(ILjava/lang/Object;)Ljava/lang/StringBuilder;
		//	code start: 3034
		//	code length: 5
		//	cp: 10661
		//	locals: 3 args size: 3
		3106821,
		10916867,
	//	10632: java.lang.StringBuilder.insert(ILjava/lang/String;)Ljava/lang/StringBuilder;
		//	code start: 3041
		//	code length: 22
		//	cp: 10661
		//	locals: 4 args size: 3
		3114006,
		10916899,
	//	10634: java.lang.StringBuilder.insert(I[C)Ljava/lang/StringBuilder;
		//	code start: 3065
		//	code length: 3
		//	cp: 10661
		//	locals: 3 args size: 3
		3138563,
		10916867,
	//	10636: java.lang.StringBuilder.insert(IZ)Ljava/lang/StringBuilder;
		//	code start: 3070
		//	code length: 5
		//	cp: 10661
		//	locals: 3 args size: 3
		3143685,
		10916867,
	//	10638: java.lang.StringBuilder.insert(IC)Ljava/lang/StringBuilder;
		//	code start: 3077
		//	code length: 18
		//	cp: 10661
		//	locals: 3 args size: 3
		3150866,
		10916867,
	//	10640: java.lang.StringBuilder.insert(II)Ljava/lang/StringBuilder;
		//	code start: 3097
		//	code length: 3
		//	cp: 10661
		//	locals: 3 args size: 3
		3171331,
		10916867,
	//	10642: java.lang.StringBuilder.insert(IJ)Ljava/lang/StringBuilder;
		//	code start: 3102
		//	code length: 3
		//	cp: 10661
		//	locals: 4 args size: 4
		3176451,
		10916868,
	//	10644: java.lang.StringBuilder.insert(IF)Ljava/lang/StringBuilder;
		//	code start: 3107
		//	code length: 3
		//	cp: 10661
		//	locals: 3 args size: 3
		3181571,
		10916867,
	//	10646: java.lang.StringBuilder.indexOf(Ljava/lang/String;)I
		//	code start: 3112
		//	code length: 2
		//	cp: 10661
		//	locals: 2 args size: 2
		3186690,
		10916866,
	//	10648: java.lang.StringBuilder.indexOf(Ljava/lang/String;I)I
		//	code start: 3116
		//	code length: 11
		//	cp: 10661
		//	locals: 4 args size: 3
		3190795,
		10916899,
	//	10650: java.lang.StringBuilder.lastIndexOf(Ljava/lang/String;)I
		//	code start: 3129
		//	code length: 4
		//	cp: 10661
		//	locals: 2 args size: 2
		3204100,
		10916866,
	//	10652: java.lang.StringBuilder.lastIndexOf(Ljava/lang/String;I)I
		//	code start: 3135
		//	code length: 10
		//	cp: 10661
		//	locals: 3 args size: 3
		3210250,
		10916867,
	//	10654: java.lang.StringBuilder.reverse()Ljava/lang/StringBuilder;
		//	code start: 3147
		//	code length: 17
		//	cp: 10661
		//	locals: 4 args size: 1
		3222545,
		10916961,
	//	10656: java.lang.StringBuilder.regionMatches(ILjava/lang/String;)Z
		//	code start: 3173
		//	code length: 12
		//	cp: 10661
		//	locals: 5 args size: 3
		3249164,
		10916931,
	//	10658: java.lang.StringBuilder.trimToSize()V
		//	code start: 3187
		//	code length: 10
		//	cp: 10661
		//	locals: 2 args size: 1
		3263498,
		10916897,

		10555,	//	pointer back to class struct (cp-1)

//
//	10661: java.lang.StringBuilder constants
//
		34,	//	const pool length

		10572,	//	static, special or private java.lang.StringBuilder.<init>(I)V
		12523,	//	static, special or private java.lang.Object.<init>()V
		13824,	//	virtual index: 27 args: 1 java.lang.String.length()I
		10244,	//	virtual index: 20 args: 5 java.lang.String.getChars(II[CI)V
		512,	//	interface index: 2 args: 1 java.lang.CharSequence.length()I
		257,	//	interface index: 1 args: 2 java.lang.CharSequence.charAt(I)C
		9263,	//	static, special or private java.lang.System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
		9292,	//	Class: java.lang.StringIndexOutOfBoundsException
		9329,	//	static, special or private java.lang.StringIndexOutOfBoundsException.<init>(I)V
		5633,	//	virtual index: 11 args: 2 java.lang.StringBuilder.ensureCapacity(I)V
		9297,	//	static, special or private java.lang.StringIndexOutOfBoundsException.<init>()V
		7999,	//	String: "null"
		1536,	//	virtual index: 3 args: 1 java.lang.Object.toString()Ljava/lang/String;
		8705,	//	virtual index: 17 args: 2 java.lang.StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
		10243,	//	virtual index: 20 args: 4 java.lang.StringBuilder.append([CII)Ljava/lang/StringBuilder;
		7980,	//	String: "true"
		7989,	//	String: "false"
		12291,	//	virtual index: 24 args: 4 java.lang.StringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
		11979,	//	static, special or private java.lang.String.valueOf(I)Ljava/lang/String;
		12327,	//	static, special or private java.lang.Long.toString(JI)Ljava/lang/String;
		11826,	//	static, special or private java.lang.Float.toString(F)Ljava/lang/String;
		14338,	//	virtual index: 28 args: 3 java.lang.StringBuilder.delete(II)Ljava/lang/StringBuilder;
		16898,	//	virtual index: 33 args: 3 java.lang.StringBuilder.substring(II)Ljava/lang/String;
		8120,	//	String: ""
		11886,	//	Class: java.lang.String
		11913,	//	static, special or private java.lang.String.<init>([CII)V
		18434,	//	virtual index: 36 args: 3 java.lang.StringBuilder.insert(ILjava/lang/String;)Ljava/lang/StringBuilder;
		17412,	//	virtual index: 34 args: 5 java.lang.StringBuilder.insert(I[CII)Ljava/lang/StringBuilder;
		22530,	//	virtual index: 44 args: 3 java.lang.StringBuilder.indexOf(Ljava/lang/String;I)I
		10656,	//	static, special or private java.lang.StringBuilder.regionMatches(ILjava/lang/String;)Z
		23554,	//	virtual index: 46 args: 3 java.lang.StringBuilder.lastIndexOf(Ljava/lang/String;I)I
		11388,	//	static, special or private java.lang.Math.min(II)I
		7169,	//	virtual index: 14 args: 2 java.lang.String.charAt(I)C
//
//	10695: java.lang.StringBuilder implements table
//
		6,	//	java.io.Serializable, java.lang.CharSequence, 
//
//	10696: java.lang.StringBuilder interface table
//
//	TODO: is it enough to use methodId as key???
//
		0,		//	run()V
		10586,	//	charAt(I)C
		10578,	//	length()I
		10624,	//	subSequence(II)Ljava/lang/CharSequence;
		10566,	//	toString()Ljava/lang/String;
//
//	10701: java.lang.Error
//
		3,	//	instance size
		46,	//	pointer to static primitive fields
		3,	//	instance GC info
		9663,	//	pointer to super class - java.lang.Throwable
		0,	//	pointer to interface table
//
//	10706: java.lang.Error method table
//
	//	10706: java.lang.Error.<init>()V
		//	code start: 3199
		//	code length: 2
		//	cp: 10739
		//	locals: 1 args size: 1
		3275778,
		10996737,
	//	10708: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	10710: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	10712: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	10714: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	10716: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	10718: java.lang.Error.<init>(Ljava/lang/String;)V
		//	code start: 3203
		//	code length: 2
		//	cp: 10739
		//	locals: 2 args size: 2
		3279874,
		10996738,
	//	10720: java.lang.Error.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 3207
		//	code length: 2
		//	cp: 10739
		//	locals: 3 args size: 3
		3283970,
		10996739,
	//	10722: java.lang.Error.<init>(Ljava/lang/Throwable;)V
		//	code start: 3211
		//	code length: 2
		//	cp: 10739
		//	locals: 2 args size: 2
		3288066,
		10996738,
	//	10724: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	10726: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	10728: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	10730: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	10732: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	10734: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	10736: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		10701,	//	pointer back to class struct (cp-1)

//
//	10739: java.lang.Error constants
//
		5,	//	const pool length

		9668,	//	static, special or private java.lang.Throwable.<init>()V
		9680,	//	static, special or private java.lang.Throwable.<init>(Ljava/lang/String;)V
		9682,	//	static, special or private java.lang.Throwable.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		9684,	//	static, special or private java.lang.Throwable.<init>(Ljava/lang/Throwable;)V
//
//	10744: joprt.RtThread
//
		1,	//	instance size
				//	0 thrLcom/jopdesign/sys/RtThreadImpl;
		48,	//	pointer to static primitive fields
		1,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	10749: joprt.RtThread method table
//
	//	10749: java.lang.Object.<init>()V
		//	code start: 182
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		186369,
		9201665,
	//	10751: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	10753: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	10755: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	10757: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	10759: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	10761: joprt.RtThread.initClass()V
		//	code start: 3215
		//	code length: 1
		//	cp: 10782
		//	locals: 0 args size: 0
		3292161,
		11040768,
	//	10763: joprt.RtThread.<init>(II)V
		//	code start: 3218
		//	code length: 2
		//	cp: 10782
		//	locals: 3 args size: 3
		3295234,
		11040771,
	//	10765: joprt.RtThread.<init>(III)V
		//	code start: 3222
		//	code length: 5
		//	cp: 10782
		//	locals: 4 args size: 4
		3299333,
		11040772,
	//	10767: joprt.RtThread.run()V
		//	code start: 3229
		//	code length: 1
		//	cp: 10782
		//	locals: 1 args size: 1
		3306497,
		11040769,
	//	10769: joprt.RtThread.startMission()V
		//	code start: 3232
		//	code length: 1
		//	cp: 10782
		//	locals: 0 args size: 0
		3309569,
		11040768,
	//	10771: joprt.RtThread.waitForNextPeriod()Z
		//	code start: 3235
		//	code length: 2
		//	cp: 10782
		//	locals: 1 args size: 1
		3312642,
		11040769,
	//	10773: joprt.RtThread.setProcessor(I)V
		//	code start: 3239
		//	code length: 3
		//	cp: 10782
		//	locals: 2 args size: 2
		3316739,
		11040770,
	//	10775: joprt.RtThread.currentRtThread()Ljoprt/RtThread;
		//	code start: 3244
		//	code length: 1
		//	cp: 10782
		//	locals: 0 args size: 0
		3321857,
		11040768,
	//	10777: joprt.RtThread.sleepMs(I)V
		//	code start: 3247
		//	code length: 2
		//	cp: 10782
		//	locals: 1 args size: 1
		3324930,
		11040769,
	//	10779: joprt.RtThread.busyWait(I)V
		//	code start: 3251
		//	code length: 2
		//	cp: 10782
		//	locals: 1 args size: 1
		3329026,
		11040769,

		10744,	//	pointer back to class struct (cp-1)

//
//	10782: joprt.RtThread constants
//
		12,	//	const pool length

		12535,	//	static, special or private com.jopdesign.sys.RtThreadImpl.init()V
		10765,	//	static, special or private joprt.RtThread.<init>(III)V
		12523,	//	static, special or private java.lang.Object.<init>()V
		12518,	//	Class: com.jopdesign.sys.RtThreadImpl
		12539,	//	static, special or private com.jopdesign.sys.RtThreadImpl.<init>(Ljoprt/RtThread;III)V
		12549,	//	static, special or private com.jopdesign.sys.RtThreadImpl.startMission()V
		7168,	//	virtual index: 14 args: 1 com.jopdesign.sys.RtThreadImpl.waitForNextPeriod()Z
		4609,	//	virtual index: 9 args: 2 com.jopdesign.sys.RtThreadImpl.setProcessor(I)V
		12571,	//	static, special or private com.jopdesign.sys.RtThreadImpl.currentRtThread()Ljoprt/RtThread;
		12559,	//	static, special or private com.jopdesign.sys.RtThreadImpl.sleepMs(I)V
		12561,	//	static, special or private com.jopdesign.sys.RtThreadImpl.busyWait(I)V
//
//	10794: com.jopdesign.io.SysDevice
//
		12,	//	instance size
				//	0 cntIntI
				//	1 uscntTimerI
				//	2 swInterruptI
				//	3 wdI
				//	4 exceptionI
				//	5 lockI
				//	6 cpuIdI
				//	7 signalI
				//	8 intMaskI
				//	9 clearIntI
				//	10 ramCntI
				//	11 nrCpuI
		48,	//	pointer to static primitive fields
		0,	//	instance GC info
		10814,	//	pointer to super class - com.jopdesign.io.HardwareObject
		0,	//	pointer to interface table
//
//	10799: com.jopdesign.io.SysDevice method table
//
	//	10799: com.jopdesign.io.SysDevice.<init>()V
		//	code start: 3255
		//	code length: 2
		//	cp: 10812
		//	locals: 1 args size: 1
		3333122,
		11071489,
	//	10801: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	10803: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	10805: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	10807: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	10809: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,

		10794,	//	pointer back to class struct (cp-1)

//
//	10812: com.jopdesign.io.SysDevice constants
//
		2,	//	const pool length

		10819,	//	static, special or private com.jopdesign.io.HardwareObject.<init>()V
//
//	10814: com.jopdesign.io.HardwareObject
//
		0,	//	instance size
		48,	//	pointer to static primitive fields
		0,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	10819: com.jopdesign.io.HardwareObject method table
//
	//	10819: com.jopdesign.io.HardwareObject.<init>()V
		//	code start: 3259
		//	code length: 2
		//	cp: 10832
		//	locals: 1 args size: 1
		3337218,
		11091969,
	//	10821: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	10823: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	10825: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	10827: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	10829: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,

		10814,	//	pointer back to class struct (cp-1)

//
//	10832: com.jopdesign.io.HardwareObject constants
//
		2,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
//
//	10834: java.lang.NumberFormatException
//
		3,	//	instance size
		48,	//	pointer to static primitive fields
		3,	//	instance GC info
		9382,	//	pointer to super class - java.lang.IllegalArgumentException
		0,	//	pointer to interface table
//
//	10839: java.lang.NumberFormatException method table
//
	//	10839: java.lang.NumberFormatException.<init>()V
		//	code start: 3263
		//	code length: 2
		//	cp: 10872
		//	locals: 1 args size: 1
		3341314,
		11132929,
	//	10841: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	10843: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	10845: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	10847: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	10849: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	10851: java.lang.NumberFormatException.<init>(Ljava/lang/String;)V
		//	code start: 3267
		//	code length: 2
		//	cp: 10872
		//	locals: 2 args size: 2
		3345410,
		11132930,
	//	10853: java.lang.IllegalArgumentException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 862
		//	code length: 2
		//	cp: 9420
		//	locals: 3 args size: 3
		882690,
		9646083,
	//	10855: java.lang.IllegalArgumentException.<init>(Ljava/lang/Throwable;)V
		//	code start: 866
		//	code length: 2
		//	cp: 9420
		//	locals: 2 args size: 2
		886786,
		9646082,
	//	10857: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	10859: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	10861: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	10863: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	10865: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	10867: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	10869: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		10834,	//	pointer back to class struct (cp-1)

//
//	10872: java.lang.NumberFormatException constants
//
		3,	//	const pool length

		9387,	//	static, special or private java.lang.IllegalArgumentException.<init>()V
		9399,	//	static, special or private java.lang.IllegalArgumentException.<init>(Ljava/lang/String;)V
//
//	10875: com.jopdesign.sys.GC
//
		0,	//	instance size
		50,	//	pointer to static primitive fields
		0,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	10880: com.jopdesign.sys.GC method table
//
	//	10880: com.jopdesign.sys.GC.<init>()V
		//	code start: 3271
		//	code length: 2
		//	cp: 10937
		//	locals: 1 args size: 1
		3349506,
		11199489,
	//	10882: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	10884: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	10886: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	10888: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	10890: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	10892: com.jopdesign.sys.GC.init(II)V
		//	code start: 3275
		//	code length: 57
		//	cp: 10937
		//	locals: 4 args size: 2
		3353657,
		11199554,
	//	10894: com.jopdesign.sys.GC.getMutex()Ljava/lang/Object;
		//	code start: 3334
		//	code length: 1
		//	cp: 10937
		//	locals: 0 args size: 0
		3414017,
		11199488,
	//	10896: com.jopdesign.sys.GC.push(I)V
		//	code start: 3337
		//	code length: 23
		//	cp: 10937
		//	locals: 3 args size: 1
		3417111,
		11199553,
	//	10898: com.jopdesign.sys.GC.flip()V
		//	code start: 3370
		//	code length: 25
		//	cp: 10937
		//	locals: 2 args size: 0
		3450905,
		11199552,
	//	10900: com.jopdesign.sys.GC.getStackRoots()V
		//	code start: 3401
		//	code length: 26
		//	cp: 10937
		//	locals: 7 args size: 0
		3482650,
		11199712,
	//	10902: com.jopdesign.sys.GC.getStaticRoots()V
		//	code start: 3433
		//	code length: 9
		//	cp: 10937
		//	locals: 3 args size: 0
		3515401,
		11199584,
	//	10904: com.jopdesign.sys.GC.markAndCopy()V
		//	code start: 3444
		//	code length: 66
		//	cp: 10937
		//	locals: 8 args size: 0
		3526722,
		11199744,
	//	10906: com.jopdesign.sys.GC.sweepHandles()V
		//	code start: 3522
		//	code length: 24
		//	cp: 10937
		//	locals: 4 args size: 0
		3606552,
		11199616,
	//	10908: com.jopdesign.sys.GC.zapSemi()V
		//	code start: 3556
		//	code length: 7
		//	cp: 10937
		//	locals: 2 args size: 0
		3641351,
		11199552,
	//	10910: com.jopdesign.sys.GC.setConcurrent()V
		//	code start: 3565
		//	code length: 2
		//	cp: 10937
		//	locals: 0 args size: 0
		3650562,
		11199488,
	//	10912: com.jopdesign.sys.GC.gc_alloc()V
		//	code start: 3569
		//	code length: 7
		//	cp: 10937
		//	locals: 0 args size: 0
		3654663,
		11199488,
	//	10914: com.jopdesign.sys.GC.gc()V
		//	code start: 3578
		//	code length: 4
		//	cp: 10937
		//	locals: 0 args size: 0
		3663876,
		11199488,
	//	10916: com.jopdesign.sys.GC.free()I
		//	code start: 3584
		//	code length: 2
		//	cp: 10937
		//	locals: 0 args size: 0
		3670018,
		11199488,
	//	10918: com.jopdesign.sys.GC.getScratchpadSize()I
		//	code start: 3588
		//	code length: 1
		//	cp: 10937
		//	locals: 0 args size: 0
		3674113,
		11199488,
	//	10920: com.jopdesign.sys.GC.newObject(I)I
		//	code start: 3591
		//	code length: 48
		//	cp: 10937
		//	locals: 6 args size: 1
		3677232,
		11199649,
	//	10922: com.jopdesign.sys.GC.newArray(II)I
		//	code start: 3653
		//	code length: 55
		//	cp: 10937
		//	locals: 7 args size: 2
		3740727,
		11199650,
	//	10924: com.jopdesign.sys.GC.freeMemory()I
		//	code start: 3722
		//	code length: 2
		//	cp: 10937
		//	locals: 0 args size: 0
		3811330,
		11199488,
	//	10926: com.jopdesign.sys.GC.totalMemory()I
		//	code start: 3726
		//	code length: 2
		//	cp: 10937
		//	locals: 0 args size: 0
		3815426,
		11199488,
	//	10928: com.jopdesign.sys.GC.isValidObjectHandle(I)Z
		//	code start: 3730
		//	code length: 12
		//	cp: 10937
		//	locals: 5 args size: 1
		3819532,
		11199617,
	//	10930: com.jopdesign.sys.GC.writeBarrier(II)V
		//	code start: 3748
		//	code length: 30
		//	cp: 10937
		//	locals: 8 args size: 2
		3837982,
		11199682,
	//	10932: com.jopdesign.sys.GC.log(Ljava/lang/String;I)V
		//	code start: 3786
		//	code length: 5
		//	cp: 10937
		//	locals: 2 args size: 2
		3876869,
		11199490,
	//	10934: com.jopdesign.sys.GC.log(Ljava/lang/String;)V
		//	code start: 3793
		//	code length: 3
		//	cp: 10937
		//	locals: 1 args size: 1
		3884035,
		11199489,

		10875,	//	pointer back to class struct (cp-1)

//
//	10937: com.jopdesign.sys.GC constants
//
		38,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		0,	//	static com.jopdesign.sys.Native.rdMem(I)I
		0,	//	static com.jopdesign.sys.Native.wrMem(II)V
		8968,	//	Class: java.lang.Object
		11026,	//	Class: java.lang.OutOfMemoryError
		11031,	//	static, special or private java.lang.OutOfMemoryError.<init>()V
		8125,	//	String: "GC: gray list not em..."
		10934,	//	static, special or private com.jopdesign.sys.GC.log(Ljava/lang/String;)V
		0,	//	static com.jopdesign.sys.Native.getSP()I
		0,	//	static com.jopdesign.sys.Native.rdIntMem(I)I
		10896,	//	static, special or private com.jopdesign.sys.GC.push(I)V
		12567,	//	static, special or private com.jopdesign.sys.RtThreadImpl.getCnt()I
		12569,	//	static, special or private com.jopdesign.sys.RtThreadImpl.getActive()I
		12563,	//	static, special or private com.jopdesign.sys.RtThreadImpl.getStack(I)[I
		12565,	//	static, special or private com.jopdesign.sys.RtThreadImpl.getSP(I)I
		10900,	//	static, special or private com.jopdesign.sys.GC.getStackRoots()V
		10902,	//	static, special or private com.jopdesign.sys.GC.getStaticRoots()V
		0,	//	static com.jopdesign.sys.Native.memCopy(III)V
		8153,	//	String: "GC allocation trigge..."
		7680,	//	virtual index: 15 args: 1 java.lang.OutOfMemoryError.fillInStackTrace()Ljava/lang/Throwable;
		10914,	//	static, special or private com.jopdesign.sys.GC.gc()V
		10898,	//	static, special or private com.jopdesign.sys.GC.flip()V
		10904,	//	static, special or private com.jopdesign.sys.GC.markAndCopy()V
		10906,	//	static, special or private com.jopdesign.sys.GC.sweepHandles()V
		10908,	//	static, special or private com.jopdesign.sys.GC.zapSemi()V
		10912,	//	static, special or private com.jopdesign.sys.GC.gc_alloc()V
		8181,	//	String: "Run out of handles i..."
		12084,	//	Class: java.lang.NegativeArraySizeException
		12089,	//	static, special or private java.lang.NegativeArraySizeException.<init>()V
		8219,	//	String: "Run out of handles i..."
		10916,	//	static, special or private com.jopdesign.sys.GC.free()I
		9084,	//	Class: java.lang.NullPointerException
		9089,	//	static, special or private java.lang.NullPointerException.<init>()V
		11745,	//	static, special or private com.jopdesign.sys.JVMHelp.wr(Ljava/lang/String;)V
		8256,	//	String: " "
		11741,	//	static, special or private com.jopdesign.sys.JVMHelp.wrSmall(I)V
		8054,	//	String: "\n"
//
//	10975: com.jopdesign.sys.Scheduler
//
		6,	//	instance size
				//	0 next[I
				//	1 ref[Lcom/jopdesign/sys/RtThreadImpl;
				//	2 event[I
				//	3 cntI
				//	4 activeI
				//	5 tmpI
		79,	//	pointer to static primitive fields
		7,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		11021,	//	pointer to interface table
//
//	10980: com.jopdesign.sys.Scheduler method table
//
	//	10980: java.lang.Object.<init>()V
		//	code start: 182
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		186369,
		9201665,
	//	10982: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	10984: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	10986: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	10988: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	10990: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	10992: com.jopdesign.sys.Scheduler.<init>(I)V
		//	code start: 3798
		//	code length: 6
		//	cp: 11003
		//	locals: 2 args size: 2
		3889158,
		11267074,
	//	10994: com.jopdesign.sys.Scheduler.run()V
		//	code start: 3806
		//	code length: 59
		//	cp: 11003
		//	locals: 7 args size: 1
		3897403,
		11267265,
	//	10996: com.jopdesign.sys.Scheduler.allocArrays()V
		//	code start: 3867
		//	code length: 13
		//	cp: 11003
		//	locals: 1 args size: 1
		3959821,
		11267073,
	//	10998: com.jopdesign.sys.Scheduler.addMain()V
		//	code start: 3882
		//	code length: 11
		//	cp: 11003
		//	locals: 1 args size: 1
		3975179,
		11267073,
	//	11000: com.jopdesign.sys.Scheduler.<clinit>()V
		//	code start: 3895
		//	code length: 13
		//	cp: 11003
		//	locals: 1 args size: 0
		3988493,
		11267104,

		10975,	//	pointer back to class struct (cp-1)

//
//	11003: com.jopdesign.sys.Scheduler constants
//
		17,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		0,	//	static com.jopdesign.sys.Native.getSP()I
		0,	//	static com.jopdesign.sys.Native.int2extMem(I[II)V
		0,	//	static com.jopdesign.sys.Native.rd(I)I
		0,	//	static com.jopdesign.sys.Native.wrIntMem(II)V
		0,	//	static com.jopdesign.sys.Native.rdIntMem(I)I
		0,	//	static com.jopdesign.sys.Native.setVP(I)V
		0,	//	static com.jopdesign.sys.Native.setSP(I)V
		0,	//	static com.jopdesign.sys.Native.ext2intMem([III)V
		0,	//	static com.jopdesign.sys.Native.wr(II)V
		12518,	//	Class: com.jopdesign.sys.RtThreadImpl
		12537,	//	static, special or private com.jopdesign.sys.RtThreadImpl.<init>(II)V
		9735,	//	static, special or private com.jopdesign.io.IOFactory.getFactory()Lcom/jopdesign/io/IOFactory;
		7168,	//	virtual index: 14 args: 1 com.jopdesign.io.IOFactory.getSysDevice()Lcom/jopdesign/io/SysDevice;
		10975,	//	Class: com.jopdesign.sys.Scheduler
		10992,	//	static, special or private com.jopdesign.sys.Scheduler.<init>(I)V
//
//	11020: com.jopdesign.sys.Scheduler implements table
//
		1,	//	java.lang.Runnable, 
//
//	11021: com.jopdesign.sys.Scheduler interface table
//
//	TODO: is it enough to use methodId as key???
//
		10994,	//	run()V
		0,		//	charAt(I)C
		0,		//	length()I
		0,		//	subSequence(II)Ljava/lang/CharSequence;
		10986,	//	toString()Ljava/lang/String;
//
//	11026: java.lang.OutOfMemoryError
//
		3,	//	instance size
		86,	//	pointer to static primitive fields
		3,	//	instance GC info
		12428,	//	pointer to super class - java.lang.VirtualMachineError
		0,	//	pointer to interface table
//
//	11031: java.lang.OutOfMemoryError method table
//
	//	11031: java.lang.OutOfMemoryError.<init>()V
		//	code start: 3910
		//	code length: 2
		//	cp: 11064
		//	locals: 1 args size: 1
		4003842,
		11329537,
	//	11033: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	11035: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	11037: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	11039: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	11041: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	11043: java.lang.OutOfMemoryError.<init>(Ljava/lang/String;)V
		//	code start: 3914
		//	code length: 2
		//	cp: 11064
		//	locals: 2 args size: 2
		4007938,
		11329538,
	//	11045: java.lang.Error.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 3207
		//	code length: 2
		//	cp: 10739
		//	locals: 3 args size: 3
		3283970,
		10996739,
	//	11047: java.lang.Error.<init>(Ljava/lang/Throwable;)V
		//	code start: 3211
		//	code length: 2
		//	cp: 10739
		//	locals: 2 args size: 2
		3288066,
		10996738,
	//	11049: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	11051: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	11053: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	11055: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	11057: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	11059: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	11061: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		11026,	//	pointer back to class struct (cp-1)

//
//	11064: java.lang.OutOfMemoryError constants
//
		3,	//	const pool length

		8262,	//	String: "OutOfMemoryError"
		12445,	//	static, special or private java.lang.VirtualMachineError.<init>(Ljava/lang/String;)V
//
//	11067: com.jopdesign.sys.RtThreadImpl$CMPStart
//
		1,	//	instance size
				//	0 startedZ
		88,	//	pointer to static primitive fields
		0,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		11093,	//	pointer to interface table
//
//	11072: com.jopdesign.sys.RtThreadImpl$CMPStart method table
//
	//	11072: com.jopdesign.sys.RtThreadImpl$CMPStart.<init>()V
		//	code start: 3918
		//	code length: 2
		//	cp: 11087
		//	locals: 1 args size: 1
		4012034,
		11353089,
	//	11074: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	11076: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	11078: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	11080: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	11082: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	11084: com.jopdesign.sys.RtThreadImpl$CMPStart.run()V
		//	code start: 3922
		//	code length: 22
		//	cp: 11087
		//	locals: 3 args size: 1
		4016150,
		11353153,

		11067,	//	pointer back to class struct (cp-1)

//
//	11087: com.jopdesign.sys.RtThreadImpl$CMPStart constants
//
		5,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		0,	//	static com.jopdesign.sys.Native.wr(II)V
		12579,	//	static, special or private com.jopdesign.sys.RtThreadImpl.access$000(Lcom/jopdesign/sys/RtThreadImpl;)V
		11733,	//	static, special or private com.jopdesign.sys.JVMHelp.addInterruptHandler(IILjava/lang/Runnable;)V
//
//	11092: com.jopdesign.sys.RtThreadImpl$CMPStart implements table
//
		1,	//	java.lang.Runnable, 
//
//	11093: com.jopdesign.sys.RtThreadImpl$CMPStart interface table
//
//	TODO: is it enough to use methodId as key???
//
		11084,	//	run()V
		0,		//	charAt(I)C
		0,		//	length()I
		0,		//	subSequence(II)Ljava/lang/CharSequence;
		11078,	//	toString()Ljava/lang/String;
//
//	11098: java.io.InputStream
//
		0,	//	instance size
		88,	//	pointer to static primitive fields
		0,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	11103: java.io.InputStream method table
//
	//	11103: java.io.InputStream.<init>()V
		//	code start: 3946
		//	code length: 2
		//	cp: 11134
		//	locals: 1 args size: 1
		4040706,
		11401217,
	//	11105: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	11107: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	11109: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	11111: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	11113: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	11115: java.io.InputStream.available()I
		//	code start: 3950
		//	code length: 1
		//	cp: 11134
		//	locals: 1 args size: 1
		4044801,
		11401217,
	//	11117: java.io.InputStream.close()V
		//	code start: 3953
		//	code length: 1
		//	cp: 11134
		//	locals: 1 args size: 1
		4047873,
		11401217,
	//	11119: java.io.InputStream.mark(I)V
		//	code start: 3956
		//	code length: 1
		//	cp: 11134
		//	locals: 2 args size: 2
		4050945,
		11401218,
	//	11121: java.io.InputStream.markSupported()Z
		//	code start: 3959
		//	code length: 1
		//	cp: 11134
		//	locals: 1 args size: 1
		4054017,
		11401217,
	//	11123: abstract java.io.InputStream.read()I
		//	code start: 3962
		//	code length: 0
		//	cp: 11134
		//	locals: 1 args size: 1
		0,
		0,
	//	11125: java.io.InputStream.read([B)I
		//	code start: 3962
		//	code length: 3
		//	cp: 11134
		//	locals: 2 args size: 2
		4057091,
		11401218,
	//	11127: java.io.InputStream.read([BII)I
		//	code start: 3967
		//	code length: 25
		//	cp: 11134
		//	locals: 7 args size: 4
		4062233,
		11401316,
	//	11129: java.io.InputStream.reset()V
		//	code start: 3998
		//	code length: 3
		//	cp: 11134
		//	locals: 1 args size: 1
		4093955,
		11401217,
	//	11131: java.io.InputStream.skip(J)J
		//	code start: 4003
		//	code length: 19
		//	cp: 11134
		//	locals: 8 args size: 3
		4099091,
		11401379,

		11098,	//	pointer back to class struct (cp-1)

//
//	11134: java.io.InputStream constants
//
		11,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		6147,	//	virtual index: 12 args: 4 java.io.InputStream.read([BII)I
		9494,	//	Class: java.lang.IndexOutOfBoundsException
		9499,	//	static, special or private java.lang.IndexOutOfBoundsException.<init>()V
		5120,	//	virtual index: 10 args: 1 java.io.InputStream.read()I
		11653,	//	Class: java.io.IOException
		8283,	//	String: "mark/reset not suppo..."
		11670,	//	static, special or private java.io.IOException.<init>(Ljava/lang/String;)V
		0,	//	Long: 2048
		2048,	//	
//
//	11145: java.lang.StringBuffer
//
		2,	//	instance size
				//	0 countI
				//	1 value[C
		88,	//	pointer to static primitive fields
		2,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		11274,	//	pointer to interface table
//
//	11150: java.lang.StringBuffer method table
//
	//	11150: java.lang.StringBuffer.<init>()V
		//	code start: 4024
		//	code length: 2
		//	cp: 11239
		//	locals: 1 args size: 1
		4120578,
		11508737,
	//	11152: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	11154: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	11156: java.lang.StringBuffer.toString()Ljava/lang/String;
		//	code start: 4048
		//	code length: 3
		//	cp: 11239
		//	locals: 1 args size: 1
		4145155,
		11508737,
	//	11158: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	11160: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	11162: java.lang.StringBuffer.<init>(I)V
		//	code start: 4028
		//	code length: 3
		//	cp: 11239
		//	locals: 2 args size: 2
		4124675,
		11508738,
	//	11164: java.lang.StringBuffer.<init>(Ljava/lang/String;)V
		//	code start: 4033
		//	code length: 13
		//	cp: 11239
		//	locals: 3 args size: 2
		4129805,
		11508770,
	//	11166: java.lang.StringBuffer.append(Z)Ljava/lang/StringBuffer;
		//	code start: 4053
		//	code length: 5
		//	cp: 11239
		//	locals: 2 args size: 2
		4150277,
		11508738,
	//	11168: java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer;
		//	code start: 4060
		//	code length: 9
		//	cp: 11239
		//	locals: 2 args size: 2
		4157449,
		11508738,
	//	11170: java.lang.StringBuffer.append([C)Ljava/lang/StringBuffer;
		//	code start: 4071
		//	code length: 3
		//	cp: 11239
		//	locals: 2 args size: 2
		4168707,
		11508738,
	//	11172: java.lang.StringBuffer.append([CII)Ljava/lang/StringBuffer;
		//	code start: 4076
		//	code length: 11
		//	cp: 11239
		//	locals: 4 args size: 4
		4173835,
		11508740,
	//	11174: java.lang.StringBuffer.append(I)Ljava/lang/StringBuffer;
		//	code start: 4089
		//	code length: 22
		//	cp: 11239
		//	locals: 4 args size: 2
		4187158,
		11508802,
	//	11176: java.lang.StringBuffer.append(J)Ljava/lang/StringBuffer;
		//	code start: 4113
		//	code length: 3
		//	cp: 11239
		//	locals: 3 args size: 3
		4211715,
		11508739,
	//	11178: java.lang.StringBuffer.append(D)Ljava/lang/StringBuffer;
		//	code start: 4118
		//	code length: 2
		//	cp: 11239
		//	locals: 3 args size: 3
		4216834,
		11508739,
	//	11180: java.lang.StringBuffer.append(Ljava/lang/Object;)Ljava/lang/StringBuffer;
		//	code start: 4122
		//	code length: 5
		//	cp: 11239
		//	locals: 2 args size: 2
		4220933,
		11508738,
	//	11182: java.lang.StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;
		//	code start: 4129
		//	code length: 13
		//	cp: 11239
		//	locals: 3 args size: 2
		4228109,
		11508770,
	//	11184: java.lang.StringBuffer.append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;
		//	code start: 4144
		//	code length: 16
		//	cp: 11239
		//	locals: 3 args size: 2
		4243472,
		11508770,
	//	11186: java.lang.StringBuffer.capacity()I
		//	code start: 4162
		//	code length: 3
		//	cp: 11239
		//	locals: 1 args size: 1
		4261891,
		11508737,
	//	11188: java.lang.StringBuffer.charAt(I)C
		//	code start: 4167
		//	code length: 8
		//	cp: 11239
		//	locals: 2 args size: 2
		4267016,
		11508738,
	//	11190: java.lang.StringBuffer.delete(II)Ljava/lang/StringBuffer;
		//	code start: 4177
		//	code length: 24
		//	cp: 11239
		//	locals: 3 args size: 3
		4277272,
		11508739,
	//	11192: java.lang.StringBuffer.deleteCharAt(I)Ljava/lang/StringBuffer;
		//	code start: 4203
		//	code length: 3
		//	cp: 11239
		//	locals: 2 args size: 2
		4303875,
		11508738,
	//	11194: java.lang.StringBuffer.replace(IILjava/lang/String;)Ljava/lang/StringBuffer;
		//	code start: 4208
		//	code length: 32
		//	cp: 11239
		//	locals: 6 args size: 4
		4309024,
		11508804,
	//	11196: java.lang.StringBuffer.ensureCapacity_unsynchronized(I)V
		//	code start: 4242
		//	code length: 23
		//	cp: 11239
		//	locals: 5 args size: 2
		4343831,
		11508834,
	//	11198: java.lang.StringBuffer.getChars(II[CI)V
		//	code start: 4267
		//	code length: 11
		//	cp: 11239
		//	locals: 6 args size: 5
		4369419,
		11508773,
	//	11200: java.lang.StringBuffer.insert(IZ)Ljava/lang/StringBuffer;
		//	code start: 4280
		//	code length: 5
		//	cp: 11239
		//	locals: 4 args size: 3
		4382725,
		11508771,
	//	11202: java.lang.StringBuffer.insert(IC)Ljava/lang/StringBuffer;
		//	code start: 4287
		//	code length: 18
		//	cp: 11239
		//	locals: 3 args size: 3
		4389906,
		11508739,
	//	11204: java.lang.StringBuffer.insert(I[C)Ljava/lang/StringBuffer;
		//	code start: 4307
		//	code length: 3
		//	cp: 11239
		//	locals: 3 args size: 3
		4410371,
		11508739,
	//	11206: java.lang.StringBuffer.insert(I[CII)Ljava/lang/StringBuffer;
		//	code start: 4312
		//	code length: 25
		//	cp: 11239
		//	locals: 5 args size: 5
		4415513,
		11508741,
	//	11208: java.lang.StringBuffer.insert(II)Ljava/lang/StringBuffer;
		//	code start: 4339
		//	code length: 3
		//	cp: 11239
		//	locals: 3 args size: 3
		4443139,
		11508739,
	//	11210: java.lang.StringBuffer.insert(IJ)Ljava/lang/StringBuffer;
		//	code start: 4344
		//	code length: 3
		//	cp: 11239
		//	locals: 4 args size: 4
		4448259,
		11508740,
	//	11212: java.lang.StringBuffer.insert(ILjava/lang/Object;)Ljava/lang/StringBuffer;
		//	code start: 4349
		//	code length: 4
		//	cp: 11239
		//	locals: 3 args size: 3
		4453380,
		11508739,
	//	11214: java.lang.StringBuffer.insert(ILjava/lang/String;)Ljava/lang/StringBuffer;
		//	code start: 4355
		//	code length: 22
		//	cp: 11239
		//	locals: 4 args size: 3
		4459542,
		11508771,
	//	11216: java.lang.StringBuffer.indexOf(Ljava/lang/String;)I
		//	code start: 4379
		//	code length: 2
		//	cp: 11239
		//	locals: 2 args size: 2
		4484098,
		11508738,
	//	11218: java.lang.StringBuffer.indexOf(Ljava/lang/String;I)I
		//	code start: 4383
		//	code length: 12
		//	cp: 11239
		//	locals: 4 args size: 3
		4488204,
		11508771,
	//	11220: java.lang.StringBuffer.regionMatches(ILjava/lang/String;)Z
		//	code start: 4397
		//	code length: 12
		//	cp: 11239
		//	locals: 5 args size: 3
		4502540,
		11508803,
	//	11222: java.lang.StringBuffer.length()I
		//	code start: 4411
		//	code length: 3
		//	cp: 11239
		//	locals: 1 args size: 1
		4516867,
		11508737,
	//	11224: java.lang.StringBuffer.reverse()Ljava/lang/StringBuffer;
		//	code start: 4416
		//	code length: 18
		//	cp: 11239
		//	locals: 4 args size: 1
		4522002,
		11508833,
	//	11226: java.lang.StringBuffer.setCharAt(IC)V
		//	code start: 4436
		//	code length: 11
		//	cp: 11239
		//	locals: 3 args size: 3
		4542475,
		11508739,
	//	11228: java.lang.StringBuffer.setLength(I)V
		//	code start: 4449
		//	code length: 14
		//	cp: 11239
		//	locals: 2 args size: 2
		4555790,
		11508738,
	//	11230: java.lang.StringBuffer.arraycopy([CI[CII)V
		//	code start: 4465
		//	code length: 19
		//	cp: 11239
		//	locals: 7 args size: 6
		4572179,
		11508774,
	//	11232: java.lang.StringBuffer.subSequence(II)Ljava/lang/CharSequence;
		//	code start: 4486
		//	code length: 2
		//	cp: 11239
		//	locals: 3 args size: 3
		4593666,
		11508739,
	//	11234: java.lang.StringBuffer.substring(II)Ljava/lang/String;
		//	code start: 4490
		//	code length: 14
		//	cp: 11239
		//	locals: 4 args size: 3
		4597774,
		11508771,
	//	11236: java.lang.StringBuffer.<clinit>()V
		//	code start: 4506
		//	code length: 2
		//	cp: 11239
		//	locals: 0 args size: 0
		4614146,
		11508736,

		11145,	//	pointer back to class struct (cp-1)

//
//	11239: java.lang.StringBuffer constants
//
		34,	//	const pool length

		11162,	//	static, special or private java.lang.StringBuffer.<init>(I)V
		12523,	//	static, special or private java.lang.Object.<init>()V
		13824,	//	virtual index: 27 args: 1 java.lang.String.length()I
		11886,	//	Class: java.lang.String
		11917,	//	static, special or private java.lang.String.<init>(Ljava/lang/StringBuffer;)V
		7980,	//	String: "true"
		8193,	//	virtual index: 16 args: 2 java.lang.StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;
		7989,	//	String: "false"
		11196,	//	static, special or private java.lang.StringBuffer.ensureCapacity_unsynchronized(I)V
		5635,	//	virtual index: 11 args: 4 java.lang.StringBuffer.append([CII)Ljava/lang/StringBuffer;
		11230,	//	static, special or private java.lang.StringBuffer.arraycopy([CI[CII)V
		4609,	//	virtual index: 9 args: 2 java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer;
		12327,	//	static, special or private java.lang.Long.toString(JI)Ljava/lang/String;
		8312,	//	String: "NYI"
		7999,	//	String: "null"
		1536,	//	virtual index: 3 args: 1 java.lang.Object.toString()Ljava/lang/String;
		10244,	//	virtual index: 20 args: 5 java.lang.String.getChars(II[CI)V
		9292,	//	Class: java.lang.StringIndexOutOfBoundsException
		9329,	//	static, special or private java.lang.StringIndexOutOfBoundsException.<init>(I)V
		10242,	//	virtual index: 20 args: 3 java.lang.StringBuffer.delete(II)Ljava/lang/StringBuffer;
		16386,	//	virtual index: 32 args: 3 java.lang.StringBuffer.insert(ILjava/lang/String;)Ljava/lang/StringBuffer;
		11206,	//	static, special or private java.lang.StringBuffer.insert(I[CII)Ljava/lang/StringBuffer;
		11979,	//	static, special or private java.lang.String.valueOf(I)Ljava/lang/String;
		17410,	//	virtual index: 34 args: 3 java.lang.StringBuffer.indexOf(Ljava/lang/String;I)I
		11220,	//	static, special or private java.lang.StringBuffer.regionMatches(ILjava/lang/String;)Z
		7169,	//	virtual index: 14 args: 2 java.lang.String.charAt(I)C
		12469,	//	Class: java.lang.ArrayIndexOutOfBoundsException
		8320,	//	String: "String.arraycopy"
		12486,	//	static, special or private java.lang.ArrayIndexOutOfBoundsException.<init>(Ljava/lang/String;)V
		21506,	//	virtual index: 42 args: 3 java.lang.StringBuffer.substring(II)Ljava/lang/String;
		9297,	//	static, special or private java.lang.StringIndexOutOfBoundsException.<init>()V
		8120,	//	String: ""
		11913,	//	static, special or private java.lang.String.<init>([CII)V
//
//	11273: java.lang.StringBuffer implements table
//
		2,	//	java.lang.CharSequence, 
//
//	11274: java.lang.StringBuffer interface table
//
//	TODO: is it enough to use methodId as key???
//
		0,		//	run()V
		11188,	//	charAt(I)C
		11222,	//	length()I
		11232,	//	subSequence(II)Ljava/lang/CharSequence;
		11156,	//	toString()Ljava/lang/String;
//
//	11279: java.lang.Integer
//
		1,	//	instance size
				//	0 valueI
		90,	//	pointer to static primitive fields
		0,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	11284: java.lang.Integer method table
//
	//	11284: java.lang.Object.<init>()V
		//	code start: 182
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		186369,
		9201665,
	//	11286: java.lang.Integer.equals(Ljava/lang/Object;)Z
		//	code start: 4519
		//	code length: 5
		//	cp: 11329
		//	locals: 2 args size: 2
		4627461,
		11600898,
	//	11288: java.lang.Integer.hashCode()I
		//	code start: 4526
		//	code length: 2
		//	cp: 11329
		//	locals: 1 args size: 1
		4634626,
		11600897,
	//	11290: java.lang.Integer.toString()Ljava/lang/String;
		//	code start: 4578
		//	code length: 2
		//	cp: 11329
		//	locals: 1 args size: 1
		4687874,
		11600897,
	//	11292: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	11294: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	11296: java.lang.Integer.<init>(I)V
		//	code start: 4510
		//	code length: 3
		//	cp: 11329
		//	locals: 2 args size: 2
		4618243,
		11600898,
	//	11298: java.lang.Integer.byteValue()B
		//	code start: 4515
		//	code length: 2
		//	cp: 11329
		//	locals: 1 args size: 1
		4623362,
		11600897,
	//	11300: java.lang.Integer.intValue()I
		//	code start: 4530
		//	code length: 2
		//	cp: 11329
		//	locals: 1 args size: 1
		4638722,
		11600897,
	//	11302: java.lang.Integer.longValue()J
		//	code start: 4534
		//	code length: 2
		//	cp: 11329
		//	locals: 1 args size: 1
		4642818,
		11600897,
	//	11304: java.lang.Integer.parseInt(Ljava/lang/String;I)I
		//	code start: 4538
		//	code length: 2
		//	cp: 11329
		//	locals: 2 args size: 2
		4646914,
		11600898,
	//	11306: java.lang.Integer.parseInt(Ljava/lang/String;)I
		//	code start: 4542
		//	code length: 2
		//	cp: 11329
		//	locals: 1 args size: 1
		4651010,
		11600897,
	//	11308: java.lang.Integer.shortValue()S
		//	code start: 4546
		//	code length: 2
		//	cp: 11329
		//	locals: 1 args size: 1
		4655106,
		11600897,
	//	11310: java.lang.Integer.toBinaryString(I)Ljava/lang/String;
		//	code start: 4550
		//	code length: 2
		//	cp: 11329
		//	locals: 1 args size: 1
		4659202,
		11600897,
	//	11312: java.lang.Integer.toUnsignedString(II)Ljava/lang/String;
		//	code start: 4554
		//	code length: 14
		//	cp: 11329
		//	locals: 5 args size: 2
		4663310,
		11600994,
	//	11314: java.lang.Integer.toHexString(I)Ljava/lang/String;
		//	code start: 4570
		//	code length: 2
		//	cp: 11329
		//	locals: 1 args size: 1
		4679682,
		11600897,
	//	11316: java.lang.Integer.toOctalString(I)Ljava/lang/String;
		//	code start: 4574
		//	code length: 2
		//	cp: 11329
		//	locals: 1 args size: 1
		4683778,
		11600897,
	//	11318: java.lang.Integer.toString(I)Ljava/lang/String;
		//	code start: 4582
		//	code length: 2
		//	cp: 11329
		//	locals: 1 args size: 1
		4691970,
		11600897,
	//	11320: java.lang.Integer.toString(II)Ljava/lang/String;
		//	code start: 4586
		//	code length: 28
		//	cp: 11329
		//	locals: 5 args size: 2
		4696092,
		11600994,
	//	11322: java.lang.Integer.valueOf(Ljava/lang/String;)Ljava/lang/Integer;
		//	code start: 4616
		//	code length: 4
		//	cp: 11329
		//	locals: 1 args size: 1
		4726788,
		11600897,
	//	11324: java.lang.Integer.parseInt(Ljava/lang/String;IZ)I
		//	code start: 4622
		//	code length: 107
		//	cp: 11329
		//	locals: 9 args size: 3
		4733035,
		11601091,
	//	11326: java.lang.Integer.<clinit>()V
		//	code start: 4731
		//	code length: 55
		//	cp: 11329
		//	locals: 0 args size: 0
		4844599,
		11600896,

		11279,	//	pointer back to class struct (cp-1)

//
//	11329: java.lang.Integer constants
//
		34,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		11279,	//	Class: java.lang.Integer
		11324,	//	static, special or private java.lang.Integer.parseInt(Ljava/lang/String;IZ)I
		11312,	//	static, special or private java.lang.Integer.toUnsignedString(II)Ljava/lang/String;
		11886,	//	Class: java.lang.String
		11913,	//	static, special or private java.lang.String.<init>([CII)V
		11979,	//	static, special or private java.lang.String.valueOf(I)Ljava/lang/String;
		11296,	//	static, special or private java.lang.Integer.<init>(I)V
		13824,	//	virtual index: 27 args: 1 java.lang.String.length()I
		10701,	//	Class: java.lang.Error
		8341,	//	String: "lang.Integer.parseIn..."
		10718,	//	static, special or private java.lang.Error.<init>(Ljava/lang/String;)V
		9024,	//	static, special or private java.lang.Character.isDigit(C)Z
		8407,	//	String: "lang.Integer.parseIn..."
		10834,	//	Class: java.lang.NumberFormatException
		10839,	//	static, special or private java.lang.NumberFormatException.<init>()V
		8468,	//	String: "string length is nul..."
		10851,	//	static, special or private java.lang.NumberFormatException.<init>(Ljava/lang/String;)V
		7169,	//	virtual index: 14 args: 2 java.lang.String.charAt(I)C
		8494,	//	String: "pure '-'"
		10555,	//	Class: java.lang.StringBuilder
		10560,	//	static, special or private java.lang.StringBuilder.<init>()V
		8507,	//	String: "non terminated numbe..."
		8705,	//	virtual index: 17 args: 2 java.lang.StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
		1536,	//	virtual index: 3 args: 1 java.lang.StringBuilder.toString()Ljava/lang/String;
		2147483647,	//	Integer
		8535,	//	String: "number overflow (pos..."
		12801,	//	virtual index: 25 args: 2 java.lang.StringBuilder.append(I)Ljava/lang/StringBuilder;
		8561,	//	String: ") : "
		9022,	//	static, special or private java.lang.Character.digit(CI)I
		-2147483648,	//	Integer
		8570,	//	String: "invalid character at..."
		8605,	//	String: " in "
//
//	11363: java.lang.Math
//
		0,	//	instance size
		93,	//	pointer to static primitive fields
		0,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	11368: java.lang.Math method table
//
	//	11368: java.lang.Math.<init>()V
		//	code start: 4788
		//	code length: 2
		//	cp: 11407
		//	locals: 1 args size: 1
		4902914,
		11680769,
	//	11370: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	11372: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	11374: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	11376: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	11378: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	11380: java.lang.Math.abs(I)I
		//	code start: 4792
		//	code length: 3
		//	cp: 11407
		//	locals: 1 args size: 1
		4907011,
		11680769,
	//	11382: java.lang.Math.abs(J)J
		//	code start: 4797
		//	code length: 4
		//	cp: 11407
		//	locals: 2 args size: 2
		4912132,
		11680770,
	//	11384: java.lang.Math.abs(F)F
		//	code start: 4803
		//	code length: 4
		//	cp: 11407
		//	locals: 1 args size: 1
		4918276,
		11680769,
	//	11386: java.lang.Math.abs(D)D
		//	code start: 4809
		//	code length: 4
		//	cp: 11407
		//	locals: 2 args size: 2
		4924420,
		11680770,
	//	11388: java.lang.Math.min(II)I
		//	code start: 4815
		//	code length: 3
		//	cp: 11407
		//	locals: 2 args size: 2
		4930563,
		11680770,
	//	11390: java.lang.Math.min(JJ)J
		//	code start: 4820
		//	code length: 3
		//	cp: 11407
		//	locals: 4 args size: 4
		4935683,
		11680772,
	//	11392: java.lang.Math.min(FF)F
		//	code start: 4825
		//	code length: 10
		//	cp: 11407
		//	locals: 2 args size: 2
		4940810,
		11680770,
	//	11394: java.lang.Math.min(DD)D
		//	code start: 4837
		//	code length: 10
		//	cp: 11407
		//	locals: 4 args size: 4
		4953098,
		11680772,
	//	11396: java.lang.Math.max(II)I
		//	code start: 4849
		//	code length: 3
		//	cp: 11407
		//	locals: 2 args size: 2
		4965379,
		11680770,
	//	11398: java.lang.Math.max(JJ)J
		//	code start: 4854
		//	code length: 3
		//	cp: 11407
		//	locals: 4 args size: 4
		4970499,
		11680772,
	//	11400: java.lang.Math.max(FF)F
		//	code start: 4859
		//	code length: 10
		//	cp: 11407
		//	locals: 2 args size: 2
		4975626,
		11680770,
	//	11402: java.lang.Math.max(DD)D
		//	code start: 4871
		//	code length: 10
		//	cp: 11407
		//	locals: 4 args size: 4
		4987914,
		11680772,
	//	11404: java.lang.Math.round(F)I
		//	code start: 4883
		//	code length: 2
		//	cp: 11407
		//	locals: 1 args size: 1
		5000194,
		11680769,

		11363,	//	pointer back to class struct (cp-1)

//
//	11407: java.lang.Math constants
//
		4,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		11854,	//	static, special or private java.lang.Float.floatToIntBits(F)I
		11445,	//	static, special or private com.jopdesign.sys.SoftFloat.float32_to_int32(I)I
//
//	11411: java.lang.CharSequence
//
		0,	//	instance size
		97,	//	pointer to static primitive fields
		0,	//	instance GC info
		-2,	//	interface ID
		0,	//	pointer to interface table
//
//	no method table for interfaces
//

		11411,	//	pointer back to class struct (cp-1)

//
//	11417: java.lang.CharSequence constants
//
		1,	//	const pool length

//
//	11418: com.jopdesign.sys.SoftFloat
//
		0,	//	instance size
		97,	//	pointer to static primitive fields
		0,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	11423: com.jopdesign.sys.SoftFloat method table
//
	//	11423: com.jopdesign.sys.SoftFloat.<init>()V
		//	code start: 4887
		//	code length: 2
		//	cp: 11470
		//	locals: 1 args size: 1
		5004290,
		11745281,
	//	11425: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	11427: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	11429: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	11431: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	11433: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	11435: com.jopdesign.sys.SoftFloat.shift32RightJamming(II)I
		//	code start: 4891
		//	code length: 13
		//	cp: 11470
		//	locals: 3 args size: 2
		5008397,
		11745314,
	//	11437: com.jopdesign.sys.SoftFloat.countLeadingZeros32(I)I
		//	code start: 4906
		//	code length: 7
		//	cp: 11470
		//	locals: 2 args size: 1
		5023751,
		11745313,
	//	11439: com.jopdesign.sys.SoftFloat.roundAndPackFloat32(III)I
		//	code start: 4915
		//	code length: 30
		//	cp: 11470
		//	locals: 5 args size: 3
		5032990,
		11745347,
	//	11441: com.jopdesign.sys.SoftFloat.normalizeRoundAndPackFloat32(III)I
		//	code start: 4947
		//	code length: 12
		//	cp: 11470
		//	locals: 5 args size: 3
		5065740,
		11745347,
	//	11443: com.jopdesign.sys.SoftFloat.int32_to_float32(I)I
		//	code start: 4961
		//	code length: 10
		//	cp: 11470
		//	locals: 2 args size: 1
		5080074,
		11745313,
	//	11445: com.jopdesign.sys.SoftFloat.float32_to_int32(I)I
		//	code start: 4973
		//	code length: 56
		//	cp: 11470
		//	locals: 7 args size: 1
		5092408,
		11745473,
	//	11447: com.jopdesign.sys.SoftFloat.float32_to_int32_round_to_zero(I)I
		//	code start: 5031
		//	code length: 23
		//	cp: 11470
		//	locals: 6 args size: 1
		5151767,
		11745441,
	//	11449: com.jopdesign.sys.SoftFloat.addFloat32Sigs(III)I
		//	code start: 5056
		//	code length: 70
		//	cp: 11470
		//	locals: 10 args size: 3
		5177414,
		11745507,
	//	11451: com.jopdesign.sys.SoftFloat.subFloat32Sigs(III)I
		//	code start: 5128
		//	code length: 82
		//	cp: 11470
		//	locals: 10 args size: 3
		5251154,
		11745507,
	//	11453: com.jopdesign.sys.SoftFloat.float32_add(II)I
		//	code start: 5212
		//	code length: 8
		//	cp: 11470
		//	locals: 4 args size: 2
		5337096,
		11745346,
	//	11455: com.jopdesign.sys.SoftFloat.float32_sub(II)I
		//	code start: 5222
		//	code length: 8
		//	cp: 11470
		//	locals: 4 args size: 2
		5347336,
		11745346,
	//	11457: com.jopdesign.sys.SoftFloat.float32_mul(II)I
		//	code start: 5232
		//	code length: 78
		//	cp: 11470
		//	locals: 13 args size: 2
		5357646,
		11745634,
	//	11459: com.jopdesign.sys.SoftFloat.float32_div(II)I
		//	code start: 5312
		//	code length: 99
		//	cp: 11470
		//	locals: 13 args size: 2
		5439587,
		11745634,
	//	11461: com.jopdesign.sys.SoftFloat.float32_rem(II)I
		//	code start: 5413
		//	code length: 61
		//	cp: 11470
		//	locals: 13 args size: 2
		5542973,
		11745634,
	//	11463: com.jopdesign.sys.SoftFloat.float32_cmpg(II)I
		//	code start: 5476
		//	code length: 13
		//	cp: 11470
		//	locals: 2 args size: 2
		5607437,
		11745282,
	//	11465: com.jopdesign.sys.SoftFloat.float32_cmpl(II)I
		//	code start: 5491
		//	code length: 13
		//	cp: 11470
		//	locals: 2 args size: 2
		5622797,
		11745282,
	//	11467: com.jopdesign.sys.SoftFloat.float32_cmp(II)I
		//	code start: 5506
		//	code length: 18
		//	cp: 11470
		//	locals: 4 args size: 2
		5638162,
		11745346,

		11418,	//	pointer back to class struct (cp-1)

//
//	11470: com.jopdesign.sys.SoftFloat constants
//
		32,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		65535,	//	Integer
		2139095040,	//	Integer
		11435,	//	static, special or private com.jopdesign.sys.SoftFloat.shift32RightJamming(II)I
		11439,	//	static, special or private com.jopdesign.sys.SoftFloat.roundAndPackFloat32(III)I
		-2147483648,	//	Integer
		-822083584,	//	Integer
		11441,	//	static, special or private com.jopdesign.sys.SoftFloat.normalizeRoundAndPackFloat32(III)I
		8388607,	//	Integer
		2147483647,	//	Integer
		8388608,	//	Integer
		536870912,	//	Integer
		2143289344,	//	Integer
		1073741824,	//	Integer
		-4194304,	//	Integer
		11449,	//	static, special or private com.jopdesign.sys.SoftFloat.addFloat32Sigs(III)I
		11451,	//	static, special or private com.jopdesign.sys.SoftFloat.subFloat32Sigs(III)I
		11437,	//	static, special or private com.jopdesign.sys.SoftFloat.countLeadingZeros32(I)I
		0,	//	Long: 255
		255,	//	
		0,	//	Long: 63
		63,	//	
		0,	//	Long: 32
		32,	//	
		0,	//	Long: 127
		127,	//	
		0,	//	Long: 64
		64,	//	
		0,	//	Long: 128
		128,	//	
		11467,	//	static, special or private com.jopdesign.sys.SoftFloat.float32_cmp(II)I
//
//	11502: java.lang.Exception
//
		3,	//	instance size
		97,	//	pointer to static primitive fields
		3,	//	instance GC info
		9663,	//	pointer to super class - java.lang.Throwable
		0,	//	pointer to interface table
//
//	11507: java.lang.Exception method table
//
	//	11507: java.lang.Exception.<init>()V
		//	code start: 5526
		//	code length: 2
		//	cp: 11540
		//	locals: 1 args size: 1
		5658626,
		11816961,
	//	11509: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	11511: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	11513: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	11515: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	11517: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	11519: java.lang.Exception.<init>(Ljava/lang/String;)V
		//	code start: 5530
		//	code length: 2
		//	cp: 11540
		//	locals: 2 args size: 2
		5662722,
		11816962,
	//	11521: java.lang.Exception.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 5534
		//	code length: 2
		//	cp: 11540
		//	locals: 3 args size: 3
		5666818,
		11816963,
	//	11523: java.lang.Exception.<init>(Ljava/lang/Throwable;)V
		//	code start: 5538
		//	code length: 2
		//	cp: 11540
		//	locals: 2 args size: 2
		5670914,
		11816962,
	//	11525: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	11527: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	11529: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	11531: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	11533: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	11535: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	11537: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		11502,	//	pointer back to class struct (cp-1)

//
//	11540: java.lang.Exception constants
//
		5,	//	const pool length

		9668,	//	static, special or private java.lang.Throwable.<init>()V
		9680,	//	static, special or private java.lang.Throwable.<init>(Ljava/lang/String;)V
		9682,	//	static, special or private java.lang.Throwable.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		9684,	//	static, special or private java.lang.Throwable.<init>(Ljava/lang/Throwable;)V
//
//	11545: util.DbgSerial
//
		1,	//	instance size
				//	0 waitHsZ
		99,	//	pointer to static primitive fields
		0,	//	instance GC info
		9894,	//	pointer to super class - util.Dbg
		0,	//	pointer to interface table
//
//	11550: util.DbgSerial method table
//
	//	11550: util.DbgSerial.<init>()V
		//	code start: 5542
		//	code length: 3
		//	cp: 11597
		//	locals: 1 args size: 1
		5675011,
		11875329,
	//	11552: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	11554: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	11556: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	11558: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	11560: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	11562: util.DbgSerial.dbgWr(I)V
		//	code start: 5552
		//	code length: 7
		//	cp: 11597
		//	locals: 2 args size: 2
		5685255,
		11875330,
	//	11564: util.DbgSerial.dbgReadBuffer([II)I
		//	code start: 5561
		//	code length: 1
		//	cp: 11597
		//	locals: 3 args size: 3
		5694465,
		11875331,
	//	11566: util.Dbg.init()V
		//	code start: 1246
		//	code length: 3
		//	cp: 9944
		//	locals: 0 args size: 0
		1275907,
		10182656,
	//	11568: util.Dbg.initSer()V
		//	code start: 1251
		//	code length: 3
		//	cp: 9944
		//	locals: 0 args size: 0
		1281027,
		10182656,
	//	11570: util.Dbg.initSerWait()V
		//	code start: 1256
		//	code length: 3
		//	cp: 9944
		//	locals: 0 args size: 0
		1286147,
		10182656,
	//	11572: util.Dbg.wr(I)V
		//	code start: 1261
		//	code length: 2
		//	cp: 9944
		//	locals: 1 args size: 1
		1291266,
		10182657,
	//	11574: util.Dbg.lf()V
		//	code start: 1265
		//	code length: 5
		//	cp: 9944
		//	locals: 0 args size: 0
		1295365,
		10182656,
	//	11576: util.Dbg.readBuffer([II)I
		//	code start: 1272
		//	code length: 3
		//	cp: 9944
		//	locals: 2 args size: 2
		1302531,
		10182658,
	//	11578: util.Dbg.wr(Ljava/lang/String;I)V
		//	code start: 1277
		//	code length: 4
		//	cp: 9944
		//	locals: 2 args size: 2
		1307652,
		10182658,
	//	11580: util.Dbg.wr(Ljava/lang/String;)V
		//	code start: 1283
		//	code length: 7
		//	cp: 9944
		//	locals: 3 args size: 1
		1313799,
		10182721,
	//	11582: util.Dbg.wr(Ljava/lang/StringBuffer;)V
		//	code start: 1292
		//	code length: 7
		//	cp: 9944
		//	locals: 3 args size: 1
		1323015,
		10182721,
	//	11584: util.Dbg.wr(Z)V
		//	code start: 1301
		//	code length: 4
		//	cp: 9944
		//	locals: 1 args size: 1
		1332228,
		10182657,
	//	11586: util.Dbg.intVal(I)V
		//	code start: 1307
		//	code length: 21
		//	cp: 9944
		//	locals: 3 args size: 1
		1338389,
		10182721,
	//	11588: util.Dbg.hexVal(I)V
		//	code start: 1330
		//	code length: 25
		//	cp: 9944
		//	locals: 3 args size: 1
		1361945,
		10182721,
	//	11590: util.Dbg.byteVal(I)V
		//	code start: 1357
		//	code length: 16
		//	cp: 9944
		//	locals: 2 args size: 1
		1389584,
		10182689,
	//	11592: util.Dbg.<clinit>()V
		//	code start: 1375
		//	code length: 2
		//	cp: 9944
		//	locals: 0 args size: 0
		1408002,
		10182656,
	//	11594: util.DbgSerial.<init>(Z)V
		//	code start: 5547
		//	code length: 3
		//	cp: 11597
		//	locals: 2 args size: 2
		5680131,
		11875330,

		11545,	//	pointer back to class struct (cp-1)

//
//	11597: util.DbgSerial constants
//
		4,	//	const pool length

		9899,	//	static, special or private util.Dbg.<init>()V
		0,	//	static com.jopdesign.sys.Native.rd(I)I
		0,	//	static com.jopdesign.sys.Native.wr(II)V
//
//	11601: util.DbgUdp
//
		3,	//	instance size
				//	0 txBuf[I
				//	1 rdptTxI
				//	2 wrptTxI
		99,	//	pointer to static primitive fields
		1,	//	instance GC info
		9894,	//	pointer to super class - util.Dbg
		0,	//	pointer to interface table
//
//	11606: util.DbgUdp method table
//
	//	11606: util.DbgUdp.<init>()V
		//	code start: 5564
		//	code length: 6
		//	cp: 11651
		//	locals: 1 args size: 1
		5697542,
		11930625,
	//	11608: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	11610: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	11612: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	11614: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	11616: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	11618: util.DbgUdp.dbgWr(I)V
		//	code start: 5572
		//	code length: 16
		//	cp: 11651
		//	locals: 4 args size: 2
		5705744,
		11930690,
	//	11620: util.DbgUdp.dbgReadBuffer([II)I
		//	code start: 5596
		//	code length: 36
		//	cp: 11651
		//	locals: 9 args size: 3
		5730340,
		11930819,
	//	11622: util.Dbg.init()V
		//	code start: 1246
		//	code length: 3
		//	cp: 9944
		//	locals: 0 args size: 0
		1275907,
		10182656,
	//	11624: util.Dbg.initSer()V
		//	code start: 1251
		//	code length: 3
		//	cp: 9944
		//	locals: 0 args size: 0
		1281027,
		10182656,
	//	11626: util.Dbg.initSerWait()V
		//	code start: 1256
		//	code length: 3
		//	cp: 9944
		//	locals: 0 args size: 0
		1286147,
		10182656,
	//	11628: util.Dbg.wr(I)V
		//	code start: 1261
		//	code length: 2
		//	cp: 9944
		//	locals: 1 args size: 1
		1291266,
		10182657,
	//	11630: util.Dbg.lf()V
		//	code start: 1265
		//	code length: 5
		//	cp: 9944
		//	locals: 0 args size: 0
		1295365,
		10182656,
	//	11632: util.Dbg.readBuffer([II)I
		//	code start: 1272
		//	code length: 3
		//	cp: 9944
		//	locals: 2 args size: 2
		1302531,
		10182658,
	//	11634: util.Dbg.wr(Ljava/lang/String;I)V
		//	code start: 1277
		//	code length: 4
		//	cp: 9944
		//	locals: 2 args size: 2
		1307652,
		10182658,
	//	11636: util.Dbg.wr(Ljava/lang/String;)V
		//	code start: 1283
		//	code length: 7
		//	cp: 9944
		//	locals: 3 args size: 1
		1313799,
		10182721,
	//	11638: util.Dbg.wr(Ljava/lang/StringBuffer;)V
		//	code start: 1292
		//	code length: 7
		//	cp: 9944
		//	locals: 3 args size: 1
		1323015,
		10182721,
	//	11640: util.Dbg.wr(Z)V
		//	code start: 1301
		//	code length: 4
		//	cp: 9944
		//	locals: 1 args size: 1
		1332228,
		10182657,
	//	11642: util.Dbg.intVal(I)V
		//	code start: 1307
		//	code length: 21
		//	cp: 9944
		//	locals: 3 args size: 1
		1338389,
		10182721,
	//	11644: util.Dbg.hexVal(I)V
		//	code start: 1330
		//	code length: 25
		//	cp: 9944
		//	locals: 3 args size: 1
		1361945,
		10182721,
	//	11646: util.Dbg.byteVal(I)V
		//	code start: 1357
		//	code length: 16
		//	cp: 9944
		//	locals: 2 args size: 1
		1389584,
		10182689,
	//	11648: util.Dbg.<clinit>()V
		//	code start: 1375
		//	code length: 2
		//	cp: 9944
		//	locals: 0 args size: 0
		1408002,
		10182656,

		11601,	//	pointer back to class struct (cp-1)

//
//	11651: util.DbgUdp constants
//
		2,	//	const pool length

		9899,	//	static, special or private util.Dbg.<init>()V
//
//	11653: java.io.IOException
//
		3,	//	instance size
		101,	//	pointer to static primitive fields
		3,	//	instance GC info
		11502,	//	pointer to super class - java.lang.Exception
		0,	//	pointer to interface table
//
//	11658: java.io.IOException method table
//
	//	11658: java.io.IOException.<init>()V
		//	code start: 5638
		//	code length: 2
		//	cp: 11691
		//	locals: 1 args size: 1
		5773314,
		11971585,
	//	11660: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	11662: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	11664: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	11666: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	11668: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	11670: java.io.IOException.<init>(Ljava/lang/String;)V
		//	code start: 5642
		//	code length: 2
		//	cp: 11691
		//	locals: 2 args size: 2
		5777410,
		11971586,
	//	11672: java.lang.Exception.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 5534
		//	code length: 2
		//	cp: 11540
		//	locals: 3 args size: 3
		5666818,
		11816963,
	//	11674: java.lang.Exception.<init>(Ljava/lang/Throwable;)V
		//	code start: 5538
		//	code length: 2
		//	cp: 11540
		//	locals: 2 args size: 2
		5670914,
		11816962,
	//	11676: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	11678: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	11680: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	11682: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	11684: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	11686: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	11688: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		11653,	//	pointer back to class struct (cp-1)

//
//	11691: java.io.IOException constants
//
		3,	//	const pool length

		11507,	//	static, special or private java.lang.Exception.<init>()V
		11519,	//	static, special or private java.lang.Exception.<init>(Ljava/lang/String;)V
//
//	11694: com.jopdesign.sys.JVMHelp
//
		0,	//	instance size
		103,	//	pointer to static primitive fields
		0,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	11699: com.jopdesign.sys.JVMHelp method table
//
	//	11699: com.jopdesign.sys.JVMHelp.<init>()V
		//	code start: 5646
		//	code length: 2
		//	cp: 11750
		//	locals: 1 args size: 1
		5781506,
		12032001,
	//	11701: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	11703: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	11705: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	11707: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	11709: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	11711: com.jopdesign.sys.JVMHelp.interrupt()V
		//	code start: 5650
		//	code length: 6
		//	cp: 11750
		//	locals: 0 args size: 0
		5785606,
		12032000,
	//	11713: com.jopdesign.sys.JVMHelp.nullPoint()V
		//	code start: 5658
		//	code length: 1
		//	cp: 11750
		//	locals: 0 args size: 0
		5793793,
		12032000,
	//	11715: com.jopdesign.sys.JVMHelp.arrayBound()V
		//	code start: 5661
		//	code length: 1
		//	cp: 11750
		//	locals: 0 args size: 0
		5796865,
		12032000,
	//	11717: com.jopdesign.sys.JVMHelp.except()V
		//	code start: 5664
		//	code length: 5
		//	cp: 11750
		//	locals: 0 args size: 0
		5799941,
		12032000,
	//	11719: com.jopdesign.sys.JVMHelp.noim()V
		//	code start: 5671
		//	code length: 43
		//	cp: 11750
		//	locals: 8 args size: 0
		5807147,
		12032256,
	//	11721: com.jopdesign.sys.JVMHelp.handleException()V
		//	code start: 5718
		//	code length: 11
		//	cp: 11750
		//	locals: 1 args size: 0
		5855243,
		12032032,
	//	11723: com.jopdesign.sys.JVMHelp.init()V
		//	code start: 5731
		//	code length: 28
		//	cp: 11750
		//	locals: 2 args size: 0
		5868572,
		12032064,
	//	11725: com.jopdesign.sys.JVMHelp.trace(I)V
		//	code start: 5761
		//	code length: 30
		//	cp: 11750
		//	locals: 9 args size: 1
		5899294,
		12032257,
	//	11727: com.jopdesign.sys.JVMHelp.makeHWObject(Ljava/lang/Object;III)Ljava/lang/Object;
		//	code start: 5793
		//	code length: 12
		//	cp: 11750
		//	locals: 7 args size: 4
		5932044,
		12032100,
	//	11729: com.jopdesign.sys.JVMHelp.makeHWArray(IIII)[I
		//	code start: 5807
		//	code length: 9
		//	cp: 11750
		//	locals: 5 args size: 4
		5946377,
		12032036,
	//	11731: com.jopdesign.sys.JVMHelp.addInterruptHandler(ILjava/lang/Runnable;)V
		//	code start: 5818
		//	code length: 3
		//	cp: 11750
		//	locals: 2 args size: 2
		5957635,
		12032002,
	//	11733: com.jopdesign.sys.JVMHelp.addInterruptHandler(IILjava/lang/Runnable;)V
		//	code start: 5823
		//	code length: 6
		//	cp: 11750
		//	locals: 3 args size: 3
		5962758,
		12032003,
	//	11735: com.jopdesign.sys.JVMHelp.removeInterruptHandler(I)V
		//	code start: 5831
		//	code length: 2
		//	cp: 11750
		//	locals: 1 args size: 1
		5970946,
		12032001,
	//	11737: com.jopdesign.sys.JVMHelp.removeInterruptHandler(II)V
		//	code start: 5835
		//	code length: 7
		//	cp: 11750
		//	locals: 2 args size: 2
		5975047,
		12032002,
	//	11739: com.jopdesign.sys.JVMHelp.wrByte(I)V
		//	code start: 5844
		//	code length: 10
		//	cp: 11750
		//	locals: 1 args size: 1
		5984266,
		12032001,
	//	11741: com.jopdesign.sys.JVMHelp.wrSmall(I)V
		//	code start: 5856
		//	code length: 21
		//	cp: 11750
		//	locals: 1 args size: 1
		5996565,
		12032001,
	//	11743: com.jopdesign.sys.JVMHelp.wr(I)V
		//	code start: 5879
		//	code length: 5
		//	cp: 11750
		//	locals: 1 args size: 1
		6020101,
		12032001,
	//	11745: com.jopdesign.sys.JVMHelp.wr(Ljava/lang/String;)V
		//	code start: 5886
		//	code length: 7
		//	cp: 11750
		//	locals: 3 args size: 1
		6027271,
		12032065,
	//	11747: com.jopdesign.sys.JVMHelp.intVal(I)V
		//	code start: 5895
		//	code length: 23
		//	cp: 11750
		//	locals: 2 args size: 1
		6036503,
		12032033,

		11694,	//	pointer back to class struct (cp-1)

//
//	11750: com.jopdesign.sys.JVMHelp constants
//
		46,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		0,	//	static com.jopdesign.sys.Native.rd(I)I
		0,	//	interface index: 0 args: 1 java.lang.Runnable.run()V
		0,	//	static com.jopdesign.sys.Native.wr(II)V
		0,	//	static com.jopdesign.sys.Native.getSP()I
		0,	//	static com.jopdesign.sys.Native.rdMem(I)I
		0,	//	static com.jopdesign.sys.Native.setSP(I)V
		11721,	//	static, special or private com.jopdesign.sys.JVMHelp.handleException()V
		11743,	//	static, special or private com.jopdesign.sys.JVMHelp.wr(I)V
		0,	//	static com.jopdesign.sys.Native.rdIntMem(I)I
		11741,	//	static, special or private com.jopdesign.sys.JVMHelp.wrSmall(I)V
		11739,	//	static, special or private com.jopdesign.sys.JVMHelp.wrByte(I)V
		8968,	//	Class: java.lang.Object
		10240,	//	virtual index: 20 args: 1 java.io.PrintStream.println()V
		8614,	//	String: "JOP: bytecode "
		9217,	//	virtual index: 18 args: 2 java.io.PrintStream.print(Ljava/lang/Object;)V
		8193,	//	virtual index: 16 args: 2 java.io.PrintStream.print(I)V
		7927,	//	String: " not implemented"
		13825,	//	virtual index: 27 args: 2 java.io.PrintStream.println(Ljava/lang/String;)V
		11725,	//	static, special or private com.jopdesign.sys.JVMHelp.trace(I)V
		0,	//	Problem with class: [[Ljava.lang.Runnable;
		9425,	//	Class: com.jopdesign.sys.DummyHandler
		9430,	//	static, special or private com.jopdesign.sys.DummyHandler.<init>()V
		11733,	//	static, special or private com.jopdesign.sys.JVMHelp.addInterruptHandler(IILjava/lang/Runnable;)V
		12043,	//	Class: java.lang.StackOverflowError
		12048,	//	static, special or private java.lang.StackOverflowError.<init>()V
		9084,	//	Class: java.lang.NullPointerException
		9089,	//	static, special or private java.lang.NullPointerException.<init>()V
		12469,	//	Class: java.lang.ArrayIndexOutOfBoundsException
		12474,	//	static, special or private java.lang.ArrayIndexOutOfBoundsException.<init>()V
		9043,	//	Class: java.lang.ArithmeticException
		9048,	//	static, special or private java.lang.ArithmeticException.<init>()V
		12125,	//	Class: java.lang.ClassCastException
		12130,	//	static, special or private java.lang.ClassCastException.<init>()V
		8633,	//	String: "saved sp="
		11745,	//	static, special or private com.jopdesign.sys.JVMHelp.wr(Ljava/lang/String;)V
		8647,	//	String: "  mp     pc     fp"
		0,	//	static com.jopdesign.sys.Native.toInt(Ljava/lang/Object;)I
		0,	//	static com.jopdesign.sys.Native.wrMem(II)V
		0,	//	static com.jopdesign.sys.Native.toObject(I)Ljava/lang/Object;
		0,	//	static com.jopdesign.sys.Native.toIntArray(I)[I
		11737,	//	static, special or private com.jopdesign.sys.JVMHelp.removeInterruptHandler(II)V
		100000,	//	Integer
		13824,	//	virtual index: 27 args: 1 java.lang.String.length()I
		7169,	//	virtual index: 14 args: 2 java.lang.String.charAt(I)C
//
//	11796: java.io.Serializable
//
		0,	//	instance size
		105,	//	pointer to static primitive fields
		0,	//	instance GC info
		-3,	//	interface ID
		0,	//	pointer to interface table
//
//	no method table for interfaces
//

		11796,	//	pointer back to class struct (cp-1)

//
//	11802: java.io.Serializable constants
//
		1,	//	const pool length

//
//	11803: java.lang.Float
//
		1,	//	instance size
				//	0 valueF
		105,	//	pointer to static primitive fields
		0,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	11808: java.lang.Float method table
//
	//	11808: java.lang.Object.<init>()V
		//	code start: 182
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		186369,
		9201665,
	//	11810: java.lang.Float.equals(Ljava/lang/Object;)Z
		//	code start: 6006
		//	code length: 20
		//	cp: 11867
		//	locals: 3 args size: 2
		6150164,
		12151842,
	//	11812: java.lang.Float.hashCode()I
		//	code start: 6002
		//	code length: 2
		//	cp: 11867
		//	locals: 1 args size: 1
		6146050,
		12151809,
	//	11814: java.lang.Float.toString()Ljava/lang/String;
		//	code start: 5974
		//	code length: 2
		//	cp: 11867
		//	locals: 1 args size: 1
		6117378,
		12151809,
	//	11816: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	11818: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	11820: java.lang.Float.<init>(F)V
		//	code start: 5920
		//	code length: 3
		//	cp: 11867
		//	locals: 2 args size: 2
		6062083,
		12151810,
	//	11822: java.lang.Float.<init>(D)V
		//	code start: 5925
		//	code length: 3
		//	cp: 11867
		//	locals: 3 args size: 3
		6067203,
		12151811,
	//	11824: java.lang.Float.<init>(Ljava/lang/String;)V
		//	code start: 5930
		//	code length: 4
		//	cp: 11867
		//	locals: 2 args size: 2
		6072324,
		12151810,
	//	11826: java.lang.Float.toString(F)Ljava/lang/String;
		//	code start: 5936
		//	code length: 1
		//	cp: 11867
		//	locals: 1 args size: 1
		6078465,
		12151809,
	//	11828: java.lang.Float.valueOf(Ljava/lang/String;)Ljava/lang/Float;
		//	code start: 5939
		//	code length: 3
		//	cp: 11867
		//	locals: 1 args size: 1
		6081539,
		12151809,
	//	11830: java.lang.Float.valueOf(F)Ljava/lang/Float;
		//	code start: 5944
		//	code length: 3
		//	cp: 11867
		//	locals: 1 args size: 1
		6086659,
		12151809,
	//	11832: java.lang.Float.parseFloat(Ljava/lang/String;)F
		//	code start: 5949
		//	code length: 3
		//	cp: 11867
		//	locals: 1 args size: 1
		6091779,
		12151809,
	//	11834: java.lang.Float.isNaN(F)Z
		//	code start: 5954
		//	code length: 3
		//	cp: 11867
		//	locals: 1 args size: 1
		6096899,
		12151809,
	//	11836: java.lang.Float.isInfinite(F)Z
		//	code start: 5959
		//	code length: 5
		//	cp: 11867
		//	locals: 1 args size: 1
		6102021,
		12151809,
	//	11838: java.lang.Float.isNaN()Z
		//	code start: 5966
		//	code length: 2
		//	cp: 11867
		//	locals: 1 args size: 1
		6109186,
		12151809,
	//	11840: java.lang.Float.isInfinite()Z
		//	code start: 5970
		//	code length: 2
		//	cp: 11867
		//	locals: 1 args size: 1
		6113282,
		12151809,
	//	11842: java.lang.Float.byteValue()B
		//	code start: 5978
		//	code length: 2
		//	cp: 11867
		//	locals: 1 args size: 1
		6121474,
		12151809,
	//	11844: java.lang.Float.shortValue()S
		//	code start: 5982
		//	code length: 2
		//	cp: 11867
		//	locals: 1 args size: 1
		6125570,
		12151809,
	//	11846: java.lang.Float.intValue()I
		//	code start: 5986
		//	code length: 2
		//	cp: 11867
		//	locals: 1 args size: 1
		6129666,
		12151809,
	//	11848: java.lang.Float.longValue()J
		//	code start: 5990
		//	code length: 2
		//	cp: 11867
		//	locals: 1 args size: 1
		6133762,
		12151809,
	//	11850: java.lang.Float.floatValue()F
		//	code start: 5994
		//	code length: 2
		//	cp: 11867
		//	locals: 1 args size: 1
		6137858,
		12151809,
	//	11852: java.lang.Float.doubleValue()D
		//	code start: 5998
		//	code length: 2
		//	cp: 11867
		//	locals: 1 args size: 1
		6141954,
		12151809,
	//	11854: java.lang.Float.floatToIntBits(F)I
		//	code start: 6028
		//	code length: 8
		//	cp: 11867
		//	locals: 2 args size: 1
		6172680,
		12151841,
	//	11856: java.lang.Float.floatToRawIntBits(F)I
		//	code start: 6038
		//	code length: 1
		//	cp: 11867
		//	locals: 1 args size: 1
		6182913,
		12151809,
	//	11858: java.lang.Float.intBitsToFloat(I)F
		//	code start: 6041
		//	code length: 1
		//	cp: 11867
		//	locals: 1 args size: 1
		6185985,
		12151809,
	//	11860: java.lang.Float.compareTo(Ljava/lang/Float;)I
		//	code start: 6044
		//	code length: 3
		//	cp: 11867
		//	locals: 2 args size: 2
		6189059,
		12151810,
	//	11862: java.lang.Float.compareTo(Ljava/lang/Object;)I
		//	code start: 6049
		//	code length: 4
		//	cp: 11867
		//	locals: 2 args size: 2
		6194180,
		12151810,
	//	11864: java.lang.Float.compare(FF)I
		//	code start: 6055
		//	code length: 18
		//	cp: 11867
		//	locals: 2 args size: 2
		6200338,
		12151810,

		11803,	//	pointer back to class struct (cp-1)

//
//	11867: java.lang.Float constants
//
		19,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		11832,	//	static, special or private java.lang.Float.parseFloat(Ljava/lang/String;)F
		8312,	//	String: "NYI"
		11803,	//	Class: java.lang.Float
		11820,	//	static, special or private java.lang.Float.<init>(F)V
		10701,	//	Class: java.lang.Error
		10718,	//	static, special or private java.lang.Error.<init>(Ljava/lang/String;)V
		2139095040,	//	Float: Infinity
		-8388608,	//	Float: -Infinity
		11834,	//	static, special or private java.lang.Float.isNaN(F)Z
		11836,	//	static, special or private java.lang.Float.isInfinite(F)Z
		11826,	//	static, special or private java.lang.Float.toString(F)Ljava/lang/String;
		11854,	//	static, special or private java.lang.Float.floatToIntBits(F)I
		0,	//	static com.jopdesign.sys.Native.toInt(F)I
		8388607,	//	Integer
		2143289344,	//	Integer
		0,	//	static com.jopdesign.sys.Native.toFloat(I)F
		11864,	//	static, special or private java.lang.Float.compare(FF)I
//
//	11886: java.lang.String
//
		1,	//	instance size
				//	0 value[C
		113,	//	pointer to static primitive fields
		1,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		12038,	//	pointer to interface table
//
//	11891: java.lang.String method table
//
	//	11891: java.lang.String.<init>()V
		//	code start: 6075
		//	code length: 4
		//	cp: 11988
		//	locals: 1 args size: 1
		6220804,
		12275713,
	//	11893: java.lang.String.equals(Ljava/lang/Object;)Z
		//	code start: 6301
		//	code length: 24
		//	cp: 11988
		//	locals: 6 args size: 2
		6452248,
		12275842,
	//	11895: java.lang.String.hashCode()I
		//	code start: 6372
		//	code length: 9
		//	cp: 11988
		//	locals: 4 args size: 1
		6524937,
		12275809,
	//	11897: java.lang.String.toString()Ljava/lang/String;
		//	code start: 6606
		//	code length: 1
		//	cp: 11988
		//	locals: 1 args size: 1
		6764545,
		12275713,
	//	11899: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	11901: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	11903: java.lang.String.<init>([B)V
		//	code start: 6081
		//	code length: 3
		//	cp: 11988
		//	locals: 2 args size: 2
		6226947,
		12275714,
	//	11905: java.lang.String.<init>([BII)V
		//	code start: 6086
		//	code length: 3
		//	cp: 11988
		//	locals: 4 args size: 4
		6232067,
		12275716,
	//	11907: java.lang.String.<init>([BIILjava/lang/String;)V
		//	code start: 6091
		//	code length: 43
		//	cp: 11988
		//	locals: 7 args size: 5
		6237227,
		12275781,
	//	11909: java.lang.String.<init>([BLjava/lang/String;)V
		//	code start: 6136
		//	code length: 3
		//	cp: 11988
		//	locals: 3 args size: 3
		6283267,
		12275715,
	//	11911: java.lang.String.<init>([C)V
		//	code start: 6141
		//	code length: 10
		//	cp: 11988
		//	locals: 4 args size: 2
		6288394,
		12275778,
	//	11913: java.lang.String.<init>([CII)V
		//	code start: 6153
		//	code length: 36
		//	cp: 11988
		//	locals: 5 args size: 4
		6300708,
		12275748,
	//	11915: java.lang.String.<init>(Ljava/lang/String;)V
		//	code start: 6191
		//	code length: 4
		//	cp: 11988
		//	locals: 2 args size: 2
		6339588,
		12275714,
	//	11917: java.lang.String.<init>(Ljava/lang/StringBuffer;)V
		//	code start: 6197
		//	code length: 17
		//	cp: 11988
		//	locals: 6 args size: 2
		6345745,
		12275842,
	//	11919: java.lang.String.charAt(I)C
		//	code start: 6220
		//	code length: 8
		//	cp: 11988
		//	locals: 2 args size: 2
		6369288,
		12275714,
	//	11921: java.lang.String.compareTo(Ljava/lang/String;)I
		//	code start: 6230
		//	code length: 26
		//	cp: 11988
		//	locals: 6 args size: 2
		6379546,
		12275842,
	//	11923: java.lang.String.concat(Ljava/lang/String;)Ljava/lang/String;
		//	code start: 6258
		//	code length: 30
		//	cp: 11988
		//	locals: 4 args size: 2
		6408222,
		12275778,
	//	11925: java.lang.String.endsWith(Ljava/lang/String;)Z
		//	code start: 6290
		//	code length: 9
		//	cp: 11988
		//	locals: 2 args size: 2
		6440969,
		12275714,
	//	11927: java.lang.String.getBytes()[B
		//	code start: 6327
		//	code length: 15
		//	cp: 11988
		//	locals: 3 args size: 1
		6478863,
		12275777,
	//	11929: java.lang.String.getBytes(Ljava/lang/String;)[B
		//	code start: 6344
		//	code length: 8
		//	cp: 11988
		//	locals: 2 args size: 2
		6496264,
		12275714,
	//	11931: java.lang.String.getChars(II[CI)V
		//	code start: 6354
		//	code length: 16
		//	cp: 11988
		//	locals: 6 args size: 5
		6506512,
		12275749,
	//	11933: java.lang.String.indexOf(I)I
		//	code start: 6383
		//	code length: 2
		//	cp: 11988
		//	locals: 2 args size: 2
		6536194,
		12275714,
	//	11935: java.lang.String.indexOf(II)I
		//	code start: 6387
		//	code length: 13
		//	cp: 11988
		//	locals: 4 args size: 3
		6540301,
		12275747,
	//	11937: java.lang.String.indexOf(Ljava/lang/String;)I
		//	code start: 6402
		//	code length: 2
		//	cp: 11988
		//	locals: 2 args size: 2
		6555650,
		12275714,
	//	11939: java.lang.String.indexOf(Ljava/lang/String;I)I
		//	code start: 6406
		//	code length: 13
		//	cp: 11988
		//	locals: 4 args size: 3
		6559757,
		12275747,
	//	11941: java.lang.String.lastIndexOf(I)I
		//	code start: 6421
		//	code length: 4
		//	cp: 11988
		//	locals: 2 args size: 2
		6575108,
		12275714,
	//	11943: java.lang.String.lastIndexOf(II)I
		//	code start: 6427
		//	code length: 14
		//	cp: 11988
		//	locals: 4 args size: 3
		6581262,
		12275747,
	//	11945: java.lang.String.length()I
		//	code start: 6443
		//	code length: 2
		//	cp: 11988
		//	locals: 1 args size: 1
		6597634,
		12275713,
	//	11947: java.lang.String.regionMatches(ZILjava/lang/String;II)Z
		//	code start: 6447
		//	code length: 30
		//	cp: 11988
		//	locals: 8 args size: 6
		6601758,
		12275782,
	//	11949: java.lang.String.replace(CC)Ljava/lang/String;
		//	code start: 6479
		//	code length: 38
		//	cp: 11988
		//	locals: 7 args size: 3
		6634534,
		12275843,
	//	11951: java.lang.String.regionMatches(ILjava/lang/String;II)Z
		//	code start: 6519
		//	code length: 21
		//	cp: 11988
		//	locals: 7 args size: 5
		6675477,
		12275781,
	//	11953: java.lang.String.startsWith(Ljava/lang/String;I)Z
		//	code start: 6542
		//	code length: 4
		//	cp: 11988
		//	locals: 3 args size: 3
		6699012,
		12275715,
	//	11955: java.lang.String.startsWith(Ljava/lang/String;)Z
		//	code start: 6548
		//	code length: 4
		//	cp: 11988
		//	locals: 2 args size: 2
		6705156,
		12275714,
	//	11957: java.lang.String.subSequence(II)Ljava/lang/CharSequence;
		//	code start: 6554
		//	code length: 2
		//	cp: 11988
		//	locals: 3 args size: 3
		6711298,
		12275715,
	//	11959: java.lang.String.substring(I)Ljava/lang/String;
		//	code start: 6558
		//	code length: 3
		//	cp: 11988
		//	locals: 2 args size: 2
		6715395,
		12275714,
	//	11961: java.lang.String.substring(II)Ljava/lang/String;
		//	code start: 6563
		//	code length: 15
		//	cp: 11988
		//	locals: 4 args size: 3
		6720527,
		12275747,
	//	11963: java.lang.String.toCharArray()[C
		//	code start: 6580
		//	code length: 10
		//	cp: 11988
		//	locals: 3 args size: 1
		6737930,
		12275777,
	//	11965: java.lang.String.toLowerCase()Ljava/lang/String;
		//	code start: 6592
		//	code length: 12
		//	cp: 11988
		//	locals: 3 args size: 1
		6750220,
		12275777,
	//	11967: java.lang.String.toUpperCase()Ljava/lang/String;
		//	code start: 6609
		//	code length: 12
		//	cp: 11988
		//	locals: 3 args size: 1
		6767628,
		12275777,
	//	11969: java.lang.String.trim()Ljava/lang/String;
		//	code start: 6623
		//	code length: 24
		//	cp: 11988
		//	locals: 4 args size: 1
		6781976,
		12275809,
	//	11971: java.lang.String.valueOf(Z)Ljava/lang/String;
		//	code start: 6649
		//	code length: 3
		//	cp: 11988
		//	locals: 1 args size: 1
		6808579,
		12275713,
	//	11973: java.lang.String.valueOf(C)Ljava/lang/String;
		//	code start: 6654
		//	code length: 5
		//	cp: 11988
		//	locals: 1 args size: 1
		6813701,
		12275713,
	//	11975: java.lang.String.valueOf([C)Ljava/lang/String;
		//	code start: 6661
		//	code length: 2
		//	cp: 11988
		//	locals: 1 args size: 1
		6820866,
		12275713,
	//	11977: java.lang.String.valueOf([CII)Ljava/lang/String;
		//	code start: 6665
		//	code length: 3
		//	cp: 11988
		//	locals: 3 args size: 3
		6824963,
		12275715,
	//	11979: java.lang.String.valueOf(I)Ljava/lang/String;
		//	code start: 6670
		//	code length: 2
		//	cp: 11988
		//	locals: 1 args size: 1
		6830082,
		12275713,
	//	11981: java.lang.String.valueOf(J)Ljava/lang/String;
		//	code start: 6674
		//	code length: 2
		//	cp: 11988
		//	locals: 2 args size: 2
		6834178,
		12275714,
	//	11983: java.lang.String.valueOf(Ljava/lang/Object;)Ljava/lang/String;
		//	code start: 6678
		//	code length: 4
		//	cp: 11988
		//	locals: 1 args size: 1
		6838276,
		12275713,
	//	11985: java.lang.String.equalsIgnoreCase(Ljava/lang/String;)Z
		//	code start: 6684
		//	code length: 3
		//	cp: 11988
		//	locals: 2 args size: 2
		6844419,
		12275714,

		11886,	//	pointer back to class struct (cp-1)

//
//	11988: java.lang.String constants
//
		49,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		8120,	//	String: ""
		11905,	//	static, special or private java.lang.String.<init>([BII)V
		8670,	//	String: "ASCII"
		11907,	//	static, special or private java.lang.String.<init>([BIILjava/lang/String;)V
		19456,	//	virtual index: 38 args: 1 java.lang.String.toUpperCase()Ljava/lang/String;
		513,	//	virtual index: 1 args: 2 java.lang.String.equals(Ljava/lang/Object;)Z
		9853,	//	Class: java.io.UnsupportedEncodingException
		9858,	//	static, special or private java.io.UnsupportedEncodingException.<init>()V
		9292,	//	Class: java.lang.StringIndexOutOfBoundsException
		10555,	//	Class: java.lang.StringBuilder
		10560,	//	static, special or private java.lang.StringBuilder.<init>()V
		8680,	//	String: "offset: "
		8705,	//	virtual index: 17 args: 2 java.lang.StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
		12801,	//	virtual index: 25 args: 2 java.lang.StringBuilder.append(I)Ljava/lang/StringBuilder;
		1536,	//	virtual index: 3 args: 1 java.lang.StringBuilder.toString()Ljava/lang/String;
		9309,	//	static, special or private java.lang.StringIndexOutOfBoundsException.<init>(Ljava/lang/String;)V
		8693,	//	String: "count: "
		8705,	//	String: "offset + count: "
		18432,	//	virtual index: 36 args: 1 java.lang.StringBuffer.length()I
		9329,	//	static, special or private java.lang.StringIndexOutOfBoundsException.<init>(I)V
		9084,	//	Class: java.lang.NullPointerException
		9089,	//	static, special or private java.lang.NullPointerException.<init>()V
		11886,	//	Class: java.lang.String
		11913,	//	static, special or private java.lang.String.<init>([CII)V
		14341,	//	virtual index: 28 args: 6 java.lang.String.regionMatches(ZILjava/lang/String;II)Z
		8726,	//	String: "at String.getBytes(S..."
		9870,	//	static, special or private java.io.UnsupportedEncodingException.<init>(Ljava/lang/String;)V
		9216,	//	virtual index: 18 args: 1 java.lang.String.getBytes()[B
		9297,	//	static, special or private java.lang.StringIndexOutOfBoundsException.<init>()V
		11266,	//	virtual index: 22 args: 3 java.lang.String.indexOf(II)I
		12290,	//	virtual index: 24 args: 3 java.lang.String.indexOf(Ljava/lang/String;I)I
		15364,	//	virtual index: 30 args: 5 java.lang.String.regionMatches(ILjava/lang/String;II)Z
		13314,	//	virtual index: 26 args: 3 java.lang.String.lastIndexOf(II)I
		9030,	//	static, special or private java.lang.Character.toLowerCase(C)C
		9032,	//	static, special or private java.lang.Character.toUpperCase(C)C
		17922,	//	virtual index: 35 args: 3 java.lang.String.substring(II)Ljava/lang/String;
		11911,	//	static, special or private java.lang.String.<init>([C)V
		7980,	//	String: "true"
		7989,	//	String: "false"
		11977,	//	static, special or private java.lang.String.valueOf([CII)Ljava/lang/String;
		11320,	//	static, special or private java.lang.Integer.toString(II)Ljava/lang/String;
		12325,	//	static, special or private java.lang.Long.toString(J)Ljava/lang/String;
		7999,	//	String: "null"
		1536,	//	virtual index: 3 args: 1 java.lang.Object.toString()Ljava/lang/String;
		10701,	//	Class: java.lang.Error
		8312,	//	String: "NYI"
		10718,	//	static, special or private java.lang.Error.<init>(Ljava/lang/String;)V
//
//	12037: java.lang.String implements table
//
		2,	//	java.lang.CharSequence, 
//
//	12038: java.lang.String interface table
//
//	TODO: is it enough to use methodId as key???
//
		0,		//	run()V
		11919,	//	charAt(I)C
		11945,	//	length()I
		11957,	//	subSequence(II)Ljava/lang/CharSequence;
		11897,	//	toString()Ljava/lang/String;
//
//	12043: java.lang.StackOverflowError
//
		3,	//	instance size
		113,	//	pointer to static primitive fields
		3,	//	instance GC info
		12428,	//	pointer to super class - java.lang.VirtualMachineError
		0,	//	pointer to interface table
//
//	12048: java.lang.StackOverflowError method table
//
	//	12048: java.lang.StackOverflowError.<init>()V
		//	code start: 6689
		//	code length: 2
		//	cp: 12081
		//	locals: 1 args size: 1
		6849538,
		12370945,
	//	12050: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	12052: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	12054: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	12056: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	12058: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	12060: java.lang.StackOverflowError.<init>(Ljava/lang/String;)V
		//	code start: 6693
		//	code length: 2
		//	cp: 12081
		//	locals: 2 args size: 2
		6853634,
		12370946,
	//	12062: java.lang.Error.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 3207
		//	code length: 2
		//	cp: 10739
		//	locals: 3 args size: 3
		3283970,
		10996739,
	//	12064: java.lang.Error.<init>(Ljava/lang/Throwable;)V
		//	code start: 3211
		//	code length: 2
		//	cp: 10739
		//	locals: 2 args size: 2
		3288066,
		10996738,
	//	12066: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	12068: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	12070: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	12072: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	12074: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	12076: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	12078: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		12043,	//	pointer back to class struct (cp-1)

//
//	12081: java.lang.StackOverflowError constants
//
		3,	//	const pool length

		8766,	//	String: "StackOverflowError"
		12445,	//	static, special or private java.lang.VirtualMachineError.<init>(Ljava/lang/String;)V
//
//	12084: java.lang.NegativeArraySizeException
//
		3,	//	instance size
		115,	//	pointer to static primitive fields
		3,	//	instance GC info
		9810,	//	pointer to super class - java.lang.RuntimeException
		0,	//	pointer to interface table
//
//	12089: java.lang.NegativeArraySizeException method table
//
	//	12089: java.lang.NegativeArraySizeException.<init>()V
		//	code start: 6697
		//	code length: 2
		//	cp: 12122
		//	locals: 1 args size: 1
		6857730,
		12412929,
	//	12091: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	12093: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	12095: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	12097: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	12099: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	12101: java.lang.NegativeArraySizeException.<init>(Ljava/lang/String;)V
		//	code start: 6701
		//	code length: 2
		//	cp: 12122
		//	locals: 2 args size: 2
		6861826,
		12412930,
	//	12103: java.lang.RuntimeException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 1226
		//	code length: 2
		//	cp: 9848
		//	locals: 3 args size: 3
		1255426,
		10084355,
	//	12105: java.lang.RuntimeException.<init>(Ljava/lang/Throwable;)V
		//	code start: 1230
		//	code length: 2
		//	cp: 9848
		//	locals: 2 args size: 2
		1259522,
		10084354,
	//	12107: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	12109: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	12111: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	12113: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	12115: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	12117: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	12119: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		12084,	//	pointer back to class struct (cp-1)

//
//	12122: java.lang.NegativeArraySizeException constants
//
		3,	//	const pool length

		9815,	//	static, special or private java.lang.RuntimeException.<init>()V
		9827,	//	static, special or private java.lang.RuntimeException.<init>(Ljava/lang/String;)V
//
//	12125: java.lang.ClassCastException
//
		3,	//	instance size
		117,	//	pointer to static primitive fields
		3,	//	instance GC info
		9810,	//	pointer to super class - java.lang.RuntimeException
		0,	//	pointer to interface table
//
//	12130: java.lang.ClassCastException method table
//
	//	12130: java.lang.ClassCastException.<init>()V
		//	code start: 6705
		//	code length: 2
		//	cp: 12163
		//	locals: 1 args size: 1
		6865922,
		12454913,
	//	12132: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	12134: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	12136: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	12138: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	12140: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	12142: java.lang.ClassCastException.<init>(Ljava/lang/String;)V
		//	code start: 6709
		//	code length: 2
		//	cp: 12163
		//	locals: 2 args size: 2
		6870018,
		12454914,
	//	12144: java.lang.RuntimeException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 1226
		//	code length: 2
		//	cp: 9848
		//	locals: 3 args size: 3
		1255426,
		10084355,
	//	12146: java.lang.RuntimeException.<init>(Ljava/lang/Throwable;)V
		//	code start: 1230
		//	code length: 2
		//	cp: 9848
		//	locals: 2 args size: 2
		1259522,
		10084354,
	//	12148: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	12150: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	12152: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	12154: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	12156: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	12158: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	12160: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		12125,	//	pointer back to class struct (cp-1)

//
//	12163: java.lang.ClassCastException constants
//
		3,	//	const pool length

		9815,	//	static, special or private java.lang.RuntimeException.<init>()V
		9827,	//	static, special or private java.lang.RuntimeException.<init>(Ljava/lang/String;)V
//
//	12166: com.jopdesign.sys.Scope
//
		4,	//	instance size
				//	0 cntI
				//	1 backingStore[I
				//	2 allocPtrI
				//	3 outerLcom/jopdesign/sys/Scope;
		119,	//	pointer to static primitive fields
		10,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	12171: com.jopdesign.sys.Scope method table
//
	//	12171: java.lang.Object.<init>()V
		//	code start: 182
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		186369,
		9201665,
	//	12173: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	12175: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	12177: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	12179: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	12181: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	12183: com.jopdesign.sys.Scope.<init>(J)V
		//	code start: 6713
		//	code length: 7
		//	cp: 12192
		//	locals: 3 args size: 3
		6874119,
		12484611,
	//	12185: com.jopdesign.sys.Scope.<init>([I)V
		//	code start: 6722
		//	code length: 10
		//	cp: 12192
		//	locals: 3 args size: 2
		6883338,
		12484642,
	//	12187: com.jopdesign.sys.Scope.getSize()I
		//	code start: 6734
		//	code length: 2
		//	cp: 12192
		//	locals: 1 args size: 1
		6895618,
		12484609,
	//	12189: com.jopdesign.sys.Scope.enter(Ljava/lang/Runnable;)V
		//	code start: 6738
		//	code length: 33
		//	cp: 12192
		//	locals: 5 args size: 2
		6899745,
		12484706,

		12166,	//	pointer back to class struct (cp-1)

//
//	12192: com.jopdesign.sys.Scope constants
//
		8,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		10701,	//	Class: java.lang.Error
		8789,	//	String: "No cyclic enter and ..."
		10718,	//	static, special or private java.lang.Error.<init>(Ljava/lang/String;)V
		12573,	//	static, special or private com.jopdesign.sys.RtThreadImpl.getCurrentScope()Lcom/jopdesign/sys/Scope;
		12575,	//	static, special or private com.jopdesign.sys.RtThreadImpl.setCurrentScope(Lcom/jopdesign/sys/Scope;)V
		0,	//	interface index: 0 args: 1 java.lang.Runnable.run()V
//
//	12200: java.io.JOPPrintStream
//
		2,	//	instance size
		119,	//	pointer to static primitive fields
		1,	//	instance GC info
		9535,	//	pointer to super class - java.io.PrintStream
		0,	//	pointer to interface table
//
//	12205: java.io.JOPPrintStream method table
//
	//	12205: java.io.JOPPrintStream.<init>()V
		//	code start: 6781
		//	code length: 5
		//	cp: 12272
		//	locals: 1 args size: 1
		6943749,
		12566529,
	//	12207: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	12209: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	12211: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	12213: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	12215: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	12217: java.io.JOPPrintStream.write(I)V
		//	code start: 6894
		//	code length: 3
		//	cp: 12272
		//	locals: 2 args size: 2
		7059459,
		12566530,
	//	12219: java.io.OutputStream.write([B)V
		//	code start: 7169
		//	code length: 3
		//	cp: 12422
		//	locals: 2 args size: 2
		7341059,
		12720130,
	//	12221: java.io.JOPPrintStream.write([BII)V
		//	code start: 6880
		//	code length: 12
		//	cp: 12272
		//	locals: 5 args size: 4
		7045132,
		12566564,
	//	12223: java.io.JOPPrintStream.flush()V
		//	code start: 6797
		//	code length: 1
		//	cp: 12272
		//	locals: 1 args size: 1
		6960129,
		12566529,
	//	12225: java.io.JOPPrintStream.close()V
		//	code start: 6788
		//	code length: 5
		//	cp: 12272
		//	locals: 2 args size: 1
		6950917,
		12566561,
	//	12227: java.io.PrintStream.<init>(Ljava/io/OutputStream;)V
		//	code start: 893
		//	code length: 4
		//	cp: 9601
		//	locals: 2 args size: 2
		914436,
		9831426,
	//	12229: java.io.PrintStream.checkError()Z
		//	code start: 905
		//	code length: 3
		//	cp: 9601
		//	locals: 1 args size: 1
		926723,
		9831425,
	//	12231: java.io.JOPPrintStream.print(Z)V
		//	code start: 6800
		//	code length: 5
		//	cp: 12272
		//	locals: 2 args size: 2
		6963205,
		12566530,
	//	12233: java.io.JOPPrintStream.print(C)V
		//	code start: 6807
		//	code length: 2
		//	cp: 12272
		//	locals: 2 args size: 2
		6970370,
		12566530,
	//	12235: java.io.JOPPrintStream.print([C)V
		//	code start: 6811
		//	code length: 6
		//	cp: 12272
		//	locals: 3 args size: 2
		6974470,
		12566562,
	//	12237: java.io.JOPPrintStream.print(I)V
		//	code start: 6819
		//	code length: 2
		//	cp: 12272
		//	locals: 2 args size: 2
		6982658,
		12566530,
	//	12239: java.io.JOPPrintStream.print(J)V
		//	code start: 6823
		//	code length: 3
		//	cp: 12272
		//	locals: 3 args size: 3
		6986755,
		12566531,
	//	12241: java.io.JOPPrintStream.print(Ljava/lang/Object;)V
		//	code start: 6828
		//	code length: 5
		//	cp: 12272
		//	locals: 2 args size: 2
		6991877,
		12566530,
	//	12243: java.io.JOPPrintStream.print(Ljava/lang/String;)V
		//	code start: 6835
		//	code length: 3
		//	cp: 12272
		//	locals: 2 args size: 2
		6999043,
		12566530,
	//	12245: java.io.JOPPrintStream.println()V
		//	code start: 6840
		//	code length: 2
		//	cp: 12272
		//	locals: 1 args size: 1
		7004162,
		12566529,
	//	12247: java.io.JOPPrintStream.println(Z)V
		//	code start: 6844
		//	code length: 3
		//	cp: 12272
		//	locals: 2 args size: 2
		7008259,
		12566530,
	//	12249: java.io.JOPPrintStream.println(C)V
		//	code start: 6849
		//	code length: 4
		//	cp: 12272
		//	locals: 2 args size: 2
		7013380,
		12566530,
	//	12251: java.io.JOPPrintStream.println([C)V
		//	code start: 6855
		//	code length: 3
		//	cp: 12272
		//	locals: 2 args size: 2
		7019523,
		12566530,
	//	12253: java.io.JOPPrintStream.println(I)V
		//	code start: 6860
		//	code length: 3
		//	cp: 12272
		//	locals: 2 args size: 2
		7024643,
		12566530,
	//	12255: java.io.JOPPrintStream.println(J)V
		//	code start: 6865
		//	code length: 3
		//	cp: 12272
		//	locals: 3 args size: 3
		7029763,
		12566531,
	//	12257: java.io.JOPPrintStream.println(Ljava/lang/Object;)V
		//	code start: 6870
		//	code length: 3
		//	cp: 12272
		//	locals: 2 args size: 2
		7034883,
		12566530,
	//	12259: java.io.JOPPrintStream.println(Ljava/lang/String;)V
		//	code start: 6875
		//	code length: 3
		//	cp: 12272
		//	locals: 2 args size: 2
		7040003,
		12566530,
	//	12261: java.io.PrintStream.setError()V
		//	code start: 1019
		//	code length: 2
		//	cp: 9601
		//	locals: 1 args size: 1
		1043458,
		9831425,
	//	12263: java.io.PrintStream.writeChars(Ljava/lang/String;)V
		//	code start: 1038
		//	code length: 7
		//	cp: 9601
		//	locals: 3 args size: 2
		1062919,
		9831458,
	//	12265: java.io.JOPPrintStream.wr(C)V
		//	code start: 6899
		//	code length: 2
		//	cp: 12272
		//	locals: 1 args size: 1
		7064578,
		12566529,
	//	12267: java.io.JOPPrintStream.wr(Ljava/lang/String;)V
		//	code start: 6903
		//	code length: 7
		//	cp: 12272
		//	locals: 3 args size: 1
		7068679,
		12566593,
	//	12269: java.io.JOPPrintStream.wr(I)V
		//	code start: 6912
		//	code length: 20
		//	cp: 12272
		//	locals: 3 args size: 1
		7077908,
		12566593,

		12200,	//	pointer back to class struct (cp-1)

//
//	12272: java.io.JOPPrintStream constants
//
		28,	//	const pool length

		9540,	//	static, special or private java.io.PrintStream.<init>()V
		4608,	//	virtual index: 9 args: 1 java.io.JOPPrintStream.flush()V
		5120,	//	virtual index: 10 args: 1 java.io.OutputStream.close()V
		6656,	//	virtual index: 13 args: 1 java.io.IOException.printStackTrace()V
		11653,	//	Class: java.io.IOException
		7980,	//	String: "true"
		12243,	//	static, special or private java.io.JOPPrintStream.print(Ljava/lang/String;)V
		7989,	//	String: "false"
		11743,	//	static, special or private com.jopdesign.sys.JVMHelp.wr(I)V
		12265,	//	static, special or private java.io.JOPPrintStream.wr(C)V
		12269,	//	static, special or private java.io.JOPPrintStream.wr(I)V
		11981,	//	static, special or private java.lang.String.valueOf(J)Ljava/lang/String;
		7999,	//	String: "null"
		1536,	//	virtual index: 3 args: 1 java.lang.Object.toString()Ljava/lang/String;
		12267,	//	static, special or private java.io.JOPPrintStream.wr(Ljava/lang/String;)V
		7813,	//	String: "\r\n"
		6657,	//	virtual index: 13 args: 2 java.io.JOPPrintStream.print(Z)V
		10240,	//	virtual index: 20 args: 1 java.io.JOPPrintStream.println()V
		7169,	//	virtual index: 14 args: 2 java.io.JOPPrintStream.print(C)V
		7681,	//	virtual index: 15 args: 2 java.io.JOPPrintStream.print([C)V
		8193,	//	virtual index: 16 args: 2 java.io.JOPPrintStream.print(I)V
		8706,	//	virtual index: 17 args: 3 java.io.JOPPrintStream.print(J)V
		9217,	//	virtual index: 18 args: 2 java.io.JOPPrintStream.print(Ljava/lang/Object;)V
		8840,	//	String: "io.JOPPrintStream: b..."
		11670,	//	static, special or private java.io.IOException.<init>(Ljava/lang/String;)V
		13824,	//	virtual index: 27 args: 1 java.lang.String.length()I
		7169,	//	virtual index: 14 args: 2 java.lang.String.charAt(I)C
//
//	12300: java.lang.Long
//
		2,	//	instance size
				//	0 valueJ
		120,	//	pointer to static primitive fields
		0,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	12305: java.lang.Long method table
//
	//	12305: java.lang.Object.<init>()V
		//	code start: 182
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		186369,
		9201665,
	//	12307: java.lang.Long.equals(Ljava/lang/Object;)Z
		//	code start: 6939
		//	code length: 6
		//	cp: 12334
		//	locals: 2 args size: 2
		7105542,
		12630018,
	//	12309: java.lang.Long.hashCode()I
		//	code start: 6947
		//	code length: 4
		//	cp: 12334
		//	locals: 1 args size: 1
		7113732,
		12630017,
	//	12311: java.lang.Long.toString()Ljava/lang/String;
		//	code start: 6965
		//	code length: 3
		//	cp: 12334
		//	locals: 1 args size: 1
		7132163,
		12630017,
	//	12313: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	12315: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	12317: java.lang.Long.<init>(J)V
		//	code start: 6934
		//	code length: 3
		//	cp: 12334
		//	locals: 3 args size: 3
		7100419,
		12630019,
	//	12319: java.lang.Long.longValue()J
		//	code start: 6953
		//	code length: 2
		//	cp: 12334
		//	locals: 1 args size: 1
		7119874,
		12630017,
	//	12321: java.lang.Long.parseLong(Ljava/lang/String;)J
		//	code start: 6957
		//	code length: 2
		//	cp: 12334
		//	locals: 1 args size: 1
		7123970,
		12630017,
	//	12323: java.lang.Long.parseLong(Ljava/lang/String;I)J
		//	code start: 6961
		//	code length: 2
		//	cp: 12334
		//	locals: 2 args size: 2
		7128066,
		12630018,
	//	12325: java.lang.Long.toString(J)Ljava/lang/String;
		//	code start: 6970
		//	code length: 2
		//	cp: 12334
		//	locals: 2 args size: 2
		7137282,
		12630018,
	//	12327: java.lang.Long.toString(JI)Ljava/lang/String;
		//	code start: 6974
		//	code length: 38
		//	cp: 12334
		//	locals: 6 args size: 3
		7141414,
		12630115,
	//	12329: java.lang.Long.parseLong(Ljava/lang/String;IZ)J
		//	code start: 7014
		//	code length: 76
		//	cp: 12334
		//	locals: 11 args size: 3
		7182412,
		12630275,
	//	12331: java.lang.Long.<clinit>()V
		//	code start: 7092
		//	code length: 55
		//	cp: 12334
		//	locals: 0 args size: 0
		7262263,
		12630016,

		12300,	//	pointer back to class struct (cp-1)

//
//	12334: java.lang.Long constants
//
		17,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		12300,	//	Class: java.lang.Long
		12329,	//	static, special or private java.lang.Long.parseLong(Ljava/lang/String;IZ)J
		12327,	//	static, special or private java.lang.Long.toString(JI)Ljava/lang/String;
		11320,	//	static, special or private java.lang.Integer.toString(II)Ljava/lang/String;
		11886,	//	Class: java.lang.String
		11913,	//	static, special or private java.lang.String.<init>([CII)V
		10834,	//	Class: java.lang.NumberFormatException
		10839,	//	static, special or private java.lang.NumberFormatException.<init>()V
		13824,	//	virtual index: 27 args: 1 java.lang.String.length()I
		7169,	//	virtual index: 14 args: 2 java.lang.String.charAt(I)C
		2147483647,	//	Long: 9223372036854775807
		-1,	//	
		9022,	//	static, special or private java.lang.Character.digit(CI)I
		-2147483648,	//	Long: -9223372036854775808
		0,	//	
//
//	12351: java.lang.IllegalStateException
//
		3,	//	instance size
		127,	//	pointer to static primitive fields
		3,	//	instance GC info
		9810,	//	pointer to super class - java.lang.RuntimeException
		0,	//	pointer to interface table
//
//	12356: java.lang.IllegalStateException method table
//
	//	12356: java.lang.IllegalStateException.<init>()V
		//	code start: 7149
		//	code length: 2
		//	cp: 12389
		//	locals: 1 args size: 1
		7320578,
		12686337,
	//	12358: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	12360: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	12362: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	12364: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	12366: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	12368: java.lang.IllegalStateException.<init>(Ljava/lang/String;)V
		//	code start: 7153
		//	code length: 2
		//	cp: 12389
		//	locals: 2 args size: 2
		7324674,
		12686338,
	//	12370: java.lang.IllegalStateException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 7157
		//	code length: 2
		//	cp: 12389
		//	locals: 3 args size: 3
		7328770,
		12686339,
	//	12372: java.lang.IllegalStateException.<init>(Ljava/lang/Throwable;)V
		//	code start: 7161
		//	code length: 2
		//	cp: 12389
		//	locals: 2 args size: 2
		7332866,
		12686338,
	//	12374: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	12376: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	12378: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	12380: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	12382: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	12384: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	12386: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		12351,	//	pointer back to class struct (cp-1)

//
//	12389: java.lang.IllegalStateException constants
//
		5,	//	const pool length

		9815,	//	static, special or private java.lang.RuntimeException.<init>()V
		9827,	//	static, special or private java.lang.RuntimeException.<init>(Ljava/lang/String;)V
		12488,	//	static, special or private java.lang.RuntimeException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		12490,	//	static, special or private java.lang.RuntimeException.<init>(Ljava/lang/Throwable;)V
//
//	12394: java.io.OutputStream
//
		0,	//	instance size
		129,	//	pointer to static primitive fields
		0,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	12399: java.io.OutputStream method table
//
	//	12399: java.io.OutputStream.<init>()V
		//	code start: 7165
		//	code length: 2
		//	cp: 12422
		//	locals: 1 args size: 1
		7336962,
		12720129,
	//	12401: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	12403: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	12405: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	12407: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	12409: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	12411: abstract java.io.OutputStream.write(I)V
		//	code start: 7169
		//	code length: 0
		//	cp: 12422
		//	locals: 2 args size: 2
		0,
		0,
	//	12413: java.io.OutputStream.write([B)V
		//	code start: 7169
		//	code length: 3
		//	cp: 12422
		//	locals: 2 args size: 2
		7341059,
		12720130,
	//	12415: java.io.OutputStream.write([BII)V
		//	code start: 7174
		//	code length: 14
		//	cp: 12422
		//	locals: 5 args size: 4
		7346190,
		12720164,
	//	12417: java.io.OutputStream.flush()V
		//	code start: 7190
		//	code length: 1
		//	cp: 12422
		//	locals: 1 args size: 1
		7362561,
		12720129,
	//	12419: java.io.OutputStream.close()V
		//	code start: 7193
		//	code length: 1
		//	cp: 12422
		//	locals: 1 args size: 1
		7365633,
		12720129,

		12394,	//	pointer back to class struct (cp-1)

//
//	12422: java.io.OutputStream constants
//
		6,	//	const pool length

		12523,	//	static, special or private java.lang.Object.<init>()V
		4099,	//	virtual index: 8 args: 4 java.io.OutputStream.write([BII)V
		12469,	//	Class: java.lang.ArrayIndexOutOfBoundsException
		12474,	//	static, special or private java.lang.ArrayIndexOutOfBoundsException.<init>()V
		3073,	//	virtual index: 6 args: 2 java.io.OutputStream.write(I)V
//
//	12428: java.lang.VirtualMachineError
//
		3,	//	instance size
		129,	//	pointer to static primitive fields
		3,	//	instance GC info
		10701,	//	pointer to super class - java.lang.Error
		0,	//	pointer to interface table
//
//	12433: java.lang.VirtualMachineError method table
//
	//	12433: java.lang.VirtualMachineError.<init>()V
		//	code start: 7196
		//	code length: 2
		//	cp: 12466
		//	locals: 1 args size: 1
		7368706,
		12765185,
	//	12435: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	12437: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	12439: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	12441: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	12443: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	12445: java.lang.VirtualMachineError.<init>(Ljava/lang/String;)V
		//	code start: 7200
		//	code length: 2
		//	cp: 12466
		//	locals: 2 args size: 2
		7372802,
		12765186,
	//	12447: java.lang.Error.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 3207
		//	code length: 2
		//	cp: 10739
		//	locals: 3 args size: 3
		3283970,
		10996739,
	//	12449: java.lang.Error.<init>(Ljava/lang/Throwable;)V
		//	code start: 3211
		//	code length: 2
		//	cp: 10739
		//	locals: 2 args size: 2
		3288066,
		10996738,
	//	12451: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	12453: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	12455: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	12457: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	12459: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	12461: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	12463: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,

		12428,	//	pointer back to class struct (cp-1)

//
//	12466: java.lang.VirtualMachineError constants
//
		3,	//	const pool length

		10706,	//	static, special or private java.lang.Error.<init>()V
		10718,	//	static, special or private java.lang.Error.<init>(Ljava/lang/String;)V
//
//	12469: java.lang.ArrayIndexOutOfBoundsException
//
		3,	//	instance size
		131,	//	pointer to static primitive fields
		3,	//	instance GC info
		9494,	//	pointer to super class - java.lang.IndexOutOfBoundsException
		0,	//	pointer to interface table
//
//	12474: java.lang.ArrayIndexOutOfBoundsException method table
//
	//	12474: java.lang.ArrayIndexOutOfBoundsException.<init>()V
		//	code start: 7204
		//	code length: 2
		//	cp: 12509
		//	locals: 1 args size: 1
		7376898,
		12809217,
	//	12476: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	12478: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	12480: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	12482: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	12484: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	12486: java.lang.ArrayIndexOutOfBoundsException.<init>(Ljava/lang/String;)V
		//	code start: 7208
		//	code length: 2
		//	cp: 12509
		//	locals: 2 args size: 2
		7380994,
		12809218,
	//	12488: java.lang.RuntimeException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V
		//	code start: 1226
		//	code length: 2
		//	cp: 9848
		//	locals: 3 args size: 3
		1255426,
		10084355,
	//	12490: java.lang.RuntimeException.<init>(Ljava/lang/Throwable;)V
		//	code start: 1230
		//	code length: 2
		//	cp: 9848
		//	locals: 2 args size: 2
		1259522,
		10084354,
	//	12492: java.lang.Throwable.getMessage()Ljava/lang/String;
		//	code start: 1095
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1121282,
		9933825,
	//	12494: java.lang.Throwable.getLocalizedMessage()Ljava/lang/String;
		//	code start: 1099
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1125378,
		9933825,
	//	12496: java.lang.Throwable.getCause()Ljava/lang/Throwable;
		//	code start: 1103
		//	code length: 5
		//	cp: 9701
		//	locals: 1 args size: 1
		1129477,
		9933825,
	//	12498: java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
		//	code start: 1110
		//	code length: 9
		//	cp: 9701
		//	locals: 2 args size: 2
		1136649,
		9933826,
	//	12500: java.lang.Throwable.printStackTrace()V
		//	code start: 1121
		//	code length: 2
		//	cp: 9701
		//	locals: 1 args size: 1
		1147906,
		9933825,
	//	12502: java.lang.Throwable.printStackTrace(Ljava/io/PrintStream;)V
		//	code start: 1125
		//	code length: 1
		//	cp: 9701
		//	locals: 2 args size: 2
		1152001,
		9933826,
	//	12504: java.lang.Throwable.fillInStackTrace()Ljava/lang/Throwable;
		//	code start: 1128
		//	code length: 1
		//	cp: 9701
		//	locals: 1 args size: 1
		1155073,
		9933825,
	//	12506: java.lang.ArrayIndexOutOfBoundsException.<init>(I)V
		//	code start: 7212
		//	code length: 6
		//	cp: 12509
		//	locals: 2 args size: 2
		7385094,
		12809218,

		12469,	//	pointer back to class struct (cp-1)

//
//	12509: java.lang.ArrayIndexOutOfBoundsException constants
//
		9,	//	const pool length

		8878,	//	String: "ArrayIndexOutOfBound..."
		9511,	//	static, special or private java.lang.IndexOutOfBoundsException.<init>(Ljava/lang/String;)V
		10555,	//	Class: java.lang.StringBuilder
		10560,	//	static, special or private java.lang.StringBuilder.<init>()V
		8913,	//	String: "Array index out of r..."
		8705,	//	virtual index: 17 args: 2 java.lang.StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
		12801,	//	virtual index: 25 args: 2 java.lang.StringBuilder.append(I)Ljava/lang/StringBuilder;
		1536,	//	virtual index: 3 args: 1 java.lang.StringBuilder.toString()Ljava/lang/String;
//
//	12518: com.jopdesign.sys.RtThreadImpl
//
		12,	//	instance size
				//	0 rttLjoprt/RtThread;
				//	1 priorityI
				//	2 periodI
				//	3 offsetI
				//	4 isEventZ
				//	5 stateI
				//	6 cpuIdI
				//	7 nrI
				//	8 stack[I
				//	9 spI
				//	10 currentArreaLcom/jopdesign/sys/Scope;
				//	11 lowerLcom/jopdesign/sys/RtThreadImpl;
		133,	//	pointer to static primitive fields
		3329,	//	instance GC info
		8968,	//	pointer to super class - java.lang.Object
		0,	//	pointer to interface table
//
//	12523: com.jopdesign.sys.RtThreadImpl method table
//
	//	12523: java.lang.Object.<init>()V
		//	code start: 182
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		186369,
		9201665,
	//	12525: java.lang.Object.equals(Ljava/lang/Object;)Z
		//	code start: 185
		//	code length: 3
		//	cp: 8986
		//	locals: 2 args size: 2
		189443,
		9201666,
	//	12527: java.lang.Object.hashCode()I
		//	code start: 190
		//	code length: 1
		//	cp: 8986
		//	locals: 1 args size: 1
		194561,
		9201665,
	//	12529: java.lang.Object.toString()Ljava/lang/String;
		//	code start: 193
		//	code length: 6
		//	cp: 8986
		//	locals: 1 args size: 1
		197638,
		9201665,
	//	12531: java.lang.Object.clone()Ljava/lang/Object;
		//	code start: 201
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		205827,
		9201665,
	//	12533: java.lang.Object.getClass()Ljava/lang/Class;
		//	code start: 206
		//	code length: 3
		//	cp: 8986
		//	locals: 1 args size: 1
		210947,
		9201665,
	//	12535: com.jopdesign.sys.RtThreadImpl.init()V
		//	code start: 7220
		//	code length: 6
		//	cp: 12584
		//	locals: 0 args size: 0
		7393286,
		12886016,
	//	12537: com.jopdesign.sys.RtThreadImpl.<init>(II)V
		//	code start: 7228
		//	code length: 3
		//	cp: 12584
		//	locals: 3 args size: 3
		7401475,
		12886019,
	//	12539: com.jopdesign.sys.RtThreadImpl.<init>(Ljoprt/RtThread;III)V
		//	code start: 7233
		//	code length: 43
		//	cp: 12584
		//	locals: 7 args size: 5
		7406635,
		12886085,
	//	12541: com.jopdesign.sys.RtThreadImpl.setProcessor(I)V
		//	code start: 7278
		//	code length: 2
		//	cp: 12584
		//	locals: 2 args size: 2
		7452674,
		12886018,
	//	12543: com.jopdesign.sys.RtThreadImpl.genInt()V
		//	code start: 7282
		//	code length: 5
		//	cp: 12584
		//	locals: 1 args size: 0
		7456773,
		12886048,
	//	12545: com.jopdesign.sys.RtThreadImpl.startThread()V
		//	code start: 7289
		//	code length: 21
		//	cp: 12584
		//	locals: 1 args size: 1
		7463957,
		12886017,
	//	12547: com.jopdesign.sys.RtThreadImpl.createStack()V
		//	code start: 7312
		//	code length: 34
		//	cp: 12584
		//	locals: 4 args size: 1
		7487522,
		12886113,
	//	12549: com.jopdesign.sys.RtThreadImpl.startMission()V
		//	code start: 7348
		//	code length: 117
		//	cp: 12584
		//	locals: 7 args size: 0
		7524469,
		12886240,
	//	12551: com.jopdesign.sys.RtThreadImpl.waitForNextPeriod()Z
		//	code start: 7467
		//	code length: 24
		//	cp: 12584
		//	locals: 5 args size: 1
		7646232,
		12886145,
	//	12553: com.jopdesign.sys.RtThreadImpl.setEvent()V
		//	code start: 7493
		//	code length: 2
		//	cp: 12584
		//	locals: 1 args size: 1
		7672834,
		12886017,
	//	12555: com.jopdesign.sys.RtThreadImpl.fire()V
		//	code start: 7497
		//	code length: 6
		//	cp: 12584
		//	locals: 1 args size: 1
		7676934,
		12886017,
	//	12557: com.jopdesign.sys.RtThreadImpl.blockEvent()V
		//	code start: 7505
		//	code length: 6
		//	cp: 12584
		//	locals: 1 args size: 1
		7685126,
		12886017,
	//	12559: com.jopdesign.sys.RtThreadImpl.sleepMs(I)V
		//	code start: 7513
		//	code length: 7
		//	cp: 12584
		//	locals: 2 args size: 1
		7693319,
		12886049,
	//	12561: com.jopdesign.sys.RtThreadImpl.busyWait(I)V
		//	code start: 7522
		//	code length: 9
		//	cp: 12584
		//	locals: 5 args size: 1
		7702537,
		12886145,
	//	12563: com.jopdesign.sys.RtThreadImpl.getStack(I)[I
		//	code start: 7533
		//	code length: 5
		//	cp: 12584
		//	locals: 1 args size: 1
		7713797,
		12886017,
	//	12565: com.jopdesign.sys.RtThreadImpl.getSP(I)I
		//	code start: 7540
		//	code length: 5
		//	cp: 12584
		//	locals: 1 args size: 1
		7720965,
		12886017,
	//	12567: com.jopdesign.sys.RtThreadImpl.getCnt()I
		//	code start: 7547
		//	code length: 4
		//	cp: 12584
		//	locals: 0 args size: 0
		7728132,
		12886016,
	//	12569: com.jopdesign.sys.RtThreadImpl.getActive()I
		//	code start: 7553
		//	code length: 4
		//	cp: 12584
		//	locals: 0 args size: 0
		7734276,
		12886016,
	//	12571: com.jopdesign.sys.RtThreadImpl.currentRtThread()Ljoprt/RtThread;
		//	code start: 7559
		//	code length: 9
		//	cp: 12584
		//	locals: 1 args size: 0
		7740425,
		12886048,
	//	12573: com.jopdesign.sys.RtThreadImpl.getCurrentScope()Lcom/jopdesign/sys/Scope;
		//	code start: 7570
		//	code length: 6
		//	cp: 12584
		//	locals: 1 args size: 0
		7751686,
		12886048,
	//	12575: com.jopdesign.sys.RtThreadImpl.setCurrentScope(Lcom/jopdesign/sys/Scope;)V
		//	code start: 7578
		//	code length: 11
		//	cp: 12584
		//	locals: 4 args size: 1
		7759883,
		12886113,
	//	12577: com.jopdesign.sys.RtThreadImpl.trace([II)V
		//	code start: 7591
		//	code length: 20
		//	cp: 12584
		//	locals: 9 args size: 2
		7773204,
		12886242,
	//	12579: com.jopdesign.sys.RtThreadImpl.access$000(Lcom/jopdesign/sys/RtThreadImpl;)V
		//	code start: 7613
		//	code length: 2
		//	cp: 12584
		//	locals: 1 args size: 1
		7795714,
		12886017,
	//	12581: com.jopdesign.sys.RtThreadImpl.<clinit>()V
		//	code start: 7617
		//	code length: 3
		//	cp: 12584
		//	locals: 0 args size: 0
		7799811,
		12886016,

		12518,	//	pointer back to class struct (cp-1)

//
//	12584: com.jopdesign.sys.RtThreadImpl constants
//
		23,	//	const pool length

		12539,	//	static, special or private com.jopdesign.sys.RtThreadImpl.<init>(Ljoprt/RtThread;III)V
		12523,	//	static, special or private java.lang.Object.<init>()V
		12535,	//	static, special or private com.jopdesign.sys.RtThreadImpl.init()V
		1234567,	//	Integer
		0,	//	static com.jopdesign.sys.Native.wr(II)V
		12547,	//	static, special or private com.jopdesign.sys.RtThreadImpl.createStack()V
		4608,	//	virtual index: 9 args: 1 joprt.RtThread.run()V
		0,	//	static com.jopdesign.sys.Native.rd(I)I
		12543,	//	static, special or private com.jopdesign.sys.RtThreadImpl.genInt()V
		0,	//	static com.jopdesign.sys.Native.getSP()I
		0,	//	static com.jopdesign.sys.Native.rdIntMem(I)I
		4096,	//	virtual index: 8 args: 1 com.jopdesign.sys.Scheduler.allocArrays()V
		4608,	//	virtual index: 9 args: 1 com.jopdesign.sys.Scheduler.addMain()V
		12545,	//	static, special or private com.jopdesign.sys.RtThreadImpl.startThread()V
		11733,	//	static, special or private com.jopdesign.sys.JVMHelp.addInterruptHandler(IILjava/lang/Runnable;)V
		11067,	//	Class: com.jopdesign.sys.RtThreadImpl$CMPStart
		11072,	//	static, special or private com.jopdesign.sys.RtThreadImpl$CMPStart.<init>()V
		9146,	//	static, special or private com.jopdesign.sys.Startup.setRunnable(Ljava/lang/Runnable;I)V
		0,	//	static com.jopdesign.sys.Native.rdMem(I)I
		11642,	//	static, special or private util.Dbg.intVal(I)V
		9735,	//	static, special or private com.jopdesign.io.IOFactory.getFactory()Lcom/jopdesign/io/IOFactory;
		7168,	//	virtual index: 14 args: 1 com.jopdesign.io.IOFactory.getSysDevice()Lcom/jopdesign/io/SysDevice;
